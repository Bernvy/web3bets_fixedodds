{
	"id": "ff4150b971246dcbfc1605dc5c5716e0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Web3BetsFO_flat.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/utils/structs/EnumerableSet.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/IAccessControl.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n\n// File: @openzeppelin/contracts/access/AccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/IAccessControlEnumerable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/access/AccessControlEnumerable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n// File: contracts/interface/IWeb3BetsFO.sol\n\n\n\npragma solidity ^0.8.4;\n\ninterface IWeb3BetsFO{\n\n    function ecosystemAddress() external view returns(address);\n\n    function holdersAddress() external view returns(address);\n\n    function stableCoin() external view returns(address);\n\n    function eventFactory() external view returns(address);\n\n    function marketFactory() external view returns(address);\n\n    function betFactory() external view returns(address);\n\n    function holdersVig() external view returns(uint);\n\n    function ecosystemVig() external view returns(uint);\n\n    function vigPercentage() external returns(uint);\n\n    function shareBetEarnings(uint256 _vigAmount) external;\n\n    function isSystemAdmin(address _account) external returns (bool);\n\n    function isEventAdmin(address _account) external returns (bool);\n\n    function isBlack(address _account) external returns (bool);\n}\n// File: contracts/Web3BetsFO.sol\n\n\n\npragma solidity ^0.8.4;\n\n\n\n\n\n/// @author Victor Okoro\n/// @title Web3Bets Contract for FixedOdds decentralized betting exchange\n/// @notice Contains Web3Bets ecosystem's variables and functions\n/// @custom:security contact okoro.victor@web3bets.io\n\n/* \ncopied and modified code logic from github Repo: https://github.com/wizardoma/web3_bets_contract.git\n*/\ncontract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {\n    using SafeERC20 for IERC20;\n    \n    address public override ecosystemAddress;\n    address public override holdersAddress;\n    address public override stableCoin;\n\n    address public override eventFactory;\n    address public override marketFactory;\n    address public override betFactory;\n\n    bytes32 public constant SYSTEM_ADMIN = keccak256(\"SYSTEM_ADMIN\");\n    bytes32 public constant EVENT_ADMIN = keccak256(\"EVENT_ADMIN\");\n    bytes32 public constant BLACKLIST = keccak256(\"BLACKLIST\");\n\n    uint256 public override holdersVig = 50;\n    uint256 public override ecosystemVig = 50;\n    uint256 public override vigPercentage = 10;\n    IERC20 private _stableCoinWrapper = IERC20(stableCoin);\n\n    modifier onlySystemAdmin() {\n        require(\n            hasRole(SYSTEM_ADMIN, msg.sender),\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n\n    constructor() {\n        // Grant the contract deployer the default admin role: it will be able\n        // to grant and revoke any roles\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(SYSTEM_ADMIN, msg.sender);\n        _setupRole(EVENT_ADMIN, msg.sender);\n        _setRoleAdmin(EVENT_ADMIN, SYSTEM_ADMIN);\n        _setupRole(BLACKLIST, address(0));\n        _setRoleAdmin(BLACKLIST, SYSTEM_ADMIN);\n    }\n    \n    function setHoldersAddress(address holder) external onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEcosystemAddress(address holder) external onlySystemAdmin {\n        ecosystemAddress = holder;\n    }\n\n    function setStableCoin(address holder) external onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEventFactory(address _factory) external onlySystemAdmin {\n        eventFactory = _factory;\n    }\n\n    function setMarketFactory(address _factory) external onlySystemAdmin {\n        marketFactory = _factory;\n    }\n\n    function setBetFactory(address _factory) external onlySystemAdmin {\n        betFactory = _factory;\n    }\n\n    function setVigPercentage(uint256 _percentage) external onlySystemAdmin {\n        require(\n            _percentage < 10,\n            \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\"\n        );\n        vigPercentage = _percentage;\n    }\n\n    function setVigPercentageShares(\n        uint256 hVig,\n        uint256 eVig\n    ) public onlySystemAdmin {\n        require(\n            hVig <= 100 && eVig <= 100,\n            \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\"\n        );\n        require(\n            hVig + eVig  == 100,\n            \"The sum of all Vig percentage shares must be equal to 100\"\n        );\n\n        holdersVig = hVig;\n        ecosystemVig = eVig;\n    }\n\n    function shareBetEarnings(uint256 _vigAmount) external override {\n        require(_vigAmount > 0, \"bet earnings must be greater than 0\");\n        uint256 holdersShare = (_vigAmount * holdersVig )/ 100;\n        require(holdersShare > 0, \"holders' share must be greater than 0\");\n        uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100;\n        require(ecosystemShare > 0, \"ecosystem share must be greater than 0\");\n\n        _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare);\n\n        _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare);\n    }\n\n    function isSystemAdmin(address _account) external view override returns (bool) {\n        return hasRole(SYSTEM_ADMIN, _account);\n    }\n\n    function isEventAdmin(address _account) external view override returns (bool) {\n        return hasRole(EVENT_ADMIN, _account);\n    }\n\n    function isBlack(address _account) external view override returns (bool) {\n        return hasRole(BLACKLIST, _account);\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Web3BetsFO_flat.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 969,
								"contract": "Web3BetsFO_flat.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)964_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)964_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)964_storage"
							},
							"t_struct(RoleData)964_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 961,
										"contract": "Web3BetsFO_flat.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 963,
										"contract": "Web3BetsFO_flat.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 969,
								"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)964_storage)"
							},
							{
								"astId": 1302,
								"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)311_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)311_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)311_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)964_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)964_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)311_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 310,
										"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)10_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)964_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 961,
										"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 963,
										"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)10_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 5,
										"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 9,
										"contract": "Web3BetsFO_flat.sol:AccessControlEnumerable",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Web3BetsFO_flat.sol\":32668:40779  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Web3BetsFO_flat.sol\":32668:40779  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b0d74cf9b66b0b1710796a8dad0e01ff9989f6573fbdeb960bf028c605ea084f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0d74cf9b66b0b1710796a8dad0e01ff9989f6573fbdeb960bf028c605ea084f64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xD7 0x4C 0xF9 0xB6 PUSH12 0xB1710796A8DAD0E01FF9989 0xF6 JUMPI EXTCODEHASH 0xBD 0xEB SWAP7 SIGNEXTEND CREATE 0x28 0xC6 SDIV 0xEA ADDMOD 0x4F PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "32668:8111:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;32668:8111:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0d74cf9b66b0b1710796a8dad0e01ff9989f6573fbdeb960bf028c605ea084f64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xD7 0x4C 0xF9 0xB6 PUSH12 0xB1710796A8DAD0E01FF9989 0xF6 JUMPI EXTCODEHASH 0xBD 0xEB SWAP7 SIGNEXTEND CREATE 0x28 0xC6 SDIV 0xEA ADDMOD 0x4F PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "32668:8111:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32668,
									"end": 40779,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0d74cf9b66b0b1710796a8dad0e01ff9989f6573fbdeb960bf028c605ea084f64736f6c63430008040033",
									".code": [
										{
											"begin": 32668,
											"end": 40779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32668,
											"end": 40779,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Web3BetsFO_flat.sol\":1296:12750  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Web3BetsFO_flat.sol\":1296:12750  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220acac5ce502a7ffe3a8a2bedcc2ae837950965432cc2c4e139ca1b4505129b1fb64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220acac5ce502a7ffe3a8a2bedcc2ae837950965432cc2c4e139ca1b4505129b1fb64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xAC 0x5C 0xE5 MUL 0xA7 SELFDESTRUCT 0xE3 0xA8 LOG2 0xBE 0xDC 0xC2 0xAE DUP4 PUSH26 0x50965432CC2C4E139CA1B4505129B1FB64736F6C634300080400 CALLER ",
							"sourceMap": "1296:11454:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1296:11454:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220acac5ce502a7ffe3a8a2bedcc2ae837950965432cc2c4e139ca1b4505129b1fb64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xAC 0x5C 0xE5 MUL 0xA7 SELFDESTRUCT 0xE3 0xA8 LOG2 0xBE 0xDC 0xC2 0xAE DUP4 PUSH26 0x50965432CC2C4E139CA1B4505129B1FB64736F6C634300080400 CALLER ",
							"sourceMap": "1296:11454:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1296,
									"end": 12750,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220acac5ce502a7ffe3a8a2bedcc2ae837950965432cc2c4e139ca1b4505129b1fb64736f6c63430008040033",
									".code": [
										{
											"begin": 1296,
											"end": 12750,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 12750,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"IAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWeb3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"betFactory()": "2e1a9618",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventFactory()": "6fdbd3f6",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"IWeb3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Web3BetsFO_flat.sol\":46513:50261  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Web3BetsFO_flat.sol\":46513:50261  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c18b269e093af400d9036e17980a081913b3e9de08c4e3593e3fb99f26c71fc564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c18b269e093af400d9036e17980a081913b3e9de08c4e3593e3fb99f26c71fc564736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP12 0x26 SWAP15 MULMOD GASPRICE DELEGATECALL STOP 0xD9 SUB PUSH15 0x17980A081913B3E9DE08C4E3593E3F 0xB9 SWAP16 0x26 0xC7 0x1F 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "46513:3748:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;46513:3748:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c18b269e093af400d9036e17980a081913b3e9de08c4e3593e3fb99f26c71fc564736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 DUP12 0x26 SWAP15 MULMOD GASPRICE DELEGATECALL STOP 0xD9 SUB PUSH15 0x17980A081913B3E9DE08C4E3593E3F 0xB9 SWAP16 0x26 0xC7 0x1F 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "46513:3748:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46513,
									"end": 50261,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c18b269e093af400d9036e17980a081913b3e9de08c4e3593e3fb99f26c71fc564736f6c63430008040033",
									".code": [
										{
											"begin": 46513,
											"end": 50261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46513,
											"end": 50261,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Web3BetsFO_flat.sol\":14821:17056  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Web3BetsFO_flat.sol\":14821:17056  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201fc1e4a40c7aaa7849e54f81a7346a7762ecdf031d16f1fabaa6e979b45b82a264736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fc1e4a40c7aaa7849e54f81a7346a7762ecdf031d16f1fabaa6e979b45b82a264736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xC1 0xE4 LOG4 0xC PUSH27 0xAA7849E54F81A7346A7762ECDF031D16F1FABAA6E979B45B82A264 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "14821:2235:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14821:2235:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201fc1e4a40c7aaa7849e54f81a7346a7762ecdf031d16f1fabaa6e979b45b82a264736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xC1 0xE4 LOG4 0xC PUSH27 0xAA7849E54F81A7346A7762ECDF031D16F1FABAA6E979B45B82A264 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "14821:2235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14821,
									"end": 17056,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201fc1e4a40c7aaa7849e54f81a7346a7762ecdf031d16f1fabaa6e979b45b82a264736f6c63430008040033",
									".code": [
										{
											"begin": 14821,
											"end": 17056,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14821,
											"end": 17056,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Web3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLACKLIST",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EVENT_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SYSTEM_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setBetFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setEventFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setHoldersAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setMarketFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								}
							],
							"name": "setVigPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "hVig",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "eVig",
									"type": "uint256"
								}
							],
							"name": "setVigPercentageShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Victor Okoro",
						"custom:security": "contact okoro.victor@web3bets.io",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "Web3Bets Contract for FixedOdds decentralized betting exchange",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Web3BetsFO_flat.sol\":51559:55339  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\n  mstore(0x40, 0x80)\n    /* \"Web3BetsFO_flat.sol\":52159:52161  50 */\n  0x32\n    /* \"Web3BetsFO_flat.sol\":52122:52161  uint256 public override holdersVig = 50 */\n  0x08\n  dup2\n  swap1\n  sstore\n    /* \"Web3BetsFO_flat.sol\":52167:52208  uint256 public override ecosystemVig = 50 */\n  0x09\n  sstore\n    /* \"Web3BetsFO_flat.sol\":52254:52256  10 */\n  0x0a\n    /* \"Web3BetsFO_flat.sol\":52214:52256  uint256 public override vigPercentage = 10 */\n  dup1\n  sstore\n    /* \"Web3BetsFO_flat.sol\":52305:52315  stableCoin */\n  sload(0x04)\n    /* \"Web3BetsFO_flat.sol\":52262:52316  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  0x0b\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Web3BetsFO_flat.sol\":52305:52315  stableCoin */\n  swap1\n  swap3\n  and\n    /* \"Web3BetsFO_flat.sol\":52262:52316  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Web3BetsFO_flat.sol\":52506:52931  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Web3BetsFO_flat.sol\":52650:52692  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"Web3BetsFO_flat.sol\":22840:22844  0x00 */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":52681:52691  msg.sender */\n  caller\n    /* \"Web3BetsFO_flat.sol\":52650:52660  _setupRole */\n  tag_5\n    /* \"Web3BetsFO_flat.sol\":52650:52692  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n    /* \"Web3BetsFO_flat.sol\":52702:52738  _setupRole(SYSTEM_ADMIN, msg.sender) */\n  tag_6\n  0x00\n  dup1\n  mload\n  0x20\n  data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":52727:52737  msg.sender */\n  caller\n    /* \"Web3BetsFO_flat.sol\":52702:52712  _setupRole */\n  tag_5\n    /* \"Web3BetsFO_flat.sol\":52702:52738  _setupRole(SYSTEM_ADMIN, msg.sender) */\n  jump\t// in\ntag_6:\n    /* \"Web3BetsFO_flat.sol\":52748:52783  _setupRole(EVENT_ADMIN, msg.sender) */\n  tag_7\n  0x00\n  dup1\n  mload\n  0x20\n  data_1509970658320cf711c24d98099e2b1d5dfd240ba4e3e67eedd50a039033d4bf\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":52772:52782  msg.sender */\n  caller\n    /* \"Web3BetsFO_flat.sol\":52748:52758  _setupRole */\n  tag_5\n    /* \"Web3BetsFO_flat.sol\":52748:52783  _setupRole(EVENT_ADMIN, msg.sender) */\n  jump\t// in\ntag_7:\n    /* \"Web3BetsFO_flat.sol\":52793:52833  _setRoleAdmin(EVENT_ADMIN, SYSTEM_ADMIN) */\n  tag_8\n  0x00\n  dup1\n  mload\n  0x20\n  data_1509970658320cf711c24d98099e2b1d5dfd240ba4e3e67eedd50a039033d4bf\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":52793:52806  _setRoleAdmin */\n  tag_9\n    /* \"Web3BetsFO_flat.sol\":52793:52833  _setRoleAdmin(EVENT_ADMIN, SYSTEM_ADMIN) */\n  jump\t// in\ntag_8:\n    /* \"Web3BetsFO_flat.sol\":52843:52876  _setupRole(BLACKLIST, address(0)) */\n  tag_10\n  0x00\n  dup1\n  mload\n  0x20\n  data_66de2d57f1e19309316d1bec7e9bdee6dcd35ee6d22de30e180fb9858210c7e5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":52873:52874  0 */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":52843:52853  _setupRole */\n  tag_5\n    /* \"Web3BetsFO_flat.sol\":52843:52876  _setupRole(BLACKLIST, address(0)) */\n  jump\t// in\ntag_10:\n    /* \"Web3BetsFO_flat.sol\":52886:52924  _setRoleAdmin(BLACKLIST, SYSTEM_ADMIN) */\n  tag_11\n  0x00\n  dup1\n  mload\n  0x20\n  data_66de2d57f1e19309316d1bec7e9bdee6dcd35ee6d22de30e180fb9858210c7e5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":52886:52899  _setRoleAdmin */\n  tag_9\n    /* \"Web3BetsFO_flat.sol\":52886:52924  _setRoleAdmin(BLACKLIST, SYSTEM_ADMIN) */\n  jump\t// in\ntag_11:\n    /* \"Web3BetsFO_flat.sol\":51559:55339  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\n  jump(tag_12)\n    /* \"Web3BetsFO_flat.sol\":27592:27702  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"Web3BetsFO_flat.sol\":27670:27695  _grantRole(role, account) */\n  tag_14\n    /* \"Web3BetsFO_flat.sol\":27681:27685  role */\n  dup3\n    /* \"Web3BetsFO_flat.sol\":27687:27694  account */\n  dup3\n    /* \"Web3BetsFO_flat.sol\":27670:27680  _grantRole */\n  tag_15\n    /* \"Web3BetsFO_flat.sol\":27670:27695  _grantRole(role, account) */\n  jump\t// in\ntag_14:\n    /* \"Web3BetsFO_flat.sol\":27592:27702  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Web3BetsFO_flat.sol\":27827:28074  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_9:\n    /* \"Web3BetsFO_flat.sol\":27910:27935  bytes32 previousAdminRole */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":25259:25271  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"Web3BetsFO_flat.sol\":25259:25281  _roles[role].adminRole */\n  0x01\n  add\n  dup1\n  sload\n    /* \"Web3BetsFO_flat.sol\":27966:28000  _roles[role].adminRole = adminRole */\n  swap1\n  dup5\n  swap1\n  sstore\n    /* \"Web3BetsFO_flat.sol\":28015:28067  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap1\n  mload\n    /* \"Web3BetsFO_flat.sol\":25259:25281  _roles[role].adminRole */\n  swap1\n  swap2\n    /* \"Web3BetsFO_flat.sol\":27966:28000  _roles[role].adminRole = adminRole */\n  dup4\n  swap2\n    /* \"Web3BetsFO_flat.sol\":25259:25281  _roles[role].adminRole */\n  dup4\n  swap2\n    /* \"Web3BetsFO_flat.sol\":25259:25271  _roles[role] */\n  dup7\n  swap2\n    /* \"Web3BetsFO_flat.sol\":28015:28067  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap2\n    /* \"Web3BetsFO_flat.sol\":27910:27935  bytes32 previousAdminRole */\n  swap1\n    /* \"Web3BetsFO_flat.sol\":28015:28067  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  log4\n    /* \"Web3BetsFO_flat.sol\":27827:28074  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Web3BetsFO_flat.sol\":32023:32189  function _grantRole(bytes32 role, address account) internal virtual override {... */\ntag_15:\n    /* \"Web3BetsFO_flat.sol\":32110:32141  super._grantRole(role, account) */\n  tag_20\n    /* \"Web3BetsFO_flat.sol\":32127:32131  role */\n  dup3\n    /* \"Web3BetsFO_flat.sol\":32133:32140  account */\n  dup3\n    /* \"Web3BetsFO_flat.sol\":32110:32126  super._grantRole */\n  or(tag_0_161, shl(0x20, tag_21))\n    /* \"Web3BetsFO_flat.sol\":32110:32141  super._grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"Web3BetsFO_flat.sol\":32151:32169  _roleMembers[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":32151:32163  _roleMembers */\n  0x01\n    /* \"Web3BetsFO_flat.sol\":32151:32169  _roleMembers[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Web3BetsFO_flat.sol\":32151:32182  _roleMembers[role].add(account) */\n  tag_22\n  swap2\n    /* \"Web3BetsFO_flat.sol\":32174:32181  account */\n  dup4\n  swap1\n    /* \"Web3BetsFO_flat.sol\":32151:32173  _roleMembers[role].add */\n  tag_0_162\n  tag_23\n  dup3\n  shl\n  or\n    /* \"Web3BetsFO_flat.sol\":32151:32182  _roleMembers[role].add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_22:\n  pop\n    /* \"Web3BetsFO_flat.sol\":32023:32189  function _grantRole(bytes32 role, address account) internal virtual override {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Web3BetsFO_flat.sol\":28242:28475  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_21:\n    /* \"Web3BetsFO_flat.sol\":23749:23753  bool */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":23772:23784  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Web3BetsFO_flat.sol\":23772:23801  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"Web3BetsFO_flat.sol\":28320:28469  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"Web3BetsFO_flat.sol\":28363:28369  _roles */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":28363:28375  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Web3BetsFO_flat.sol\":28363:28392  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"Web3BetsFO_flat.sol\":28363:28399  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Web3BetsFO_flat.sol\":28395:28399  true */\n  0x01\n    /* \"Web3BetsFO_flat.sol\":28363:28399  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"Web3BetsFO_flat.sol\":28445:28457  _msgSender() */\n  tag_29\n    /* \"Web3BetsFO_flat.sol\":17798:17808  msg.sender */\n  caller\n  swap1\n    /* \"Web3BetsFO_flat.sol\":17719:17815  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"Web3BetsFO_flat.sol\":28445:28457  _msgSender() */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Web3BetsFO_flat.sol\":28418:28458  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"Web3BetsFO_flat.sol\":28436:28443  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Web3BetsFO_flat.sol\":28418:28458  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"Web3BetsFO_flat.sol\":28430:28434  role */\n  dup4\n    /* \"Web3BetsFO_flat.sol\":28418:28458  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"Web3BetsFO_flat.sol\":28242:28475  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Web3BetsFO_flat.sol\":8096:8246  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_23:\n    /* \"Web3BetsFO_flat.sol\":8166:8170  bool */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":8189:8239  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_32\n    /* \"Web3BetsFO_flat.sol\":8194:8197  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Web3BetsFO_flat.sol\":8214:8237  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"Web3BetsFO_flat.sol\":8189:8193  _add */\n  tag_33\n    /* \"Web3BetsFO_flat.sol\":8189:8239  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_32:\n    /* \"Web3BetsFO_flat.sol\":8182:8239  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"Web3BetsFO_flat.sol\":8096:8246  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_31:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Web3BetsFO_flat.sol\":2181:2585  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_33:\n    /* \"Web3BetsFO_flat.sol\":2244:2248  bool */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":4318:4337  set._indexes[value] */\n  dup2\n  dup2\n  mstore\n    /* \"Web3BetsFO_flat.sol\":4318:4330  set._indexes */\n  0x01\n  dup4\n  add\n    /* \"Web3BetsFO_flat.sol\":4318:4337  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"Web3BetsFO_flat.sol\":2260:2579  if (!_contains(set, value)) {... */\n  tag_39\n  jumpi\n  pop\n    /* \"Web3BetsFO_flat.sol\":2302:2325  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"Web3BetsFO_flat.sol\":2302:2313  set._values */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":2302:2325  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"Web3BetsFO_flat.sol\":2482:2500  set._values.length */\n  dup5\n  sload\n    /* \"Web3BetsFO_flat.sol\":2460:2479  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"Web3BetsFO_flat.sol\":2460:2472  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"Web3BetsFO_flat.sol\":2460:2479  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Web3BetsFO_flat.sol\":2460:2500  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Web3BetsFO_flat.sol\":2514:2525  return true */\n  jump(tag_31)\n    /* \"Web3BetsFO_flat.sol\":2260:2579  if (!_contains(set, value)) {... */\ntag_39:\n  pop\n    /* \"Web3BetsFO_flat.sol\":2563:2568  false */\n  0x00\n    /* \"Web3BetsFO_flat.sol\":2556:2568  return false */\n  jump(tag_31)\n    /* \"Web3BetsFO_flat.sol\":51559:55339  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_1509970658320cf711c24d98099e2b1d5dfd240ba4e3e67eedd50a039033d4bf b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0\ndata_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f 74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639\ndata_66de2d57f1e19309316d1bec7e9bdee6dcd35ee6d22de30e180fb9858210c7e5 c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c\n\nsub_0: assembly {\n        /* \"Web3BetsFO_flat.sol\":51559:55339  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6fdbd3f6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa8e01b28\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xcb146622\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xcb146622\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xcbf89c63\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd43cbb15\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd6c1ca26\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0xa8e01b28\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb501ec97\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc8b0cf68\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x91d14854\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9376b94c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x6fdbd3f6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x852757ad\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x89fefbe1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x327372e4\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x486d1e50\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x486d1e50\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4dcc434a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4fb43199\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x64886880\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x327372e4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x332daccf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x387440e6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x23af4e17\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x23af4e17\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a9618\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06a5cb3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06ae7095\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0da4ee50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Web3BetsFO_flat.sol\":30679:30891  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":3913:3927   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3906:3928   */\n      iszero\n        /* \"#utility.yul\":3888:3929   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3876:3878   */\n      0x20\n        /* \"#utility.yul\":3861:3879   */\n      add\n        /* \"Web3BetsFO_flat.sol\":30679:30891  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Web3BetsFO_flat.sol\":51662:51702  address public override ecosystemAddress */\n    tag_4:\n      sload(0x02)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3425:3457   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3407:3458   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3395:3397   */\n      0x20\n        /* \"#utility.yul\":3380:3398   */\n      add\n        /* \"Web3BetsFO_flat.sol\":51662:51702  address public override ecosystemAddress */\n      tag_47\n        /* \"#utility.yul\":3362:3464   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":51835:51872  address public override marketFactory */\n    tag_5:\n      sload(0x06)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":51708:51746  address public override holdersAddress */\n    tag_6:\n      sload(0x03)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":53173:53277  function setStableCoin(address holder) external onlySystemAdmin {... */\n    tag_7:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Web3BetsFO_flat.sol\":25159:25288  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_63\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"Web3BetsFO_flat.sol\":25233:25240  bytes32 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":25259:25271  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":25259:25281  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"Web3BetsFO_flat.sol\":25159:25288  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n    tag_63:\n      mload(0x40)\n        /* \"#utility.yul\":4086:4111   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"Web3BetsFO_flat.sol\":25159:25288  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      tag_47\n        /* \"#utility.yul\":4041:4117   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":51878:51912  address public override betFactory */\n    tag_9:\n      sload(0x07)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":25584:25729  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_59\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":55211:55336  function isBlack(address _account) external view override returns (bool) {... */\n    tag_12:\n      tag_43\n      tag_80\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":26693:26907  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_13:\n      tag_59\n      tag_84\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":52214:52256  uint256 public override vigPercentage = 10 */\n    tag_14:\n      tag_63\n      sload(0x0a)\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":52122:52161  uint256 public override holdersVig = 50 */\n    tag_15:\n      tag_63\n      sload(0x08)\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":53397:53507  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n    tag_16:\n      tag_59\n      tag_94\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":54933:55067  function isSystemAdmin(address _account) external view override returns (bool) {... */\n    tag_17:\n      tag_43\n      tag_97\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":53884:54343  function setVigPercentageShares(... */\n    tag_18:\n      tag_59\n      tag_101\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":51793:51829  address public override eventFactory */\n    tag_19:\n      sload(0x05)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":51919:51983  bytes32 public constant SYSTEM_ADMIN = keccak256(\"SYSTEM_ADMIN\") */\n    tag_20:\n      tag_63\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":53513:53617  function setBetFactory(address _factory) external onlySystemAdmin {... */\n    tag_21:\n      tag_59\n      tag_111\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":31476:31627  function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {... */\n    tag_22:\n      tag_49\n      tag_114\n      calldatasize\n      0x04\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":23663:23808  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_23:\n      tag_43\n      tag_119\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":52167:52208  uint256 public override ecosystemVig = 50 */\n    tag_24:\n      tag_63\n      sload(0x09)\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":51752:51786  address public override stableCoin */\n    tag_25:\n      sload(0x04)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":22795:22844  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_26:\n      tag_63\n        /* \"Web3BetsFO_flat.sol\":22840:22844  0x00 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":22795:22844  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":53055:53167  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n    tag_27:\n      tag_59\n      tag_132\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":51989:52051  bytes32 public constant EVENT_ADMIN = keccak256(\"EVENT_ADMIN\") */\n    tag_28:\n      tag_63\n        /* \"Web3BetsFO_flat.sol\":52027:52051  keccak256(\"EVENT_ADMIN\") */\n      0xb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0\n        /* \"Web3BetsFO_flat.sol\":51989:52051  bytes32 public constant EVENT_ADMIN = keccak256(\"EVENT_ADMIN\") */\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":52057:52115  bytes32 public constant BLACKLIST = keccak256(\"BLACKLIST\") */\n    tag_29:\n      tag_63\n        /* \"Web3BetsFO_flat.sol\":52093:52115  keccak256(\"BLACKLIST\") */\n      0xc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c\n        /* \"Web3BetsFO_flat.sol\":52057:52115  bytes32 public constant BLACKLIST = keccak256(\"BLACKLIST\") */\n      dup2\n      jump\n        /* \"Web3BetsFO_flat.sol\":31795:31935  function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {... */\n    tag_30:\n      tag_63\n      tag_141\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":55073:55205  function isEventAdmin(address _account) external view override returns (bool) {... */\n    tag_31:\n      tag_43\n      tag_145\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":54349:54927  function shareBetEarnings(uint256 _vigAmount) external override {... */\n    tag_32:\n      tag_59\n      tag_149\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":53283:53391  function setEventFactory(address _factory) external onlySystemAdmin {... */\n    tag_33:\n      tag_59\n      tag_153\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":26009:26156  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_34:\n      tag_59\n      tag_156\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":53623:53878  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_35:\n      tag_59\n      tag_159\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":30679:30891  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_46:\n        /* \"Web3BetsFO_flat.sol\":30764:30768  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Web3BetsFO_flat.sol\":30787:30844  interfaceId == type(IAccessControlEnumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5a05180f)\n      eq\n      dup1\n        /* \"Web3BetsFO_flat.sol\":30787:30884  interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_165\n      jumpi\n      pop\n        /* \"Web3BetsFO_flat.sol\":30848:30884  super.supportsInterface(interfaceId) */\n      tag_165\n        /* \"Web3BetsFO_flat.sol\":30872:30883  interfaceId */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":30848:30871  super.supportsInterface */\n      tag_166\n        /* \"Web3BetsFO_flat.sol\":30848:30884  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_165:\n        /* \"Web3BetsFO_flat.sol\":30780:30884  return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"Web3BetsFO_flat.sol\":30679:30891  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":53173:53277  function setStableCoin(address holder) external onlySystemAdmin {... */\n    tag_62:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_168\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_168:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"Web3BetsFO_flat.sol\":53247:53261  holdersAddress */\n      0x03\n        /* \"Web3BetsFO_flat.sol\":53247:53270  holdersAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53173:53277  function setStableCoin(address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":25584:25729  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_75:\n        /* \"Web3BetsFO_flat.sol\":25233:25240  bytes32 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":25259:25271  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":25259:25281  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"Web3BetsFO_flat.sol\":23273:23289  _checkRole(role) */\n      tag_176\n        /* \"Web3BetsFO_flat.sol\":23284:23288  role */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":23273:23283  _checkRole */\n      tag_177\n        /* \"Web3BetsFO_flat.sol\":23273:23289  _checkRole(role) */\n      jump\t// in\n    tag_176:\n        /* \"Web3BetsFO_flat.sol\":25697:25722  _grantRole(role, account) */\n      tag_179\n        /* \"Web3BetsFO_flat.sol\":25708:25712  role */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":25714:25721  account */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":25697:25707  _grantRole */\n      tag_180\n        /* \"Web3BetsFO_flat.sol\":25697:25722  _grantRole(role, account) */\n      jump\t// in\n    tag_179:\n        /* \"Web3BetsFO_flat.sol\":25584:25729  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":55211:55336  function isBlack(address _account) external view override returns (bool) {... */\n    tag_81:\n        /* \"Web3BetsFO_flat.sol\":55278:55282  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":55301:55329  hasRole(BLACKLIST, _account) */\n      tag_165\n        /* \"Web3BetsFO_flat.sol\":52093:52115  keccak256(\"BLACKLIST\") */\n      0xc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c\n        /* \"Web3BetsFO_flat.sol\":55320:55328  _account */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":55301:55308  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":55301:55329  hasRole(BLACKLIST, _account) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":26693:26907  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":26788:26811  account == _msgSender() */\n      dup2\n      and\n        /* \"Web3BetsFO_flat.sol\":17798:17808  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":26788:26811  account == _msgSender() */\n      eq\n        /* \"Web3BetsFO_flat.sol\":26780:26863  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9261:9263   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":26780:26863  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9243:9264   */\n      mstore\n        /* \"#utility.yul\":9300:9302   */\n      0x2f\n        /* \"#utility.yul\":9280:9298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9273:9303   */\n      mstore\n        /* \"#utility.yul\":9339:9373   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":9319:9337   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9312:9374   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":9390:9408   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9383:9428   */\n      mstore\n        /* \"#utility.yul\":9445:9464   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":26780:26863  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_170\n        /* \"#utility.yul\":9233:9470   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":26780:26863  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_191:\n        /* \"Web3BetsFO_flat.sol\":26874:26900  _revokeRole(role, account) */\n      tag_194\n        /* \"Web3BetsFO_flat.sol\":26886:26890  role */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":26892:26899  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":26874:26885  _revokeRole */\n      tag_195\n        /* \"Web3BetsFO_flat.sol\":26874:26900  _revokeRole(role, account) */\n      jump\t// in\n    tag_194:\n        /* \"Web3BetsFO_flat.sol\":26693:26907  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":53397:53507  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n    tag_95:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_197\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_197:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_198:\n        /* \"Web3BetsFO_flat.sol\":53476:53489  marketFactory */\n      0x06\n        /* \"Web3BetsFO_flat.sol\":53476:53500  marketFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53397:53507  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":54933:55067  function isSystemAdmin(address _account) external view override returns (bool) {... */\n    tag_98:\n        /* \"Web3BetsFO_flat.sol\":55006:55010  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":55029:55060  hasRole(SYSTEM_ADMIN, _account) */\n      tag_165\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":55051:55059  _account */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":55029:55036  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":55029:55060  hasRole(SYSTEM_ADMIN, _account) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":53884:54343  function setVigPercentageShares(... */\n    tag_103:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_204\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_204:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_205:\n        /* \"Web3BetsFO_flat.sol\":54028:54031  100 */\n      0x64\n        /* \"Web3BetsFO_flat.sol\":54020:54024  hVig */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":54020:54031  hVig <= 100 */\n      gt\n      iszero\n        /* \"Web3BetsFO_flat.sol\":54020:54046  hVig <= 100 && eVig <= 100 */\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"Web3BetsFO_flat.sol\":54043:54046  100 */\n      0x64\n        /* \"Web3BetsFO_flat.sol\":54035:54039  eVig */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":54035:54046  eVig <= 100 */\n      gt\n      iszero\n        /* \"Web3BetsFO_flat.sol\":54020:54046  hVig <= 100 && eVig <= 100 */\n    tag_208:\n        /* \"Web3BetsFO_flat.sol\":53999:54146  require(... */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5499:5501   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":53999:54146  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5481:5502   */\n      mstore\n        /* \"#utility.yul\":5538:5540   */\n      0x4a\n        /* \"#utility.yul\":5518:5536   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5511:5541   */\n      mstore\n        /* \"#utility.yul\":5577:5611   */\n      0x5669672070657263656e746167657320736861726573206d7573742062652065\n        /* \"#utility.yul\":5557:5575   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5550:5612   */\n      mstore\n        /* \"#utility.yul\":5648:5682   */\n      0x787072657373656420696e206120203020746f2031303020726174696f2e2045\n        /* \"#utility.yul\":5628:5646   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5621:5683   */\n      mstore\n      shl(0xb4, 0x078616d706c653a20333)\n        /* \"#utility.yul\":5699:5718   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5692:5733   */\n      mstore\n        /* \"#utility.yul\":5750:5769   */\n      0xa4\n      add\n        /* \"Web3BetsFO_flat.sol\":53999:54146  require(... */\n      tag_170\n        /* \"#utility.yul\":5471:5775   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":53999:54146  require(... */\n    tag_209:\n        /* \"Web3BetsFO_flat.sol\":54177:54188  hVig + eVig */\n      tag_212\n        /* \"Web3BetsFO_flat.sol\":54184:54188  eVig */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":54177:54181  hVig */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":54177:54188  hVig + eVig */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"Web3BetsFO_flat.sol\":54193:54196  100 */\n      0x64\n        /* \"Web3BetsFO_flat.sol\":54177:54196  hVig + eVig  == 100 */\n      eq\n        /* \"Web3BetsFO_flat.sol\":54156:54279  require(... */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5073:5075   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":54156:54279  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5055:5076   */\n      mstore\n        /* \"#utility.yul\":5112:5114   */\n      0x39\n        /* \"#utility.yul\":5092:5110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5085:5115   */\n      mstore\n        /* \"#utility.yul\":5151:5185   */\n      0x5468652073756d206f6620616c6c205669672070657263656e74616765207368\n        /* \"#utility.yul\":5131:5149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5124:5186   */\n      mstore\n        /* \"#utility.yul\":5222:5249   */\n      0x61726573206d75737420626520657175616c20746f2031303000000000000000\n        /* \"#utility.yul\":5202:5220   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5195:5250   */\n      mstore\n        /* \"#utility.yul\":5267:5286   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":54156:54279  require(... */\n      tag_170\n        /* \"#utility.yul\":5045:5292   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":54156:54279  require(... */\n    tag_214:\n        /* \"Web3BetsFO_flat.sol\":54290:54300  holdersVig */\n      0x08\n        /* \"Web3BetsFO_flat.sol\":54290:54307  holdersVig = hVig */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Web3BetsFO_flat.sol\":54317:54329  ecosystemVig */\n      0x09\n        /* \"Web3BetsFO_flat.sol\":54317:54336  ecosystemVig = eVig */\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53884:54343  function setVigPercentageShares(... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":53513:53617  function setBetFactory(address _factory) external onlySystemAdmin {... */\n    tag_112:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_218\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_218:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_219:\n        /* \"Web3BetsFO_flat.sol\":53589:53599  betFactory */\n      0x07\n        /* \"Web3BetsFO_flat.sol\":53589:53610  betFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53513:53617  function setBetFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":31476:31627  function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {... */\n    tag_116:\n        /* \"Web3BetsFO_flat.sol\":31566:31573  address */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":31592:31610  _roleMembers[role] */\n      dup3\n      dup2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":31592:31604  _roleMembers */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":31592:31610  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":31592:31620  _roleMembers[role].at(index) */\n      tag_223\n      swap1\n        /* \"Web3BetsFO_flat.sol\":31614:31619  index */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":31592:31613  _roleMembers[role].at */\n      tag_224\n        /* \"Web3BetsFO_flat.sol\":31592:31620  _roleMembers[role].at(index) */\n      jump\t// in\n    tag_223:\n        /* \"Web3BetsFO_flat.sol\":31585:31620  return _roleMembers[role].at(index) */\n      swap4\n        /* \"Web3BetsFO_flat.sol\":31476:31627  function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":23663:23808  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_120:\n        /* \"Web3BetsFO_flat.sol\":23749:23753  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":23772:23784  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":23772:23801  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Web3BetsFO_flat.sol\":23663:23808  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":53055:53167  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n    tag_133:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_227\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_227:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_228:\n        /* \"Web3BetsFO_flat.sol\":53135:53151  ecosystemAddress */\n      0x02\n        /* \"Web3BetsFO_flat.sol\":53135:53160  ecosystemAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53055:53167  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":31795:31935  function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {... */\n    tag_142:\n        /* \"Web3BetsFO_flat.sol\":31875:31882  uint256 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":31901:31919  _roleMembers[role] */\n      dup2\n      dup2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":31901:31913  _roleMembers */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":31901:31919  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":31901:31928  _roleMembers[role].length() */\n      tag_165\n      swap1\n        /* \"Web3BetsFO_flat.sol\":31901:31926  _roleMembers[role].length */\n      tag_233\n        /* \"Web3BetsFO_flat.sol\":31901:31928  _roleMembers[role].length() */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":55073:55205  function isEventAdmin(address _account) external view override returns (bool) {... */\n    tag_146:\n        /* \"Web3BetsFO_flat.sol\":55145:55149  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":55168:55198  hasRole(EVENT_ADMIN, _account) */\n      tag_165\n        /* \"Web3BetsFO_flat.sol\":52027:52051  keccak256(\"EVENT_ADMIN\") */\n      0xb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0\n        /* \"Web3BetsFO_flat.sol\":55189:55197  _account */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":55168:55175  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":55168:55198  hasRole(EVENT_ADMIN, _account) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":54349:54927  function shareBetEarnings(uint256 _vigAmount) external override {... */\n    tag_151:\n        /* \"Web3BetsFO_flat.sol\":54444:54445  0 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":54431:54441  _vigAmount */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":54431:54445  _vigAmount > 0 */\n      gt\n        /* \"Web3BetsFO_flat.sol\":54423:54485  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8857:8859   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":54423:54485  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8839:8860   */\n      mstore\n        /* \"#utility.yul\":8896:8898   */\n      0x23\n        /* \"#utility.yul\":8876:8894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8869:8899   */\n      mstore\n        /* \"#utility.yul\":8935:8969   */\n      0x626574206561726e696e6773206d757374206265206772656174657220746861\n        /* \"#utility.yul\":8915:8933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8908:8970   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":8986:9004   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8979:9012   */\n      mstore\n        /* \"#utility.yul\":9029:9048   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":54423:54485  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_170\n        /* \"#utility.yul\":8829:9054   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":54423:54485  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n    tag_237:\n        /* \"Web3BetsFO_flat.sol\":54495:54515  uint256 holdersShare */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":54546:54549  100 */\n      0x64\n        /* \"Web3BetsFO_flat.sol\":54532:54542  holdersVig */\n      sload(0x08)\n        /* \"Web3BetsFO_flat.sol\":54519:54529  _vigAmount */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":54519:54542  _vigAmount * holdersVig */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"Web3BetsFO_flat.sol\":54518:54549  (_vigAmount * holdersVig )/ 100 */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"Web3BetsFO_flat.sol\":54495:54549  uint256 holdersShare = (_vigAmount * holdersVig )/ 100 */\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":54582:54583  0 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":54567:54579  holdersShare */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":54567:54583  holdersShare > 0 */\n      gt\n        /* \"Web3BetsFO_flat.sol\":54559:54625  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7682:7684   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":54559:54625  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7664:7685   */\n      mstore\n        /* \"#utility.yul\":7721:7723   */\n      0x25\n        /* \"#utility.yul\":7701:7719   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7694:7724   */\n      mstore\n        /* \"#utility.yul\":7760:7794   */\n      0x686f6c6465727327207368617265206d75737420626520677265617465722074\n        /* \"#utility.yul\":7740:7758   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7733:7795   */\n      mstore\n      shl(0xdc, 0x068616e203)\n        /* \"#utility.yul\":7811:7829   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7804:7839   */\n      mstore\n        /* \"#utility.yul\":7856:7875   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":54559:54625  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_170\n        /* \"#utility.yul\":7654:7881   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":54559:54625  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n    tag_244:\n        /* \"Web3BetsFO_flat.sol\":54635:54657  uint256 ecosystemShare */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":54690:54693  100 */\n      0x64\n        /* \"Web3BetsFO_flat.sol\":54674:54686  ecosystemVig */\n      sload(0x09)\n        /* \"Web3BetsFO_flat.sol\":54661:54671  _vigAmount */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":54661:54686  _vigAmount * ecosystemVig */\n      tag_247\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_247:\n        /* \"Web3BetsFO_flat.sol\":54660:54693  (_vigAmount * ecosystemVig) / 100 */\n      tag_248\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_248:\n        /* \"Web3BetsFO_flat.sol\":54635:54693  uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100 */\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":54728:54729  0 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":54711:54725  ecosystemShare */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":54711:54729  ecosystemShare > 0 */\n      gt\n        /* \"Web3BetsFO_flat.sol\":54703:54772  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6389:6391   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":54703:54772  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6371:6392   */\n      mstore\n        /* \"#utility.yul\":6428:6430   */\n      0x26\n        /* \"#utility.yul\":6408:6426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6401:6431   */\n      mstore\n        /* \"#utility.yul\":6467:6501   */\n      0x65636f73797374656d207368617265206d757374206265206772656174657220\n        /* \"#utility.yul\":6447:6465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6440:6502   */\n      mstore\n      shl(0xd4, 0x07468616e203)\n        /* \"#utility.yul\":6518:6536   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6511:6547   */\n      mstore\n        /* \"#utility.yul\":6564:6583   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":54703:54772  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_170\n        /* \"#utility.yul\":6361:6589   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":54703:54772  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n    tag_249:\n        /* \"Web3BetsFO_flat.sol\":54815:54831  ecosystemAddress */\n      sload(0x02)\n        /* \"Web3BetsFO_flat.sol\":54783:54801  _stableCoinWrapper */\n      sload(0x0b)\n        /* \"Web3BetsFO_flat.sol\":54783:54848  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      tag_252\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":54783:54801  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Web3BetsFO_flat.sol\":54815:54831  ecosystemAddress */\n      and\n        /* \"Web3BetsFO_flat.sol\":54833:54847  ecosystemShare */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":54783:54814  _stableCoinWrapper.safeTransfer */\n      tag_253\n        /* \"Web3BetsFO_flat.sol\":54783:54848  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      jump\t// in\n    tag_252:\n        /* \"Web3BetsFO_flat.sol\":54891:54905  holdersAddress */\n      sload(0x03)\n        /* \"Web3BetsFO_flat.sol\":54859:54877  _stableCoinWrapper */\n      sload(0x0b)\n        /* \"Web3BetsFO_flat.sol\":54859:54920  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      tag_179\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":54859:54877  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Web3BetsFO_flat.sol\":54891:54905  holdersAddress */\n      and\n        /* \"Web3BetsFO_flat.sol\":54907:54919  holdersShare */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":54859:54890  _stableCoinWrapper.safeTransfer */\n      tag_253\n        /* \"Web3BetsFO_flat.sol\":54859:54920  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":53283:53391  function setEventFactory(address _factory) external onlySystemAdmin {... */\n    tag_154:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_256\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_256:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_257:\n        /* \"Web3BetsFO_flat.sol\":53361:53373  eventFactory */\n      0x05\n        /* \"Web3BetsFO_flat.sol\":53361:53384  eventFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53283:53391  function setEventFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":26009:26156  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_157:\n        /* \"Web3BetsFO_flat.sol\":25233:25240  bytes32 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":25259:25271  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":25259:25281  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"Web3BetsFO_flat.sol\":23273:23289  _checkRole(role) */\n      tag_262\n        /* \"Web3BetsFO_flat.sol\":23284:23288  role */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":23273:23283  _checkRole */\n      tag_177\n        /* \"Web3BetsFO_flat.sol\":23273:23289  _checkRole(role) */\n      jump\t// in\n    tag_262:\n        /* \"Web3BetsFO_flat.sol\":26123:26149  _revokeRole(role, account) */\n      tag_179\n        /* \"Web3BetsFO_flat.sol\":26135:26139  role */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":26141:26148  account */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":26123:26134  _revokeRole */\n      tag_195\n        /* \"Web3BetsFO_flat.sol\":26123:26149  _revokeRole(role, account) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":53623:53878  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_160:\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_266\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":52403:52413  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":52381:52388  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":52381:52414  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_266:\n        /* \"Web3BetsFO_flat.sol\":52360:52482  require(... */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_267:\n        /* \"Web3BetsFO_flat.sol\":53740:53742  10 */\n      0x0a\n        /* \"Web3BetsFO_flat.sol\":53726:53737  _percentage */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":53726:53742  _percentage < 10 */\n      lt\n        /* \"Web3BetsFO_flat.sol\":53705:53834  require(... */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6796:6798   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":53705:53834  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6778:6799   */\n      mstore\n        /* \"#utility.yul\":6835:6837   */\n      0x42\n        /* \"#utility.yul\":6815:6833   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6808:6838   */\n      mstore\n        /* \"#utility.yul\":6874:6908   */\n      0x5669672070657263656e74616765206d75737420626520657870726573736564\n        /* \"#utility.yul\":6854:6872   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6847:6909   */\n      mstore\n        /* \"#utility.yul\":6945:6979   */\n      0x20696e203020746f2031302070657263656e746167652e204578616d706c653a\n        /* \"#utility.yul\":6925:6943   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6918:6980   */\n      mstore\n      shl(0xf1, 0x101b)\n        /* \"#utility.yul\":6996:7015   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6989:7022   */\n      mstore\n        /* \"#utility.yul\":7039:7058   */\n      0xa4\n      add\n        /* \"Web3BetsFO_flat.sol\":53705:53834  require(... */\n      tag_170\n        /* \"#utility.yul\":6768:7064   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":53705:53834  require(... */\n    tag_270:\n        /* \"Web3BetsFO_flat.sol\":53844:53857  vigPercentage */\n      0x0a\n        /* \"Web3BetsFO_flat.sol\":53844:53871  vigPercentage = _percentage */\n      sstore\n        /* \"Web3BetsFO_flat.sol\":53623:53878  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":28242:28475  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_161:\n        /* \"Web3BetsFO_flat.sol\":28325:28347  hasRole(role, account) */\n      tag_274\n        /* \"Web3BetsFO_flat.sol\":28333:28337  role */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":28339:28346  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":28325:28332  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":28325:28347  hasRole(role, account) */\n      jump\t// in\n    tag_274:\n        /* \"Web3BetsFO_flat.sol\":28320:28469  if (!hasRole(role, account)) {... */\n      tag_194\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":28363:28369  _roles */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":28363:28375  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":28363:28392  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":28363:28399  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Web3BetsFO_flat.sol\":28395:28399  true */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":28363:28399  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":28445:28457  _msgSender() */\n      tag_276\n        /* \"Web3BetsFO_flat.sol\":17798:17808  msg.sender */\n      caller\n      swap1\n        /* \"Web3BetsFO_flat.sol\":17719:17815  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"Web3BetsFO_flat.sol\":28445:28457  _msgSender() */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":28418:28458  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"Web3BetsFO_flat.sol\":28436:28443  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":28418:28458  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"Web3BetsFO_flat.sol\":28430:28434  role */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":28418:28458  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Web3BetsFO_flat.sol\":28242:28475  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":8096:8246  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_162:\n        /* \"Web3BetsFO_flat.sol\":8166:8170  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":8189:8239  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_223\n        /* \"Web3BetsFO_flat.sol\":8194:8197  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":8214:8237  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Web3BetsFO_flat.sol\":8189:8193  _add */\n      tag_279\n        /* \"Web3BetsFO_flat.sol\":8189:8239  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":23374:23576  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_166:\n        /* \"Web3BetsFO_flat.sol\":23459:23463  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Web3BetsFO_flat.sol\":23482:23529  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"Web3BetsFO_flat.sol\":23482:23569  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_165\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Web3BetsFO_flat.sol\":14588:14628  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"Web3BetsFO_flat.sol\":23533:23569  super.supportsInterface(interfaceId) */\n      tag_165\n        /* \"Web3BetsFO_flat.sol\":14480:14635  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"Web3BetsFO_flat.sol\":24102:24205  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_177:\n        /* \"Web3BetsFO_flat.sol\":24168:24198  _checkRole(role, _msgSender()) */\n      tag_285\n        /* \"Web3BetsFO_flat.sol\":24179:24183  role */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":17798:17808  msg.sender */\n      caller\n        /* \"Web3BetsFO_flat.sol\":24168:24178  _checkRole */\n      tag_287\n        /* \"Web3BetsFO_flat.sol\":24168:24198  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_285:\n        /* \"Web3BetsFO_flat.sol\":24102:24205  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":32023:32189  function _grantRole(bytes32 role, address account) internal virtual override {... */\n    tag_180:\n        /* \"Web3BetsFO_flat.sol\":32110:32141  super._grantRole(role, account) */\n      tag_289\n        /* \"Web3BetsFO_flat.sol\":32127:32131  role */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":32133:32140  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":32110:32126  super._grantRole */\n      tag_161\n        /* \"Web3BetsFO_flat.sol\":32110:32141  super._grantRole(role, account) */\n      jump\t// in\n    tag_289:\n        /* \"Web3BetsFO_flat.sol\":32151:32169  _roleMembers[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":32151:32163  _roleMembers */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":32151:32169  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":32151:32182  _roleMembers[role].add(account) */\n      tag_179\n      swap1\n        /* \"Web3BetsFO_flat.sol\":32174:32181  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":32151:32173  _roleMembers[role].add */\n      tag_162\n        /* \"Web3BetsFO_flat.sol\":32151:32182  _roleMembers[role].add(account) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":32278:32449  function _revokeRole(bytes32 role, address account) internal virtual override {... */\n    tag_195:\n        /* \"Web3BetsFO_flat.sol\":32366:32398  super._revokeRole(role, account) */\n      tag_293\n        /* \"Web3BetsFO_flat.sol\":32384:32388  role */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":32390:32397  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":32366:32383  super._revokeRole */\n      tag_294\n        /* \"Web3BetsFO_flat.sol\":32366:32398  super._revokeRole(role, account) */\n      jump\t// in\n    tag_293:\n        /* \"Web3BetsFO_flat.sol\":32408:32426  _roleMembers[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":32408:32420  _roleMembers */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":32408:32426  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":32408:32442  _roleMembers[role].remove(account) */\n      tag_179\n      swap1\n        /* \"Web3BetsFO_flat.sol\":32434:32441  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":32408:32433  _roleMembers[role].remove */\n      tag_296\n        /* \"Web3BetsFO_flat.sol\":32408:32442  _roleMembers[role].remove(account) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":9354:9510  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_224:\n        /* \"Web3BetsFO_flat.sol\":9428:9435  address */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":9478:9500  _at(set._inner, index) */\n      tag_223\n        /* \"Web3BetsFO_flat.sol\":9482:9485  set */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":9494:9499  index */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":9478:9481  _at */\n      tag_299\n        /* \"Web3BetsFO_flat.sol\":9478:9500  _at(set._inner, index) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":8897:9012  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_233:\n        /* \"Web3BetsFO_flat.sol\":8960:8967  uint256 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":8986:9005  _length(set._inner) */\n      tag_165\n        /* \"Web3BetsFO_flat.sol\":8994:8997  set */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":4512:4530  set._values.length */\n      sload\n      swap1\n        /* \"Web3BetsFO_flat.sol\":4430:4537  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"Web3BetsFO_flat.sol\":46569:46774  function safeTransfer(... */\n    tag_253:\n        /* \"Web3BetsFO_flat.sol\":46708:46766  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3661:3693   */\n      dup5\n      and\n        /* \"Web3BetsFO_flat.sol\":46708:46766  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3694   */\n      mstore\n        /* \"#utility.yul\":3710:3728   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3703:3737   */\n      dup5\n      swap1\n      mstore\n        /* \"Web3BetsFO_flat.sol\":46708:46766  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3616:3634   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"Web3BetsFO_flat.sol\":46708:46766  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"Web3BetsFO_flat.sol\":46681:46767  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_179\n      swap1\n        /* \"Web3BetsFO_flat.sol\":46701:46706  token */\n      dup5\n      swap1\n        /* \"Web3BetsFO_flat.sol\":46681:46700  _callOptionalReturn */\n      tag_307\n        /* \"Web3BetsFO_flat.sol\":46681:46767  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":2181:2585  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_279:\n        /* \"Web3BetsFO_flat.sol\":2244:2248  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":4318:4337  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":4318:4330  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Web3BetsFO_flat.sol\":4318:4337  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Web3BetsFO_flat.sol\":2260:2579  if (!_contains(set, value)) {... */\n      tag_311\n      jumpi\n      pop\n        /* \"Web3BetsFO_flat.sol\":2302:2325  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Web3BetsFO_flat.sol\":2302:2313  set._values */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":2302:2325  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":2482:2500  set._values.length */\n      dup5\n      sload\n        /* \"Web3BetsFO_flat.sol\":2460:2479  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Web3BetsFO_flat.sol\":2460:2472  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Web3BetsFO_flat.sol\":2460:2479  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":2460:2500  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Web3BetsFO_flat.sol\":2514:2525  return true */\n      jump(tag_165)\n        /* \"Web3BetsFO_flat.sol\":2260:2579  if (!_contains(set, value)) {... */\n    tag_311:\n      pop\n        /* \"Web3BetsFO_flat.sol\":2563:2568  false */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":2556:2568  return false */\n      jump(tag_165)\n        /* \"Web3BetsFO_flat.sol\":24486:24978  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_287:\n        /* \"Web3BetsFO_flat.sol\":24574:24596  hasRole(role, account) */\n      tag_316\n        /* \"Web3BetsFO_flat.sol\":24582:24586  role */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":24588:24595  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":24574:24581  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":24574:24596  hasRole(role, account) */\n      jump\t// in\n    tag_316:\n        /* \"Web3BetsFO_flat.sol\":24569:24972  if (!hasRole(role, account)) {... */\n      tag_194\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":24757:24798  Strings.toHexString(uint160(account), 20) */\n      tag_318\n        /* \"Web3BetsFO_flat.sol\":24785:24792  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":24757:24798  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"Web3BetsFO_flat.sol\":24795:24797  20 */\n      0x14\n        /* \"Web3BetsFO_flat.sol\":24757:24776  Strings.toHexString */\n      tag_319\n        /* \"Web3BetsFO_flat.sol\":24757:24798  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_318:\n        /* \"Web3BetsFO_flat.sol\":24869:24907  Strings.toHexString(uint256(role), 32) */\n      tag_320\n        /* \"Web3BetsFO_flat.sol\":24897:24901  role */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":24904:24906  32 */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":24869:24888  Strings.toHexString */\n      tag_319\n        /* \"Web3BetsFO_flat.sol\":24869:24907  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_320:\n        /* \"Web3BetsFO_flat.sol\":24664:24929  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_321\n      swap3\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"Web3BetsFO_flat.sol\":24612:24961  revert(... */\n      dup3\n      mstore\n      tag_170\n      swap2\n      0x04\n      add\n      tag_324\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":28646:28880  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_294:\n        /* \"Web3BetsFO_flat.sol\":28729:28751  hasRole(role, account) */\n      tag_326\n        /* \"Web3BetsFO_flat.sol\":28737:28741  role */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":28743:28750  account */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":28729:28736  hasRole */\n      tag_120\n        /* \"Web3BetsFO_flat.sol\":28729:28751  hasRole(role, account) */\n      jump\t// in\n    tag_326:\n        /* \"Web3BetsFO_flat.sol\":28725:28874  if (hasRole(role, account)) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":28799:28804  false */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":28767:28779  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":28767:28796  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":28767:28804  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":28823:28863  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"Web3BetsFO_flat.sol\":17798:17808  msg.sender */\n      caller\n      swap3\n        /* \"Web3BetsFO_flat.sol\":28767:28779  _roles[role] */\n      dup6\n      swap2\n        /* \"Web3BetsFO_flat.sol\":28823:28863  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"Web3BetsFO_flat.sol\":28799:28804  false */\n      swap1\n        /* \"Web3BetsFO_flat.sol\":28823:28863  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"Web3BetsFO_flat.sol\":28646:28880  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":8414:8570  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_296:\n        /* \"Web3BetsFO_flat.sol\":8487:8491  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":8510:8563  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_223\n        /* \"Web3BetsFO_flat.sol\":8518:8521  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":8538:8561  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Web3BetsFO_flat.sol\":8510:8517  _remove */\n      tag_331\n        /* \"Web3BetsFO_flat.sol\":8510:8563  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"Web3BetsFO_flat.sol\":4879:4997  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_299:\n        /* \"Web3BetsFO_flat.sol\":4946:4953  bytes32 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":4972:4975  set */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":4972:4983  set._values */\n      0x00\n      add\n        /* \"Web3BetsFO_flat.sol\":4984:4989  index */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":4972:4990  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_333\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_333:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Web3BetsFO_flat.sol\":4965:4990  return set._values[index] */\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":4879:4997  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":49553:50259  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_307:\n        /* \"Web3BetsFO_flat.sol\":49972:49995  bytes memory returndata */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":49998:50067  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_337\n        /* \"Web3BetsFO_flat.sol\":50026:50030  data */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":49998:50067  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Web3BetsFO_flat.sol\":50006:50011  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":49998:50025  address(token).functionCall */\n      and\n      tag_338\n      swap1\n        /* \"Web3BetsFO_flat.sol\":49998:50067  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"Web3BetsFO_flat.sol\":50081:50098  returndata.length */\n      dup1\n      mload\n        /* \"Web3BetsFO_flat.sol\":49972:50067  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"Web3BetsFO_flat.sol\":50081:50102  returndata.length > 0 */\n      iszero\n        /* \"Web3BetsFO_flat.sol\":50077:50253  if (returndata.length > 0) {... */\n      tag_179\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":50176:50186  returndata */\n      dup1\n        /* \"Web3BetsFO_flat.sol\":50165:50195  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_340\n      swap2\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"Web3BetsFO_flat.sol\":50157:50242  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8446:8448   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":50157:50242  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8428:8449   */\n      mstore\n        /* \"#utility.yul\":8485:8487   */\n      0x2a\n        /* \"#utility.yul\":8465:8483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8458:8488   */\n      mstore\n        /* \"#utility.yul\":8524:8558   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8504:8522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8497:8559   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":8575:8593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8568:8608   */\n      mstore\n        /* \"#utility.yul\":8625:8644   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":50157:50242  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_170\n        /* \"#utility.yul\":8418:8650   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":16312:16753  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_319:\n        /* \"Web3BetsFO_flat.sol\":16387:16400  string memory */\n      0x60\n        /* \"Web3BetsFO_flat.sol\":16412:16431  bytes memory buffer */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":16444:16454  2 * length */\n      tag_347\n        /* \"Web3BetsFO_flat.sol\":16448:16454  length */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":16444:16445  2 */\n      0x02\n        /* \"Web3BetsFO_flat.sol\":16444:16454  2 * length */\n      tag_241\n      jump\t// in\n    tag_347:\n        /* \"Web3BetsFO_flat.sol\":16444:16458  2 * length + 2 */\n      tag_348\n      swap1\n        /* \"Web3BetsFO_flat.sol\":16457:16458  2 */\n      0x02\n        /* \"Web3BetsFO_flat.sol\":16444:16458  2 * length + 2 */\n      tag_213\n      jump\t// in\n    tag_348:\n        /* \"Web3BetsFO_flat.sol\":16434:16459  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_349\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_349:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_350\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_350:\n      pop\n        /* \"Web3BetsFO_flat.sol\":16412:16459  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"Web3BetsFO_flat.sol\":16469:16475  buffer */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":16476:16477  0 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":16469:16478  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_351\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_351:\n      0x20\n      add\n      add\n        /* \"Web3BetsFO_flat.sol\":16469:16484  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"Web3BetsFO_flat.sol\":16494:16500  buffer */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":16501:16502  1 */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":16494:16503  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_352\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_352:\n      0x20\n      add\n      add\n        /* \"Web3BetsFO_flat.sol\":16494:16509  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Web3BetsFO_flat.sol\":16524:16533  uint256 i */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":16536:16546  2 * length */\n      tag_356\n        /* \"Web3BetsFO_flat.sol\":16540:16546  length */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":16536:16537  2 */\n      0x02\n        /* \"Web3BetsFO_flat.sol\":16536:16546  2 * length */\n      tag_241\n      jump\t// in\n    tag_356:\n        /* \"Web3BetsFO_flat.sol\":16536:16550  2 * length + 1 */\n      tag_357\n      swap1\n        /* \"Web3BetsFO_flat.sol\":16549:16550  1 */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":16536:16550  2 * length + 1 */\n      tag_213\n      jump\t// in\n    tag_357:\n        /* \"Web3BetsFO_flat.sol\":16524:16550  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":16519:16651  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_353:\n        /* \"Web3BetsFO_flat.sol\":16556:16557  1 */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":16552:16553  i */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":16552:16557  i > 1 */\n      gt\n        /* \"Web3BetsFO_flat.sol\":16519:16651  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_354\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"Web3BetsFO_flat.sol\":16603:16608  value */\n      dup6\n        /* \"Web3BetsFO_flat.sol\":16611:16614  0xf */\n      0x0f\n        /* \"Web3BetsFO_flat.sol\":16603:16614  value & 0xf */\n      and\n        /* \"Web3BetsFO_flat.sol\":16590:16615  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_358\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_358:\n      byte\n      0xf8\n      shl\n        /* \"Web3BetsFO_flat.sol\":16578:16584  buffer */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":16585:16586  i */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":16578:16587  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_359\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_359:\n      0x20\n      add\n      add\n        /* \"Web3BetsFO_flat.sol\":16578:16615  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"Web3BetsFO_flat.sol\":16639:16640  4 */\n      0x04\n        /* \"Web3BetsFO_flat.sol\":16629:16640  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"Web3BetsFO_flat.sol\":16559:16562  --i */\n      tag_360\n      dup2\n      tag_361\n      jump\t// in\n    tag_360:\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":16519:16651  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_353)\n    tag_354:\n      pop\n        /* \"Web3BetsFO_flat.sol\":16668:16678  value == 0 */\n      dup4\n      iszero\n        /* \"Web3BetsFO_flat.sol\":16660:16715  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4712:4714   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":16660:16715  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4694:4715   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4731:4749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4724:4754   */\n      mstore\n        /* \"#utility.yul\":4790:4824   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":4770:4788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4763:4825   */\n      mstore\n        /* \"#utility.yul\":4842:4860   */\n      0x64\n      add\n        /* \"Web3BetsFO_flat.sol\":16660:16715  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_170\n        /* \"#utility.yul\":4684:4866   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":2753:4141  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_331:\n        /* \"Web3BetsFO_flat.sol\":2819:2823  bool */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":2956:2975  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Web3BetsFO_flat.sol\":2956:2968  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Web3BetsFO_flat.sol\":2956:2975  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Web3BetsFO_flat.sol\":2990:3005  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"Web3BetsFO_flat.sol\":2986:4135  if (valueIndex != 0) {... */\n      tag_366\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":3359:3380  uint256 toDeleteIndex */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":3383:3397  valueIndex - 1 */\n      tag_367\n        /* \"Web3BetsFO_flat.sol\":3396:3397  1 */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":3383:3393  valueIndex */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":3383:3397  valueIndex - 1 */\n      tag_368\n      jump\t// in\n    tag_367:\n        /* \"Web3BetsFO_flat.sol\":3431:3449  set._values.length */\n      dup6\n      sload\n        /* \"Web3BetsFO_flat.sol\":3359:3397  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"Web3BetsFO_flat.sol\":3411:3428  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"Web3BetsFO_flat.sol\":3431:3453  set._values.length - 1 */\n      tag_369\n      swap1\n        /* \"Web3BetsFO_flat.sol\":3452:3453  1 */\n      0x01\n      swap1\n        /* \"Web3BetsFO_flat.sol\":3431:3453  set._values.length - 1 */\n      tag_368\n      jump\t// in\n    tag_369:\n        /* \"Web3BetsFO_flat.sol\":3411:3453  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":3485:3498  toDeleteIndex */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":3472:3481  lastIndex */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":3472:3498  lastIndex != toDeleteIndex */\n      eq\n        /* \"Web3BetsFO_flat.sol\":3468:3866  if (lastIndex != toDeleteIndex) {... */\n      tag_370\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":3518:3535  bytes32 lastValue */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":3538:3541  set */\n      dup7\n        /* \"Web3BetsFO_flat.sol\":3538:3549  set._values */\n      0x00\n      add\n        /* \"Web3BetsFO_flat.sol\":3550:3559  lastIndex */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":3538:3560  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_371\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_371:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"Web3BetsFO_flat.sol\":3518:3560  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"Web3BetsFO_flat.sol\":3689:3698  lastValue */\n      dup1\n        /* \"Web3BetsFO_flat.sol\":3660:3663  set */\n      dup8\n        /* \"Web3BetsFO_flat.sol\":3660:3671  set._values */\n      0x00\n      add\n        /* \"Web3BetsFO_flat.sol\":3672:3685  toDeleteIndex */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":3660:3686  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_373\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_373:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"Web3BetsFO_flat.sol\":3660:3698  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"Web3BetsFO_flat.sol\":3772:3795  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"Web3BetsFO_flat.sol\":3772:3784  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"Web3BetsFO_flat.sol\":3772:3795  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":3772:3808  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":3468:3866  if (lastIndex != toDeleteIndex) {... */\n    tag_370:\n        /* \"Web3BetsFO_flat.sol\":3944:3961  set._values.pop() */\n      dup6\n      sload\n        /* \"Web3BetsFO_flat.sol\":3944:3947  set */\n      dup7\n      swap1\n        /* \"Web3BetsFO_flat.sol\":3944:3961  set._values.pop() */\n      dup1\n      tag_375\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_375:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":4036:4039  set */\n      dup6\n        /* \"Web3BetsFO_flat.sol\":4036:4048  set._indexes */\n      0x01\n      add\n        /* \"Web3BetsFO_flat.sol\":4036:4055  set._indexes[value] */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":4049:4054  value */\n      dup7\n        /* \"Web3BetsFO_flat.sol\":4036:4055  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Web3BetsFO_flat.sol\":4029:4055  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"Web3BetsFO_flat.sol\":4077:4081  true */\n      0x01\n        /* \"Web3BetsFO_flat.sol\":4070:4081  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_165)\n        /* \"Web3BetsFO_flat.sol\":2986:4135  if (valueIndex != 0) {... */\n    tag_366:\n        /* \"Web3BetsFO_flat.sol\":4119:4124  false */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":4112:4124  return false */\n      swap2\n      pop\n      pop\n      jump(tag_165)\n        /* \"Web3BetsFO_flat.sol\":36335:36558  function functionCall(... */\n    tag_338:\n        /* \"Web3BetsFO_flat.sol\":36468:36480  bytes memory */\n      0x60\n        /* \"Web3BetsFO_flat.sol\":36499:36551  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_379\n        /* \"Web3BetsFO_flat.sol\":36521:36527  target */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":36529:36533  data */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":36535:36536  0 */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":36538:36550  errorMessage */\n      dup6\n        /* \"Web3BetsFO_flat.sol\":36499:36520  functionCallWithValue */\n      tag_380\n        /* \"Web3BetsFO_flat.sol\":36499:36551  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_379:\n        /* \"Web3BetsFO_flat.sol\":36492:36551  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"Web3BetsFO_flat.sol\":36335:36558  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":37422:37921  function functionCallWithValue(... */\n    tag_380:\n        /* \"Web3BetsFO_flat.sol\":37587:37599  bytes memory */\n      0x60\n        /* \"Web3BetsFO_flat.sol\":37644:37649  value */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":37619:37640  address(this).balance */\n      selfbalance\n        /* \"Web3BetsFO_flat.sol\":37619:37649  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Web3BetsFO_flat.sol\":37611:37692  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":37611:37692  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5964:5985   */\n      mstore\n        /* \"#utility.yul\":6021:6023   */\n      0x26\n        /* \"#utility.yul\":6001:6019   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5994:6024   */\n      mstore\n        /* \"#utility.yul\":6060:6094   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":6040:6058   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6033:6095   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":6111:6129   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6104:6140   */\n      mstore\n        /* \"#utility.yul\":6157:6176   */\n      0x84\n      add\n        /* \"Web3BetsFO_flat.sol\":37611:37692  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_170\n        /* \"#utility.yul\":5954:6182   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":37611:37692  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_382:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":33939:33958  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"Web3BetsFO_flat.sol\":37702:37762  require(isContract(target), \"Address: call to non-contract\") */\n      tag_387\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8088:8090   */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":37702:37762  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8070:8091   */\n      mstore\n        /* \"#utility.yul\":8127:8129   */\n      0x1d\n        /* \"#utility.yul\":8107:8125   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8100:8130   */\n      mstore\n        /* \"#utility.yul\":8166:8197   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8146:8164   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8139:8198   */\n      mstore\n        /* \"#utility.yul\":8215:8233   */\n      0x64\n      add\n        /* \"Web3BetsFO_flat.sol\":37702:37762  require(isContract(target), \"Address: call to non-contract\") */\n      tag_170\n        /* \"#utility.yul\":8060:8239   */\n      jump\n        /* \"Web3BetsFO_flat.sol\":37702:37762  require(isContract(target), \"Address: call to non-contract\") */\n    tag_387:\n        /* \"Web3BetsFO_flat.sol\":37774:37786  bool success */\n      0x00\n        /* \"Web3BetsFO_flat.sol\":37788:37811  bytes memory returndata */\n      dup1\n        /* \"Web3BetsFO_flat.sol\":37815:37821  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Web3BetsFO_flat.sol\":37815:37826  target.call */\n      and\n        /* \"Web3BetsFO_flat.sol\":37834:37839  value */\n      dup6\n        /* \"Web3BetsFO_flat.sol\":37841:37845  data */\n      dup8\n        /* \"Web3BetsFO_flat.sol\":37815:37846  target.call{value: value}(data) */\n      mload(0x40)\n      tag_390\n      swap2\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_394\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_393)\n    tag_394:\n      0x60\n      swap2\n      pop\n    tag_393:\n      pop\n        /* \"Web3BetsFO_flat.sol\":37773:37846  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Web3BetsFO_flat.sol\":37863:37914  verifyCallResult(success, returndata, errorMessage) */\n      tag_395\n        /* \"Web3BetsFO_flat.sol\":37880:37887  success */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":37889:37899  returndata */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":37901:37913  errorMessage */\n      dup7\n        /* \"Web3BetsFO_flat.sol\":37863:37879  verifyCallResult */\n      tag_396\n        /* \"Web3BetsFO_flat.sol\":37863:37914  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_395:\n        /* \"Web3BetsFO_flat.sol\":37856:37914  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"Web3BetsFO_flat.sol\":37422:37921  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Web3BetsFO_flat.sol\":40035:40777  function verifyCallResult(... */\n    tag_396:\n        /* \"Web3BetsFO_flat.sol\":40181:40193  bytes memory */\n      0x60\n        /* \"Web3BetsFO_flat.sol\":40209:40216  success */\n      dup4\n        /* \"Web3BetsFO_flat.sol\":40205:40771  if (success) {... */\n      iszero\n      tag_399\n      jumpi\n      pop\n        /* \"Web3BetsFO_flat.sol\":40239:40249  returndata */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":40232:40249  return returndata */\n      jump(tag_223)\n        /* \"Web3BetsFO_flat.sol\":40205:40771  if (success) {... */\n    tag_399:\n        /* \"Web3BetsFO_flat.sol\":40350:40367  returndata.length */\n      dup3\n      mload\n        /* \"Web3BetsFO_flat.sol\":40350:40371  returndata.length > 0 */\n      iszero\n        /* \"Web3BetsFO_flat.sol\":40346:40761  if (returndata.length > 0) {... */\n      tag_401\n      jumpi\n        /* \"Web3BetsFO_flat.sol\":40594:40604  returndata */\n      dup3\n        /* \"Web3BetsFO_flat.sol\":40588:40605  mload(returndata) */\n      mload\n        /* \"Web3BetsFO_flat.sol\":40654:40669  returndata_size */\n      dup1\n        /* \"Web3BetsFO_flat.sol\":40641:40651  returndata */\n      dup5\n        /* \"Web3BetsFO_flat.sol\":40637:40639  32 */\n      0x20\n        /* \"Web3BetsFO_flat.sol\":40633:40652  add(32, returndata) */\n      add\n        /* \"Web3BetsFO_flat.sol\":40626:40670  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Web3BetsFO_flat.sol\":40543:40688  {... */\n    tag_401:\n        /* \"Web3BetsFO_flat.sol\":40733:40745  errorMessage */\n      dup2\n        /* \"Web3BetsFO_flat.sol\":40726:40746  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_405:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_407:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_61:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_409:\n        /* \"#utility.yul\":353:382   */\n      tag_223\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":393:690   */\n    tag_341:\n        /* \"#utility.yul\":460:466   */\n      0x00\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":501:510   */\n      dup3\n        /* \"#utility.yul\":492:499   */\n      dup5\n        /* \"#utility.yul\":488:511   */\n      sub\n        /* \"#utility.yul\":484:516   */\n      slt\n        /* \"#utility.yul\":481:483   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":534:540   */\n      dup1\n        /* \"#utility.yul\":526:532   */\n      dup2\n        /* \"#utility.yul\":519:541   */\n      revert\n        /* \"#utility.yul\":481:483   */\n    tag_412:\n        /* \"#utility.yul\":571:580   */\n      dup2\n        /* \"#utility.yul\":565:581   */\n      mload\n        /* \"#utility.yul\":624:629   */\n      dup1\n        /* \"#utility.yul\":617:630   */\n      iszero\n        /* \"#utility.yul\":610:631   */\n      iszero\n        /* \"#utility.yul\":603:608   */\n      dup2\n        /* \"#utility.yul\":600:632   */\n      eq\n        /* \"#utility.yul\":590:592   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":651:657   */\n      dup2\n        /* \"#utility.yul\":643:649   */\n      dup3\n        /* \"#utility.yul\":636:658   */\n      revert\n        /* \"#utility.yul\":695:885   */\n    tag_65:\n        /* \"#utility.yul\":754:760   */\n      0x00\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":795:804   */\n      dup3\n        /* \"#utility.yul\":786:793   */\n      dup5\n        /* \"#utility.yul\":782:805   */\n      sub\n        /* \"#utility.yul\":778:810   */\n      slt\n        /* \"#utility.yul\":775:777   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":828:834   */\n      dup1\n        /* \"#utility.yul\":820:826   */\n      dup2\n        /* \"#utility.yul\":813:835   */\n      revert\n        /* \"#utility.yul\":775:777   */\n    tag_415:\n      pop\n        /* \"#utility.yul\":856:879   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":765:885   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:1154   */\n    tag_74:\n        /* \"#utility.yul\":958:964   */\n      0x00\n        /* \"#utility.yul\":966:972   */\n      dup1\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1007:1016   */\n      dup4\n        /* \"#utility.yul\":998:1005   */\n      dup6\n        /* \"#utility.yul\":994:1017   */\n      sub\n        /* \"#utility.yul\":990:1022   */\n      slt\n        /* \"#utility.yul\":987:989   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":1040:1046   */\n      dup1\n        /* \"#utility.yul\":1032:1038   */\n      dup2\n        /* \"#utility.yul\":1025:1047   */\n      revert\n        /* \"#utility.yul\":987:989   */\n    tag_417:\n        /* \"#utility.yul\":1081:1090   */\n      dup3\n        /* \"#utility.yul\":1068:1091   */\n      calldataload\n        /* \"#utility.yul\":1058:1091   */\n      swap2\n      pop\n        /* \"#utility.yul\":1110:1148   */\n      tag_418\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1133:1142   */\n      dup5\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"#utility.yul\":1110:1148   */\n      tag_405\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1100:1148   */\n      swap1\n      pop\n        /* \"#utility.yul\":977:1154   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1159:1417   */\n    tag_115:\n        /* \"#utility.yul\":1227:1233   */\n      0x00\n        /* \"#utility.yul\":1235:1241   */\n      dup1\n        /* \"#utility.yul\":1288:1290   */\n      0x40\n        /* \"#utility.yul\":1276:1285   */\n      dup4\n        /* \"#utility.yul\":1267:1274   */\n      dup6\n        /* \"#utility.yul\":1263:1286   */\n      sub\n        /* \"#utility.yul\":1259:1291   */\n      slt\n        /* \"#utility.yul\":1256:1258   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1309:1315   */\n      dup2\n        /* \"#utility.yul\":1301:1307   */\n      dup3\n        /* \"#utility.yul\":1294:1316   */\n      revert\n        /* \"#utility.yul\":1256:1258   */\n    tag_420:\n      pop\n      pop\n        /* \"#utility.yul\":1337:1360   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1407:1409   */\n      0x20\n        /* \"#utility.yul\":1392:1410   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1379:1411   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1246:1417   */\n      jump\t// out\n        /* \"#utility.yul\":1422:1728   */\n    tag_45:\n        /* \"#utility.yul\":1480:1486   */\n      0x00\n        /* \"#utility.yul\":1533:1535   */\n      0x20\n        /* \"#utility.yul\":1521:1530   */\n      dup3\n        /* \"#utility.yul\":1512:1519   */\n      dup5\n        /* \"#utility.yul\":1508:1531   */\n      sub\n        /* \"#utility.yul\":1504:1536   */\n      slt\n        /* \"#utility.yul\":1501:1503   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":1554:1560   */\n      dup1\n        /* \"#utility.yul\":1546:1552   */\n      dup2\n        /* \"#utility.yul\":1539:1561   */\n      revert\n        /* \"#utility.yul\":1501:1503   */\n    tag_422:\n        /* \"#utility.yul\":1585:1608   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1637:1669   */\n      dup2\n      and\n        /* \"#utility.yul\":1627:1670   */\n      dup2\n      eq\n        /* \"#utility.yul\":1617:1619   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1689:1695   */\n      dup2\n        /* \"#utility.yul\":1681:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1696   */\n      revert\n        /* \"#utility.yul\":2191:2465   */\n    tag_391:\n        /* \"#utility.yul\":2320:2323   */\n      0x00\n        /* \"#utility.yul\":2358:2364   */\n      dup3\n        /* \"#utility.yul\":2352:2365   */\n      mload\n        /* \"#utility.yul\":2374:2427   */\n      tag_429\n        /* \"#utility.yul\":2420:2426   */\n      dup2\n        /* \"#utility.yul\":2415:2418   */\n      dup5\n        /* \"#utility.yul\":2408:2412   */\n      0x20\n        /* \"#utility.yul\":2400:2406   */\n      dup8\n        /* \"#utility.yul\":2396:2413   */\n      add\n        /* \"#utility.yul\":2374:2427   */\n      tag_430\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2443:2459   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2328:2465   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2470:3256   */\n    tag_322:\n        /* \"#utility.yul\":2881:2906   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":2876:2879   */\n      dup2\n        /* \"#utility.yul\":2869:2907   */\n      mstore\n        /* \"#utility.yul\":2851:2854   */\n      0x00\n        /* \"#utility.yul\":2936:2942   */\n      dup4\n        /* \"#utility.yul\":2930:2943   */\n      mload\n        /* \"#utility.yul\":2952:3014   */\n      tag_432\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":3002:3004   */\n      0x17\n        /* \"#utility.yul\":2997:3000   */\n      dup6\n        /* \"#utility.yul\":2993:3005   */\n      add\n        /* \"#utility.yul\":2986:2990   */\n      0x20\n        /* \"#utility.yul\":2978:2984   */\n      dup9\n        /* \"#utility.yul\":2974:2991   */\n      add\n        /* \"#utility.yul\":2952:3014   */\n      tag_430\n      jump\t// in\n    tag_432:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":3073:3075   */\n      0x17\n        /* \"#utility.yul\":3033:3049   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":3065:3076   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3058:3098   */\n      mstore\n        /* \"#utility.yul\":3123:3136   */\n      dup4\n      mload\n        /* \"#utility.yul\":3145:3208   */\n      tag_433\n        /* \"#utility.yul\":3123:3136   */\n      dup2\n        /* \"#utility.yul\":3194:3196   */\n      0x28\n        /* \"#utility.yul\":3186:3197   */\n      dup5\n      add\n        /* \"#utility.yul\":3179:3183   */\n      0x20\n        /* \"#utility.yul\":3167:3184   */\n      dup9\n      add\n        /* \"#utility.yul\":3145:3208   */\n      tag_430\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3228:3245   */\n      add\n        /* \"#utility.yul\":3247:3249   */\n      0x28\n        /* \"#utility.yul\":3224:3250   */\n      add\n      swap5\n        /* \"#utility.yul\":2859:3256   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4122:4505   */\n    tag_324:\n        /* \"#utility.yul\":4271:4273   */\n      0x20\n        /* \"#utility.yul\":4260:4269   */\n      dup2\n        /* \"#utility.yul\":4253:4274   */\n      mstore\n        /* \"#utility.yul\":4234:4238   */\n      0x00\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4297:4310   */\n      mload\n        /* \"#utility.yul\":4346:4352   */\n      dup1\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4330:4339   */\n      dup5\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"#utility.yul\":4319:4353   */\n      mstore\n        /* \"#utility.yul\":4362:4428   */\n      tag_439\n        /* \"#utility.yul\":4421:4427   */\n      dup2\n        /* \"#utility.yul\":4416:4418   */\n      0x40\n        /* \"#utility.yul\":4405:4414   */\n      dup6\n        /* \"#utility.yul\":4401:4419   */\n      add\n        /* \"#utility.yul\":4396:4398   */\n      0x20\n        /* \"#utility.yul\":4388:4394   */\n      dup8\n        /* \"#utility.yul\":4384:4399   */\n      add\n        /* \"#utility.yul\":4362:4428   */\n      tag_430\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4489:4491   */\n      0x1f\n        /* \"#utility.yul\":4468:4483   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4464:4493   */\n      and\n        /* \"#utility.yul\":4449:4494   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4496:4498   */\n      0x40\n        /* \"#utility.yul\":4445:4499   */\n      add\n      swap3\n        /* \"#utility.yul\":4243:4505   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7475   */\n    tag_171:\n        /* \"#utility.yul\":7271:7273   */\n      0x20\n        /* \"#utility.yul\":7253:7274   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7310:7312   */\n      0x2a\n        /* \"#utility.yul\":7290:7308   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7283:7313   */\n      mstore\n        /* \"#utility.yul\":7349:7383   */\n      0x596f752068617665206e6f2070726976696c65676520746f2072756e20746869\n        /* \"#utility.yul\":7344:7346   */\n      0x40\n        /* \"#utility.yul\":7329:7347   */\n      dup3\n      add\n        /* \"#utility.yul\":7322:7384   */\n      mstore\n      shl(0xb1, 0x3990333ab731ba34b7b7)\n        /* \"#utility.yul\":7415:7417   */\n      0x60\n        /* \"#utility.yul\":7400:7418   */\n      dup3\n      add\n        /* \"#utility.yul\":7393:7433   */\n      mstore\n        /* \"#utility.yul\":7465:7468   */\n      0x80\n        /* \"#utility.yul\":7450:7469   */\n      add\n      swap1\n        /* \"#utility.yul\":7243:7475   */\n      jump\t// out\n        /* \"#utility.yul\":9657:9785   */\n    tag_213:\n        /* \"#utility.yul\":9697:9700   */\n      0x00\n        /* \"#utility.yul\":9728:9729   */\n      dup3\n        /* \"#utility.yul\":9724:9730   */\n      not\n        /* \"#utility.yul\":9721:9722   */\n      dup3\n        /* \"#utility.yul\":9718:9731   */\n      gt\n        /* \"#utility.yul\":9715:9717   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9734:9752   */\n      tag_455\n      tag_456\n      jump\t// in\n    tag_455:\n      pop\n        /* \"#utility.yul\":9770:9779   */\n      add\n      swap1\n        /* \"#utility.yul\":9705:9785   */\n      jump\t// out\n        /* \"#utility.yul\":9790:10007   */\n    tag_243:\n        /* \"#utility.yul\":9830:9831   */\n      0x00\n        /* \"#utility.yul\":9856:9857   */\n      dup3\n        /* \"#utility.yul\":9846:9848   */\n      tag_458\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":9881:9912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9935:9939   */\n      0x12\n        /* \"#utility.yul\":9932:9933   */\n      0x04\n        /* \"#utility.yul\":9925:9940   */\n      mstore\n        /* \"#utility.yul\":9963:9967   */\n      0x24\n        /* \"#utility.yul\":9888:9889   */\n      dup2\n        /* \"#utility.yul\":9953:9968   */\n      revert\n        /* \"#utility.yul\":9846:9848   */\n    tag_458:\n      pop\n        /* \"#utility.yul\":9992:10001   */\n      div\n      swap1\n        /* \"#utility.yul\":9836:10007   */\n      jump\t// out\n        /* \"#utility.yul\":10012:10180   */\n    tag_241:\n        /* \"#utility.yul\":10052:10059   */\n      0x00\n        /* \"#utility.yul\":10118:10119   */\n      dup2\n        /* \"#utility.yul\":10114:10115   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      not\n        /* \"#utility.yul\":10106:10120   */\n      div\n        /* \"#utility.yul\":10103:10104   */\n      dup4\n        /* \"#utility.yul\":10100:10121   */\n      gt\n        /* \"#utility.yul\":10095:10096   */\n      dup3\n        /* \"#utility.yul\":10088:10097   */\n      iszero\n        /* \"#utility.yul\":10081:10098   */\n      iszero\n        /* \"#utility.yul\":10077:10122   */\n      and\n        /* \"#utility.yul\":10074:10076   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":10125:10143   */\n      tag_461\n      tag_456\n      jump\t// in\n    tag_461:\n      pop\n        /* \"#utility.yul\":10165:10174   */\n      mul\n      swap1\n        /* \"#utility.yul\":10064:10180   */\n      jump\t// out\n        /* \"#utility.yul\":10185:10310   */\n    tag_368:\n        /* \"#utility.yul\":10225:10229   */\n      0x00\n        /* \"#utility.yul\":10253:10254   */\n      dup3\n        /* \"#utility.yul\":10250:10251   */\n      dup3\n        /* \"#utility.yul\":10247:10255   */\n      lt\n        /* \"#utility.yul\":10244:10246   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":10258:10276   */\n      tag_464\n      tag_456\n      jump\t// in\n    tag_464:\n      pop\n        /* \"#utility.yul\":10295:10304   */\n      sub\n      swap1\n        /* \"#utility.yul\":10234:10310   */\n      jump\t// out\n        /* \"#utility.yul\":10315:10573   */\n    tag_430:\n        /* \"#utility.yul\":10387:10388   */\n      0x00\n        /* \"#utility.yul\":10397:10510   */\n    tag_466:\n        /* \"#utility.yul\":10411:10417   */\n      dup4\n        /* \"#utility.yul\":10408:10409   */\n      dup2\n        /* \"#utility.yul\":10405:10418   */\n      lt\n        /* \"#utility.yul\":10397:10510   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":10487:10498   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10481:10499   */\n      mload\n        /* \"#utility.yul\":10468:10479   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10461:10500   */\n      mstore\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10426:10436   */\n      add\n        /* \"#utility.yul\":10397:10510   */\n      jump(tag_466)\n    tag_468:\n        /* \"#utility.yul\":10528:10534   */\n      dup4\n        /* \"#utility.yul\":10525:10526   */\n      dup2\n        /* \"#utility.yul\":10522:10535   */\n      gt\n        /* \"#utility.yul\":10519:10521   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":10563:10564   */\n      0x00\n        /* \"#utility.yul\":10554:10560   */\n      dup5\n        /* \"#utility.yul\":10549:10552   */\n      dup5\n        /* \"#utility.yul\":10545:10561   */\n      add\n        /* \"#utility.yul\":10538:10565   */\n      mstore\n        /* \"#utility.yul\":10519:10521   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":10368:10573   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10578:10714   */\n    tag_361:\n        /* \"#utility.yul\":10617:10620   */\n      0x00\n        /* \"#utility.yul\":10645:10650   */\n      dup2\n        /* \"#utility.yul\":10635:10637   */\n      tag_472\n      jumpi\n        /* \"#utility.yul\":10654:10672   */\n      tag_472\n      tag_456\n      jump\t// in\n    tag_472:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":10690:10708   */\n      add\n      swap1\n        /* \"#utility.yul\":10625:10714   */\n      jump\t// out\n        /* \"#utility.yul\":10719:10846   */\n    tag_456:\n        /* \"#utility.yul\":10780:10790   */\n      0x4e487b71\n        /* \"#utility.yul\":10775:10778   */\n      0xe0\n        /* \"#utility.yul\":10771:10791   */\n      shl\n        /* \"#utility.yul\":10768:10769   */\n      0x00\n        /* \"#utility.yul\":10761:10792   */\n      mstore\n        /* \"#utility.yul\":10811:10815   */\n      0x11\n        /* \"#utility.yul\":10808:10809   */\n      0x04\n        /* \"#utility.yul\":10801:10816   */\n      mstore\n        /* \"#utility.yul\":10835:10839   */\n      0x24\n        /* \"#utility.yul\":10832:10833   */\n      0x00\n        /* \"#utility.yul\":10825:10840   */\n      revert\n    stop\n    data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f 74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639\n\n    auxdata: 0xa2646970667358221220a40ea90369607611443963bf8cf79e334d66583582ec0fd1a2d73afaba89cfa564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260326008819055600955600a8055600454600b80546001600160a01b0319166001600160a01b039092169190911790553480156200004157600080fd5b506200004f600033620000fb565b6200006a600080516020620019f683398151915233620000fb565b62000085600080516020620019d683398151915233620000fb565b620000af600080516020620019d6833981519152600080516020620019f68339815191526200010b565b620000cb60008051602062001a168339815191526000620000fb565b620000f560008051602062001a16833981519152600080516020620019f68339815191526200010b565b620002ab565b62000107828262000156565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6200016d82826200019960201b62000bcc1760201c565b60008281526001602090815260409091206200019491839062000c5062000239821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000107576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001f53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000250836001600160a01b03841662000259565b90505b92915050565b6000818152600183016020526040812054620002a25750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000253565b50600062000253565b61171b80620002bb6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636fdbd3f61161011a578063a8e01b28116100ad578063cb1466221161007c578063cb1466221461044f578063cbf89c6314610462578063d43cbb1514610475578063d547741f14610488578063d6c1ca261461049b57600080fd5b8063a8e01b28146103db578063b501ec97146103ee578063c8b0cf6814610415578063ca15c8731461043c57600080fd5b806391d14854116100e957806391d14854146103a45780639376b94c146103b7578063992642e5146103c0578063a217fddf146103d357600080fd5b80636fdbd3f614610356578063852757ad1461036957806389fefbe11461037e5780639010d07c1461039157600080fd5b8063327372e411610192578063486d1e5011610161578063486d1e50146103145780634dcc434a1461031d5780634fb4319914610330578063648868801461034357600080fd5b8063327372e414610279578063332daccf146102e557806336568abe146102f8578063387440e61461030b57600080fd5b806323af4e17116101ce57806323af4e1714610279578063248a9ca31461028e5780632e1a9618146102bf5780632f2ff15d146102d257600080fd5b806301ffc9a71461020057806306a5cb3a1461022857806306ae7095146102535780630da4ee5014610266575b600080fd5b61021361020e3660046114c4565b6104ae565b60405190151581526020015b60405180910390f35b60025461023b906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b60065461023b906001600160a01b031681565b60035461023b906001600160a01b031681565b61028c610287366004611426565b6104d9565b005b6102b161029c366004611460565b60009081526020819052604090206001015490565b60405190815260200161021f565b60075461023b906001600160a01b031681565b61028c6102e0366004611478565b610538565b6102136102f3366004611426565b610562565b61028c610306366004611478565b61058e565b6102b1600a5481565b6102b160085481565b61028c61032b366004611426565b61060c565b61021361033e366004611426565b610662565b61028c6103513660046114a3565b61067c565b60055461023b906001600160a01b031681565b6102b16000805160206116c683398151915281565b61028c61038c366004611426565b6107d1565b61023b61039f3660046114a3565b610827565b6102136103b2366004611478565b610846565b6102b160095481565b60045461023b906001600160a01b031681565b6102b1600081565b61028c6103e9366004611426565b61086f565b6102b17fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb081565b6102b17fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c81565b6102b161044a366004611460565b6108c5565b61021361045d366004611426565b6108dc565b61028c610470366004611460565b610908565b61028c610483366004611426565b610a97565b61028c610496366004611478565b610aed565b61028c6104a9366004611460565b610b12565b60006001600160e01b03198216635a05180f60e01b14806104d357506104d382610c65565b92915050565b6104f16000805160206116c683398151915233610846565b6105165760405162461bcd60e51b815260040161050d906115b0565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526020819052604090206001015461055381610c9a565b61055d8383610ca7565b505050565b60006104d37fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c83610846565b6001600160a01b03811633146105fe5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161050d565b6106088282610cc9565b5050565b6106246000805160206116c683398151915233610846565b6106405760405162461bcd60e51b815260040161050d906115b0565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d36000805160206116c683398151915283610846565b6106946000805160206116c683398151915233610846565b6106b05760405162461bcd60e51b815260040161050d906115b0565b606482111580156106c2575060648111155b6107475760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a40161050d565b61075181836115fa565b6064146107c65760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f2031303000000000000000606482015260840161050d565b600891909155600955565b6107e96000805160206116c683398151915233610846565b6108055760405162461bcd60e51b815260040161050d906115b0565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260016020526040812061083f9083610ceb565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6108876000805160206116c683398151915233610846565b6108a35760405162461bcd60e51b815260040161050d906115b0565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526001602052604081206104d390610cf7565b60006104d37fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb083610846565b600081116109645760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161050d565b60006064600854836109769190611632565b6109809190611612565b9050600081116109e05760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840161050d565b60006064600954846109f29190611632565b6109fc9190611612565b905060008111610a5d5760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b606482015260840161050d565b600254600b54610a7a916001600160a01b03918216911683610d01565b600354600b5461055d916001600160a01b03918216911684610d01565b610aaf6000805160206116c683398151915233610846565b610acb5760405162461bcd60e51b815260040161050d906115b0565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260208190526040902060010154610b0881610c9a565b61055d8383610cc9565b610b2a6000805160206116c683398151915233610846565b610b465760405162461bcd60e51b815260040161050d906115b0565b600a8110610bc75760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a40161050d565b600a55565b610bd68282610846565b610608576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610c0c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061083f836001600160a01b038416610d53565b60006001600160e01b03198216637965db0b60e01b14806104d357506301ffc9a760e01b6001600160e01b03198316146104d3565b610ca48133610da2565b50565b610cb18282610bcc565b600082815260016020526040902061055d9082610c50565b610cd38282610e06565b600082815260016020526040902061055d9082610e6b565b600061083f8383610e80565b60006104d3825490565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261055d908490610eb8565b6000818152600183016020526040812054610d9a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d3565b5060006104d3565b610dac8282610846565b61060857610dc4816001600160a01b03166014610f8a565b610dcf836020610f8a565b604051602001610de0929190611508565b60408051601f198184030181529082905262461bcd60e51b825261050d9160040161157d565b610e108282610846565b15610608576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061083f836001600160a01b03841661116c565b6000826000018281548110610ea557634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000610f0d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112899092919063ffffffff16565b80519091501561055d5780806020019051810190610f2b9190611440565b61055d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161050d565b60606000610f99836002611632565b610fa49060026115fa565b67ffffffffffffffff811115610fca57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ff4576020820181803683370190505b509050600360fc1b8160008151811061101d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061105a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061107e846002611632565b6110899060016115fa565b90505b600181111561111d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110cb57634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106110ef57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361111681611698565b905061108c565b50831561083f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161050d565b6000818152600183016020526040812054801561127f576000611190600183611651565b85549091506000906111a490600190611651565b90508181146112255760008660000182815481106111d257634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061120357634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061124457634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d3565b60009150506104d3565b606061129884846000856112a0565b949350505050565b6060824710156113015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161050d565b6001600160a01b0385163b6113585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161050d565b600080866001600160a01b0316858760405161137491906114ec565b60006040518083038185875af1925050503d80600081146113b1576040519150601f19603f3d011682016040523d82523d6000602084013e6113b6565b606091505b50915091506113c68282866113d1565b979650505050505050565b606083156113e057508161083f565b8251156113f05782518084602001fd5b8160405162461bcd60e51b815260040161050d919061157d565b80356001600160a01b038116811461142157600080fd5b919050565b600060208284031215611437578081fd5b61083f8261140a565b600060208284031215611451578081fd5b8151801515811461083f578182fd5b600060208284031215611471578081fd5b5035919050565b6000806040838503121561148a578081fd5b8235915061149a6020840161140a565b90509250929050565b600080604083850312156114b5578182fd5b50508035926020909101359150565b6000602082840312156114d5578081fd5b81356001600160e01b03198116811461083f578182fd5b600082516114fe818460208701611668565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611540816017850160208801611668565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611571816028840160208801611668565b01602801949350505050565b602081526000825180602084015261159c816040850160208701611668565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b6000821982111561160d5761160d6116af565b500190565b60008261162d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561164c5761164c6116af565b500290565b600082821015611663576116636116af565b500390565b60005b8381101561168357818101518382015260200161166b565b83811115611692576000848401525b50505050565b6000816116a7576116a76116af565b506000190190565b634e487b7160e01b600052601160045260246000fdfe74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639a2646970667358221220a40ea90369607611443963bf8cf79e334d66583582ec0fd1a2d73afaba89cfa564736f6c63430008040033b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb074966176c367549066de941fecec46be0069530384452daa9c31d709c544e639c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x4F PUSH1 0x0 CALLER PUSH3 0xFB JUMP JUMPDEST PUSH3 0x6A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x19F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH3 0xFB JUMP JUMPDEST PUSH3 0x85 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x19D6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH3 0xFB JUMP JUMPDEST PUSH3 0xAF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x19D6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x19F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0x10B JUMP JUMPDEST PUSH3 0xCB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1A16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH3 0xFB JUMP JUMPDEST PUSH3 0xF5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1A16 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x19F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0x10B JUMP JUMPDEST PUSH3 0x2AB JUMP JUMPDEST PUSH3 0x107 DUP3 DUP3 PUSH3 0x156 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH3 0x16D DUP3 DUP3 PUSH3 0x199 PUSH1 0x20 SHL PUSH3 0xBCC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x194 SWAP2 DUP4 SWAP1 PUSH3 0xC50 PUSH3 0x239 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x107 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1F5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x259 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x2A2 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x253 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x253 JUMP JUMPDEST PUSH2 0x171B DUP1 PUSH3 0x2BB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDBD3F6 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA8E01B28 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCB146622 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xCBF89C63 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xD43CBB15 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xB501EC97 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xC8B0CF68 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x852757AD EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x89FEFBE1 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x327372E4 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x486D1E50 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x4DCC434A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x327372E4 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x387440E6 EQ PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x266 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x213 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0x2B1 PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH2 0x28C PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH2 0x4D3 DUP3 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x553 DUP2 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x55D DUP4 DUP4 PUSH2 0xCA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH2 0x608 DUP3 DUP3 PUSH2 0xCC9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x624 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x694 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x50D JUMP JUMPDEST PUSH2 0x751 DUP2 DUP4 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0x7E9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x83F SWAP1 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x887 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4D3 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0x976 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xB SLOAD PUSH2 0xA7A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xB SLOAD PUSH2 0x55D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xAAF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xB08 DUP2 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x55D DUP4 DUP4 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xB2A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0xBD6 DUP3 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x608 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xC0C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0xCA4 DUP2 CALLER PUSH2 0xDA2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB1 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x55D SWAP1 DUP3 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0xCD3 DUP3 DUP3 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x55D SWAP1 DUP3 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP4 DUP4 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x55D SWAP1 DUP5 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD9A JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0xDAC DUP3 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x608 JUMPI PUSH2 0xDC4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0xDCF DUP4 PUSH1 0x20 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE0 SWAP3 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x50D SWAP2 PUSH1 0x4 ADD PUSH2 0x157D JUMP JUMPDEST PUSH2 0xE10 DUP3 DUP3 PUSH2 0x846 JUMP JUMPDEST ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1289 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x55D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF99 DUP4 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0xFA4 SWAP1 PUSH1 0x2 PUSH2 0x15FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x101D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x105A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x107E DUP5 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1089 SWAP1 PUSH1 0x1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x10CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1116 DUP2 PUSH2 0x1698 JUMP JUMPDEST SWAP1 POP PUSH2 0x108C JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 PUSH2 0x1190 PUSH1 0x1 DUP4 PUSH2 0x1651 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x11A4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1225 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1203 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1244 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1298 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x12A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1374 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C6 DUP3 DUP3 DUP7 PUSH2 0x13D1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13E0 JUMPI POP DUP2 PUSH2 0x83F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13F0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1437 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x83F DUP3 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1451 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x83F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1471 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x149A PUSH1 0x20 DUP5 ADD PUSH2 0x140A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x83F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14FE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1540 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1668 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1571 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1668 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x159C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x160D JUMPI PUSH2 0x160D PUSH2 0x16AF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x162D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x164C JUMPI PUSH2 0x164C PUSH2 0x16AF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1663 PUSH2 0x16AF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1683 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x166B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16A7 JUMPI PUSH2 0x16A7 PUSH2 0x16AF JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH21 0x966176C367549066DE941FECEC46BE006953038445 0x2D 0xAA SWAP13 BALANCE 0xD7 MULMOD 0xC5 DIFFICULTY 0xE6 CODECOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xE 0xA9 SUB PUSH10 0x607611443963BF8CF79E CALLER 0x4D PUSH7 0x583582EC0FD1A2 0xD7 GASPRICE STATICCALL 0xBA DUP10 0xCF 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER 0xB5 0xB4 PUSH23 0x44C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23 0xBB 0xB1 PUSH9 0xC5DEB074966176C367 SLOAD SWAP1 PUSH7 0xDE941FECEC46BE STOP PUSH10 0x530384452DAA9C31D709 0xC5 DIFFICULTY 0xE6 CODECOPY 0xC8 DUP15 DELEGATECALL EQ 0xE1 0xD5 0xAD SAR GASLIMIT DUP16 0xDF LOG4 0x2B POP DUP8 CALLDATACOPY OR PUSH21 0x70135860C2A2CE45583CE28F207C00000000000000 ",
							"sourceMap": "51559:3780:0:-:0;;;52159:2;52122:39;;;;52167:41;;52254:2;52214:42;;52305:10;;52262:54;;;-1:-1:-1;;;;;;52262:54:0;-1:-1:-1;;;;;52305:10:0;;;52262:54;;;;;;52506:425;;;;;;;;;-1:-1:-1;52650:42:0;22840:4;52681:10;52650;:42::i;:::-;52702:36;-1:-1:-1;;;;;;;;;;;52727:10:0;52702;:36::i;:::-;52748:35;-1:-1:-1;;;;;;;;;;;52772:10:0;52748;:35::i;:::-;52793:40;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;52793:13:0;:40::i;:::-;52843:33;-1:-1:-1;;;;;;;;;;;52873:1:0;52843:10;:33::i;:::-;52886:38;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;52886:13:0;:38::i;:::-;51559:3780;;27592:110;27670:25;27681:4;27687:7;27670:10;:25::i;:::-;27592:110;;:::o;27827:247::-;27910:25;25259:12;;;;;;;;;;;:22;;;;27966:34;;;;28015:52;;25259:22;;27966:34;;25259:22;;:12;;28015:52;;27910:25;28015:52;27827:247;;;:::o;32023:166::-;32110:31;32127:4;32133:7;32110:16;;;;;:31;;:::i;:::-;32151:18;;;;:12;:18;;;;;;;;:31;;32174:7;;32151:22;;;;;:31;;:::i;:::-;;32023:166;;:::o;28242:233::-;23749:4;23772:12;;;;;;;;;;;-1:-1:-1;;;;;23772:29:0;;;;;;;;;;;;28320:149;;28363:6;:12;;;;;;;;;;;-1:-1:-1;;;;;28363:29:0;;;;;;;;;:36;;-1:-1:-1;;28363:36:0;28395:4;28363:36;;;28445:12;17798:10;;17719:96;28445:12;-1:-1:-1;;;;;28418:40:0;28436:7;-1:-1:-1;;;;;28418:40:0;28430:4;28418:40;;;;;;;;;;28242:233;;:::o;8096:150::-;8166:4;8189:50;8194:3;-1:-1:-1;;;;;8214:23:0;;8189:4;:50::i;:::-;8182:57;;8096:150;;;;;:::o;2181:404::-;2244:4;4318:19;;;:12;;;:19;;;;;;2260:319;;-1:-1:-1;2302:23:0;;;;;;;;:11;:23;;;;;;;;;;;;;2482:18;;2460:19;;;:12;;;:19;;;;;;:40;;;;2514:11;;2260:319;-1:-1:-1;2563:5:0;2556:12;;51559:3780;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10848:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:2:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "471:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "526:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "534:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "492:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "488:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "513:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "484:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:32:1"
															},
															"nodeType": "YulIf",
															"src": "481:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "565:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "556:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "634:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "643:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "651:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "636:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "636:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "636:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "603:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "624:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "617:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "617:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "610:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "600:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:40:1"
															},
															"nodeType": "YulIf",
															"src": "590:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "679:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "437:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "448:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "460:6:1",
														"type": ""
													}
												],
												"src": "393:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "820:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "828:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "786:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:32:1"
															},
															"nodeType": "YulIf",
															"src": "775:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "856:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "731:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "742:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "754:6:1",
														"type": ""
													}
												],
												"src": "695:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1032:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1040:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "998:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1007:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "994:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "990:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "990:32:1"
															},
															"nodeType": "YulIf",
															"src": "987:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1058:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1100:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1110:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "935:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "946:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "958:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "966:6:1",
														"type": ""
													}
												],
												"src": "890:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1292:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1301:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1309:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1294:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1294:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1267:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1276:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:32:1"
															},
															"nodeType": "YulIf",
															"src": "1256:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1327:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1337:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1369:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1407:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1379:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1369:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1204:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1215:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1227:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1235:6:1",
														"type": ""
													}
												],
												"src": "1159:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:237:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1537:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1546:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1554:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1539:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1539:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1512:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1508:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:32:1"
															},
															"nodeType": "YulIf",
															"src": "1501:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1572:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1576:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1672:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1681:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1689:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1674:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1674:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1674:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1630:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1641:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1652:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1657:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1648:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1648:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1637:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1637:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1627:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1627:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:51:1"
															},
															"nodeType": "YulIf",
															"src": "1617:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1717:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1457:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1468:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1480:6:1",
														"type": ""
													}
												],
												"src": "1422:306:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1803:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1849:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1858:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1866:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1851:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1851:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1851:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1824:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1833:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1820:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:32:1"
															},
															"nodeType": "YulIf",
															"src": "1813:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1884:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1907:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1894:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1884:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1769:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1780:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1792:6:1",
														"type": ""
													}
												],
												"src": "1733:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2070:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2078:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2063:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:32:1"
															},
															"nodeType": "YulIf",
															"src": "2025:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2096:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2106:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2138:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2176:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2148:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1973:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1984:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1996:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2004:6:1",
														"type": ""
													}
												],
												"src": "1928:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2328:137:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2338:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2352:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2342:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2400:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2408:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2415:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2420:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2374:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2374:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2447:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2452:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2436:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2304:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2309:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2320:3:1",
														"type": ""
													}
												],
												"src": "2191:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2859:397:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2876:3:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2881:25:1",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2869:38:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2916:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2936:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2930:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2920:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2986:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2997:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3002:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2993:12:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2952:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:62:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3023:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3037:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3042:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3027:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3069:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3073:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3065:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3078:19:1",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3058:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3107:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3123:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "3111:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3190:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3194:2:1",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:11:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "3199:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3145:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3217:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3232:2:1"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "3236:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:17:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:26:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2827:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2840:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2851:3:1",
														"type": ""
													}
												],
												"src": "2470:786:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3362:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3372:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3395:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3372:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3414:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3429:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3445:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3450:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3441:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3441:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3454:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3437:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3437:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3407:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3331:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3342:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3353:4:1",
														"type": ""
													}
												],
												"src": "3261:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3598:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3608:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3608:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3650:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3681:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3686:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3677:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3677:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3690:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3673:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3673:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3661:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3714:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3725:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3710:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3730:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3703:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3559:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3570:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3578:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3589:4:1",
														"type": ""
													}
												],
												"src": "3469:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3843:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3853:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3865:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3876:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3853:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3895:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3920:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3913:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3913:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3906:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3888:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3812:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3823:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3834:4:1",
														"type": ""
													}
												],
												"src": "3748:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4041:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4051:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4093:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4010:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4021:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4032:4:1",
														"type": ""
													}
												],
												"src": "3940:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4243:262:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4283:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4297:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4287:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4330:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4346:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4319:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4384:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4416:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4421:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4362:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4362:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4437:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4453:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4472:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4480:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4468:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4468:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4489:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4485:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4485:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4464:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4464:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4449:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4496:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4445:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4437:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4212:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4223:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4234:4:1",
														"type": ""
													}
												],
												"src": "4122:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4684:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4712:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4694:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4746:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4731:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4751:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4790:34:1",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4834:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4675:4:1",
														"type": ""
													}
												],
												"src": "4510:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5045:247:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5062:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5073:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5055:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5107:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5092:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5112:2:1",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5085:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5085:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5151:34:1",
																		"type": "",
																		"value": "The sum of all Vig percentage sh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5124:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5217:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5202:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5222:27:1",
																		"type": "",
																		"value": "ares must be equal to 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5195:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5259:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5259:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5022:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5036:4:1",
														"type": ""
													}
												],
												"src": "4871:421:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5471:304:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5488:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5499:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5481:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:2:1",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5561:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5572:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5577:34:1",
																		"type": "",
																		"value": "Vig percentages shares must be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5643:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5628:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5648:34:1",
																		"type": "",
																		"value": "xpressed in a  0 to 100 ratio. E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5621:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5714:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:19:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5720:12:1",
																		"type": "",
																		"value": "xample: 30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5742:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5742:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5448:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5462:4:1",
														"type": ""
													}
												],
												"src": "5297:478:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5971:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5964:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6044:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6055:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6060:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6126:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6111:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6131:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6104:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6149:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6161:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6149:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5931:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5945:4:1",
														"type": ""
													}
												],
												"src": "5780:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6371:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6408:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6401:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6451:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6462:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6447:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6467:34:1",
																		"type": "",
																		"value": "ecosystem share must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6440:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6522:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6533:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6518:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6538:8:1",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6511:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6556:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6568:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6579:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6564:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6556:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6338:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6352:4:1",
														"type": ""
													}
												],
												"src": "6187:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6768:296:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6785:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6796:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6778:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6830:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6815:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:1",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6808:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6808:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6869:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6854:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6874:34:1",
																		"type": "",
																		"value": "Vig percentage must be expressed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6945:34:1",
																		"type": "",
																		"value": " in 0 to 10 percentage. Example:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7000:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7011:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6996:19:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7017:4:1",
																		"type": "",
																		"value": " 6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6989:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6989:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7031:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7043:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7054:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7031:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6745:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6759:4:1",
														"type": ""
													}
												],
												"src": "6594:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7243:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7260:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7271:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7253:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7294:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7305:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7290:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7310:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7283:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7333:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7344:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7329:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7349:34:1",
																		"type": "",
																		"value": "You have no privilege to run thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7322:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7322:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7415:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7400:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7420:12:1",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7442:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7454:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7465:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7450:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7442:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7220:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7234:4:1",
														"type": ""
													}
												],
												"src": "7069:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7654:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7671:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7682:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7664:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7716:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7701:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7721:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7694:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7694:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7744:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7755:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7740:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7760:34:1",
																		"type": "",
																		"value": "holders' share must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7733:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7815:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7826:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7811:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7831:7:1",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7804:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7848:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7860:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7871:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7848:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7631:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7645:4:1",
														"type": ""
													}
												],
												"src": "7480:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8060:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8077:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8088:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8070:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8111:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8122:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8107:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8107:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8127:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8100:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8150:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8161:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8146:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8166:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8139:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8139:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8207:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8219:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8230:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8207:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8037:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8051:4:1",
														"type": ""
													}
												],
												"src": "7886:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8418:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8435:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8428:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8428:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8469:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8480:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8465:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8485:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8458:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8508:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8519:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8524:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8497:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8497:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8579:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8590:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8575:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8595:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8568:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8568:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8568:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8617:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8640:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8617:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8395:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8409:4:1",
														"type": ""
													}
												],
												"src": "8244:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8857:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8839:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8880:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8891:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8896:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8869:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8869:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8919:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8930:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8915:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8935:34:1",
																		"type": "",
																		"value": "bet earnings must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8908:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8990:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9001:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8986:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8986:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9006:5:1",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9021:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9033:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9021:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8806:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8820:4:1",
														"type": ""
													}
												],
												"src": "8655:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9233:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9250:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9261:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9243:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9295:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9280:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9300:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9273:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9273:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9323:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9334:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9319:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9339:34:1",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9312:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9394:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9390:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9410:17:1",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9383:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9383:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9437:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9449:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9460:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9445:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9445:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9437:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9210:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9224:4:1",
														"type": ""
													}
												],
												"src": "9059:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9576:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9586:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9598:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9609:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9586:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9628:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9639:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9621:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9545:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9556:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9567:4:1",
														"type": ""
													}
												],
												"src": "9475:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9705:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9732:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9734:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9734:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9734:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9728:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9724:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9718:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:13:1"
															},
															"nodeType": "YulIf",
															"src": "9715:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9763:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9774:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9777:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9770:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9763:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9688:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9691:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9697:3:1",
														"type": ""
													}
												],
												"src": "9657:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9836:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9867:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9888:1:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9895:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9900:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9891:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9891:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9881:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9881:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9881:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9932:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9935:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9925:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9925:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9925:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9960:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9963:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9953:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9953:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9953:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9856:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9849:9:1"
															},
															"nodeType": "YulIf",
															"src": "9846:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9987:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9996:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9987:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9821:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9824:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9830:1:1",
														"type": ""
													}
												],
												"src": "9790:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10064:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10123:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10125:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10125:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10125:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10095:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10088:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10088:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10081:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10081:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10103:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10114:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10110:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10110:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10118:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10106:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10106:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10100:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10100:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10077:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:45:1"
															},
															"nodeType": "YulIf",
															"src": "10074:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10154:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10169:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10172:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10154:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10043:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10046:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10052:7:1",
														"type": ""
													}
												],
												"src": "10012:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10234:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10256:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10258:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10258:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10258:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10250:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10253:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10247:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10247:8:1"
															},
															"nodeType": "YulIf",
															"src": "10244:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10287:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10299:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10302:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10295:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10287:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10216:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10219:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10225:4:1",
														"type": ""
													}
												],
												"src": "10185:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10378:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10387:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10382:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10447:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10472:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10477:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10468:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10468:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10491:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10496:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10487:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10487:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10481:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10481:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10461:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10461:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10461:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10408:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10411:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10405:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10419:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10421:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10430:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10433:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10426:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10426:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10421:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10401:3:1",
																"statements": []
															},
															"src": "10397:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10536:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10549:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10554:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10545:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10545:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10563:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10538:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10538:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10538:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10525:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10528:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10522:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10522:13:1"
															},
															"nodeType": "YulIf",
															"src": "10519:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10346:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10351:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10356:6:1",
														"type": ""
													}
												],
												"src": "10315:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10625:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10652:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10654:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10654:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10654:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10645:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:13:1"
															},
															"nodeType": "YulIf",
															"src": "10635:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10683:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10694:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10705:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10690:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10607:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10617:3:1",
														"type": ""
													}
												],
												"src": "10578:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10768:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10775:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10780:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10761:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10761:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10808:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10811:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10801:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10835:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10825:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10719:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"The sum of all Vig percentage sh\")\n        mstore(add(headStart, 96), \"ares must be equal to 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Vig percentages shares must be e\")\n        mstore(add(headStart, 96), \"xpressed in a  0 to 100 ratio. E\")\n        mstore(add(headStart, 128), \"xample: 30\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ecosystem share must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"Vig percentage must be expressed\")\n        mstore(add(headStart, 96), \" in 0 to 10 percentage. Example:\")\n        mstore(add(headStart, 128), \" 6\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"You have no privilege to run thi\")\n        mstore(add(headStart, 96), \"s function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"holders' share must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"bet earnings must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636fdbd3f61161011a578063a8e01b28116100ad578063cb1466221161007c578063cb1466221461044f578063cbf89c6314610462578063d43cbb1514610475578063d547741f14610488578063d6c1ca261461049b57600080fd5b8063a8e01b28146103db578063b501ec97146103ee578063c8b0cf6814610415578063ca15c8731461043c57600080fd5b806391d14854116100e957806391d14854146103a45780639376b94c146103b7578063992642e5146103c0578063a217fddf146103d357600080fd5b80636fdbd3f614610356578063852757ad1461036957806389fefbe11461037e5780639010d07c1461039157600080fd5b8063327372e411610192578063486d1e5011610161578063486d1e50146103145780634dcc434a1461031d5780634fb4319914610330578063648868801461034357600080fd5b8063327372e414610279578063332daccf146102e557806336568abe146102f8578063387440e61461030b57600080fd5b806323af4e17116101ce57806323af4e1714610279578063248a9ca31461028e5780632e1a9618146102bf5780632f2ff15d146102d257600080fd5b806301ffc9a71461020057806306a5cb3a1461022857806306ae7095146102535780630da4ee5014610266575b600080fd5b61021361020e3660046114c4565b6104ae565b60405190151581526020015b60405180910390f35b60025461023b906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b60065461023b906001600160a01b031681565b60035461023b906001600160a01b031681565b61028c610287366004611426565b6104d9565b005b6102b161029c366004611460565b60009081526020819052604090206001015490565b60405190815260200161021f565b60075461023b906001600160a01b031681565b61028c6102e0366004611478565b610538565b6102136102f3366004611426565b610562565b61028c610306366004611478565b61058e565b6102b1600a5481565b6102b160085481565b61028c61032b366004611426565b61060c565b61021361033e366004611426565b610662565b61028c6103513660046114a3565b61067c565b60055461023b906001600160a01b031681565b6102b16000805160206116c683398151915281565b61028c61038c366004611426565b6107d1565b61023b61039f3660046114a3565b610827565b6102136103b2366004611478565b610846565b6102b160095481565b60045461023b906001600160a01b031681565b6102b1600081565b61028c6103e9366004611426565b61086f565b6102b17fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb081565b6102b17fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c81565b6102b161044a366004611460565b6108c5565b61021361045d366004611426565b6108dc565b61028c610470366004611460565b610908565b61028c610483366004611426565b610a97565b61028c610496366004611478565b610aed565b61028c6104a9366004611460565b610b12565b60006001600160e01b03198216635a05180f60e01b14806104d357506104d382610c65565b92915050565b6104f16000805160206116c683398151915233610846565b6105165760405162461bcd60e51b815260040161050d906115b0565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526020819052604090206001015461055381610c9a565b61055d8383610ca7565b505050565b60006104d37fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c83610846565b6001600160a01b03811633146105fe5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b606482015260840161050d565b6106088282610cc9565b5050565b6106246000805160206116c683398151915233610846565b6106405760405162461bcd60e51b815260040161050d906115b0565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60006104d36000805160206116c683398151915283610846565b6106946000805160206116c683398151915233610846565b6106b05760405162461bcd60e51b815260040161050d906115b0565b606482111580156106c2575060648111155b6107475760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a40161050d565b61075181836115fa565b6064146107c65760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f2031303000000000000000606482015260840161050d565b600891909155600955565b6107e96000805160206116c683398151915233610846565b6108055760405162461bcd60e51b815260040161050d906115b0565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260016020526040812061083f9083610ceb565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6108876000805160206116c683398151915233610846565b6108a35760405162461bcd60e51b815260040161050d906115b0565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526001602052604081206104d390610cf7565b60006104d37fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb083610846565b600081116109645760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b606482015260840161050d565b60006064600854836109769190611632565b6109809190611612565b9050600081116109e05760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840161050d565b60006064600954846109f29190611632565b6109fc9190611612565b905060008111610a5d5760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b606482015260840161050d565b600254600b54610a7a916001600160a01b03918216911683610d01565b600354600b5461055d916001600160a01b03918216911684610d01565b610aaf6000805160206116c683398151915233610846565b610acb5760405162461bcd60e51b815260040161050d906115b0565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600082815260208190526040902060010154610b0881610c9a565b61055d8383610cc9565b610b2a6000805160206116c683398151915233610846565b610b465760405162461bcd60e51b815260040161050d906115b0565b600a8110610bc75760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a40161050d565b600a55565b610bd68282610846565b610608576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610c0c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061083f836001600160a01b038416610d53565b60006001600160e01b03198216637965db0b60e01b14806104d357506301ffc9a760e01b6001600160e01b03198316146104d3565b610ca48133610da2565b50565b610cb18282610bcc565b600082815260016020526040902061055d9082610c50565b610cd38282610e06565b600082815260016020526040902061055d9082610e6b565b600061083f8383610e80565b60006104d3825490565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261055d908490610eb8565b6000818152600183016020526040812054610d9a575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104d3565b5060006104d3565b610dac8282610846565b61060857610dc4816001600160a01b03166014610f8a565b610dcf836020610f8a565b604051602001610de0929190611508565b60408051601f198184030181529082905262461bcd60e51b825261050d9160040161157d565b610e108282610846565b15610608576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061083f836001600160a01b03841661116c565b6000826000018281548110610ea557634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000610f0d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112899092919063ffffffff16565b80519091501561055d5780806020019051810190610f2b9190611440565b61055d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161050d565b60606000610f99836002611632565b610fa49060026115fa565b67ffffffffffffffff811115610fca57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ff4576020820181803683370190505b509050600360fc1b8160008151811061101d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061105a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061107e846002611632565b6110899060016115fa565b90505b600181111561111d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110cb57634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106110ef57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c9361111681611698565b905061108c565b50831561083f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161050d565b6000818152600183016020526040812054801561127f576000611190600183611651565b85549091506000906111a490600190611651565b90508181146112255760008660000182815481106111d257634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508087600001848154811061120357634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061124457634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104d3565b60009150506104d3565b606061129884846000856112a0565b949350505050565b6060824710156113015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161050d565b6001600160a01b0385163b6113585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161050d565b600080866001600160a01b0316858760405161137491906114ec565b60006040518083038185875af1925050503d80600081146113b1576040519150601f19603f3d011682016040523d82523d6000602084013e6113b6565b606091505b50915091506113c68282866113d1565b979650505050505050565b606083156113e057508161083f565b8251156113f05782518084602001fd5b8160405162461bcd60e51b815260040161050d919061157d565b80356001600160a01b038116811461142157600080fd5b919050565b600060208284031215611437578081fd5b61083f8261140a565b600060208284031215611451578081fd5b8151801515811461083f578182fd5b600060208284031215611471578081fd5b5035919050565b6000806040838503121561148a578081fd5b8235915061149a6020840161140a565b90509250929050565b600080604083850312156114b5578182fd5b50508035926020909101359150565b6000602082840312156114d5578081fd5b81356001600160e01b03198116811461083f578182fd5b600082516114fe818460208701611668565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611540816017850160208801611668565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611571816028840160208801611668565b01602801949350505050565b602081526000825180602084015261159c816040850160208701611668565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b6000821982111561160d5761160d6116af565b500190565b60008261162d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561164c5761164c6116af565b500290565b600082821015611663576116636116af565b500390565b60005b8381101561168357818101518382015260200161166b565b83811115611692576000848401525b50505050565b6000816116a7576116a76116af565b506000190190565b634e487b7160e01b600052601160045260246000fdfe74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639a2646970667358221220a40ea90369607611443963bf8cf79e334d66583582ec0fd1a2d73afaba89cfa564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDBD3F6 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA8E01B28 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCB146622 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xCBF89C63 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xD43CBB15 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xB501EC97 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xC8B0CF68 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x852757AD EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x89FEFBE1 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x327372E4 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x486D1E50 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x4DCC434A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x327372E4 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x387440E6 EQ PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x266 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x213 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x23B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH2 0x2B1 PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH2 0x28C PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x28C PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0xAED JUMP JUMPDEST PUSH2 0x28C PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1460 JUMP JUMPDEST PUSH2 0xB12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH2 0x4D3 DUP3 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x553 DUP2 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x55D DUP4 DUP4 PUSH2 0xCA7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH2 0x608 DUP3 DUP3 PUSH2 0xCC9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x624 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x694 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x6C2 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x50D JUMP JUMPDEST PUSH2 0x751 DUP2 DUP4 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0x7E9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x83F SWAP1 DUP4 PUSH2 0xCEB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x887 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x4D3 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0x976 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xB SLOAD PUSH2 0xA7A SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xB SLOAD PUSH2 0x55D SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xD01 JUMP JUMPDEST PUSH2 0xAAF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xB08 DUP2 PUSH2 0xC9A JUMP JUMPDEST PUSH2 0x55D DUP4 DUP4 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0xB2A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP1 PUSH2 0x15B0 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0xBD6 DUP3 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x608 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xC0C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0xCA4 DUP2 CALLER PUSH2 0xDA2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCB1 DUP3 DUP3 PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x55D SWAP1 DUP3 PUSH2 0xC50 JUMP JUMPDEST PUSH2 0xCD3 DUP3 DUP3 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x55D SWAP1 DUP3 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP4 DUP4 PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x55D SWAP1 DUP5 SWAP1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xD9A JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x4D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0xDAC DUP3 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x608 JUMPI PUSH2 0xDC4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0xDCF DUP4 PUSH1 0x20 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDE0 SWAP3 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x50D SWAP2 PUSH1 0x4 ADD PUSH2 0x157D JUMP JUMPDEST PUSH2 0xE10 DUP3 DUP3 PUSH2 0x846 JUMP JUMPDEST ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEA5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1289 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x55D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF99 DUP4 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0xFA4 SWAP1 PUSH1 0x2 PUSH2 0x15FA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x101D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x105A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x107E DUP5 PUSH1 0x2 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x1089 SWAP1 PUSH1 0x1 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x10CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1116 DUP2 PUSH2 0x1698 JUMP JUMPDEST SWAP1 POP PUSH2 0x108C JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 PUSH2 0x1190 PUSH1 0x1 DUP4 PUSH2 0x1651 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x11A4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1651 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1225 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1203 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1244 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1298 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x12A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1374 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C6 DUP3 DUP3 DUP7 PUSH2 0x13D1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13E0 JUMPI POP DUP2 PUSH2 0x83F JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13F0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x157D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1437 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x83F DUP3 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1451 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x83F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1471 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x148A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x149A PUSH1 0x20 DUP5 ADD PUSH2 0x140A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x83F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14FE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1668 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1540 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1668 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1571 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1668 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x159C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x160D JUMPI PUSH2 0x160D PUSH2 0x16AF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x162D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x164C JUMPI PUSH2 0x164C PUSH2 0x16AF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1663 PUSH2 0x16AF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1683 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x166B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1692 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x16A7 JUMPI PUSH2 0x16A7 PUSH2 0x16AF JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH21 0x966176C367549066DE941FECEC46BE006953038445 0x2D 0xAA SWAP13 BALANCE 0xD7 MULMOD 0xC5 DIFFICULTY 0xE6 CODECOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xE 0xA9 SUB PUSH10 0x607611443963BF8CF79E CALLER 0x4D PUSH7 0x583582EC0FD1A2 0xD7 GASPRICE STATICCALL 0xBA DUP10 0xCF 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "51559:3780:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30679:212;;;;;;:::i;:::-;;:::i;:::-;;;3913:14:1;;3906:22;3888:41;;3876:2;3861:18;30679:212:0;;;;;;;;51662:40;;;;;-1:-1:-1;;;;;51662:40:0;;;;;;-1:-1:-1;;;;;3425:32:1;;;3407:51;;3395:2;3380:18;51662:40:0;3362:102:1;51835:37:0;;;;;-1:-1:-1;;;;;51835:37:0;;;51708:38;;;;;-1:-1:-1;;;;;51708:38:0;;;53173:104;;;;;;:::i;:::-;;:::i;:::-;;25159:129;;;;;;:::i;:::-;25233:7;25259:12;;;;;;;;;;:22;;;;25159:129;;;;4086:25:1;;;4074:2;4059:18;25159:129:0;4041:76:1;51878:34:0;;;;;-1:-1:-1;;;;;51878:34:0;;;25584:145;;;;;;:::i;:::-;;:::i;55211:125::-;;;;;;:::i;:::-;;:::i;26693:214::-;;;;;;:::i;:::-;;:::i;52214:42::-;;;;;;52122:39;;;;;;53397:110;;;;;;:::i;:::-;;:::i;54933:134::-;;;;;;:::i;:::-;;:::i;53884:459::-;;;;;;:::i;:::-;;:::i;51793:36::-;;;;;-1:-1:-1;;;;;51793:36:0;;;51919:64;;-1:-1:-1;;;;;;;;;;;51919:64:0;;53513:104;;;;;;:::i;:::-;;:::i;31476:151::-;;;;;;:::i;:::-;;:::i;23663:145::-;;;;;;:::i;:::-;;:::i;52167:41::-;;;;;;51752:34;;;;;-1:-1:-1;;;;;51752:34:0;;;22795:49;;22840:4;22795:49;;53055:112;;;;;;:::i;:::-;;:::i;51989:62::-;;52027:24;51989:62;;52057:58;;52093:22;52057:58;;31795:140;;;;;;:::i;:::-;;:::i;55073:132::-;;;;;;:::i;:::-;;:::i;54349:578::-;;;;;;:::i;:::-;;:::i;53283:108::-;;;;;;:::i;:::-;;:::i;26009:147::-;;;;;;:::i;:::-;;:::i;53623:255::-;;;;;;:::i;:::-;;:::i;30679:212::-;30764:4;-1:-1:-1;;;;;;30787:57:0;;-1:-1:-1;;;30787:57:0;;:97;;;30848:36;30872:11;30848:23;:36::i;:::-;30780:104;30679:212;-1:-1:-1;;30679:212:0:o;53173:104::-;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;;;;;;;;;53247:14:::1;:23:::0;;-1:-1:-1;;;;;;53247:23:0::1;-1:-1:-1::0;;;;;53247:23:0;;;::::1;::::0;;;::::1;::::0;;53173:104::o;25584:145::-;25233:7;25259:12;;;;;;;;;;:22;;;23273:16;23284:4;23273:10;:16::i;:::-;25697:25:::1;25708:4;25714:7;25697:10;:25::i;:::-;25584:145:::0;;;:::o;55211:125::-;55278:4;55301:28;52093:22;55320:8;55301:7;:28::i;26693:214::-;-1:-1:-1;;;;;26788:23:0;;17798:10;26788:23;26780:83;;;;-1:-1:-1;;;26780:83:0;;9261:2:1;26780:83:0;;;9243:21:1;9300:2;9280:18;;;9273:30;9339:34;9319:18;;;9312:62;-1:-1:-1;;;9390:18:1;;;9383:45;9445:19;;26780:83:0;9233:237:1;26780:83:0;26874:26;26886:4;26892:7;26874:11;:26::i;:::-;26693:214;;:::o;53397:110::-;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;53476:13:::1;:24:::0;;-1:-1:-1;;;;;;53476:24:0::1;-1:-1:-1::0;;;;;53476:24:0;;;::::1;::::0;;;::::1;::::0;;53397:110::o;54933:134::-;55006:4;55029:31;-1:-1:-1;;;;;;;;;;;55051:8:0;55029:7;:31::i;53884:459::-;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;54028:3:::1;54020:4;:11;;:26;;;;;54043:3;54035:4;:11;;54020:26;53999:147;;;::::0;-1:-1:-1;;;53999:147:0;;5499:2:1;53999:147:0::1;::::0;::::1;5481:21:1::0;5538:2;5518:18;;;5511:30;5577:34;5557:18;;;5550:62;5648:34;5628:18;;;5621:62;-1:-1:-1;;;5699:19:1;;;5692:41;5750:19;;53999:147:0::1;5471:304:1::0;53999:147:0::1;54177:11;54184:4:::0;54177;:11:::1;:::i;:::-;54193:3;54177:19;54156:123;;;::::0;-1:-1:-1;;;54156:123:0;;5073:2:1;54156:123:0::1;::::0;::::1;5055:21:1::0;5112:2;5092:18;;;5085:30;5151:34;5131:18;;;5124:62;5222:27;5202:18;;;5195:55;5267:19;;54156:123:0::1;5045:247:1::0;54156:123:0::1;54290:10;:17:::0;;;;54317:12:::1;:19:::0;53884:459::o;53513:104::-;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;53589:10:::1;:21:::0;;-1:-1:-1;;;;;;53589:21:0::1;-1:-1:-1::0;;;;;53589:21:0;;;::::1;::::0;;;::::1;::::0;;53513:104::o;31476:151::-;31566:7;31592:18;;;:12;:18;;;;;:28;;31614:5;31592:21;:28::i;:::-;31585:35;31476:151;-1:-1:-1;;;31476:151:0:o;23663:145::-;23749:4;23772:12;;;;;;;;;;;-1:-1:-1;;;;;23772:29:0;;;;;;;;;;;;;;;23663:145::o;53055:112::-;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;53135:16:::1;:25:::0;;-1:-1:-1;;;;;;53135:25:0::1;-1:-1:-1::0;;;;;53135:25:0;;;::::1;::::0;;;::::1;::::0;;53055:112::o;31795:140::-;31875:7;31901:18;;;:12;:18;;;;;:27;;:25;:27::i;55073:132::-;55145:4;55168:30;52027:24;55189:8;55168:7;:30::i;54349:578::-;54444:1;54431:10;:14;54423:62;;;;-1:-1:-1;;;54423:62:0;;8857:2:1;54423:62:0;;;8839:21:1;8896:2;8876:18;;;8869:30;8935:34;8915:18;;;8908:62;-1:-1:-1;;;8986:18:1;;;8979:33;9029:19;;54423:62:0;8829:225:1;54423:62:0;54495:20;54546:3;54532:10;;54519;:23;;;;:::i;:::-;54518:31;;;;:::i;:::-;54495:54;;54582:1;54567:12;:16;54559:66;;;;-1:-1:-1;;;54559:66:0;;7682:2:1;54559:66:0;;;7664:21:1;7721:2;7701:18;;;7694:30;7760:34;7740:18;;;7733:62;-1:-1:-1;;;7811:18:1;;;7804:35;7856:19;;54559:66:0;7654:227:1;54559:66:0;54635:22;54690:3;54674:12;;54661:10;:25;;;;:::i;:::-;54660:33;;;;:::i;:::-;54635:58;;54728:1;54711:14;:18;54703:69;;;;-1:-1:-1;;;54703:69:0;;6389:2:1;54703:69:0;;;6371:21:1;6428:2;6408:18;;;6401:30;6467:34;6447:18;;;6440:62;-1:-1:-1;;;6518:18:1;;;6511:36;6564:19;;54703:69:0;6361:228:1;54703:69:0;54815:16;;54783:18;;:65;;-1:-1:-1;;;;;54783:18:0;;;;54815:16;54833:14;54783:31;:65::i;:::-;54891:14;;54859:18;;:61;;-1:-1:-1;;;;;54859:18:0;;;;54891:14;54907:12;54859:31;:61::i;53283:108::-;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;53361:12:::1;:23:::0;;-1:-1:-1;;;;;;53361:23:0::1;-1:-1:-1::0;;;;;53361:23:0;;;::::1;::::0;;;::::1;::::0;;53283:108::o;26009:147::-;25233:7;25259:12;;;;;;;;;;:22;;;23273:16;23284:4;23273:10;:16::i;:::-;26123:26:::1;26135:4;26141:7;26123:11;:26::i;53623:255::-:0;52381:33;-1:-1:-1;;;;;;;;;;;52403:10:0;52381:7;:33::i;:::-;52360:122;;;;-1:-1:-1;;;52360:122:0;;;;;;;:::i;:::-;53740:2:::1;53726:11;:16;53705:129;;;::::0;-1:-1:-1;;;53705:129:0;;6796:2:1;53705:129:0::1;::::0;::::1;6778:21:1::0;6835:2;6815:18;;;6808:30;6874:34;6854:18;;;6847:62;6945:34;6925:18;;;6918:62;-1:-1:-1;;;6996:19:1;;;6989:33;7039:19;;53705:129:0::1;6768:296:1::0;53705:129:0::1;53844:13;:27:::0;53623:255::o;28242:233::-;28325:22;28333:4;28339:7;28325;:22::i;:::-;28320:149;;28363:6;:12;;;;;;;;;;;-1:-1:-1;;;;;28363:29:0;;;;;;;;;:36;;-1:-1:-1;;28363:36:0;28395:4;28363:36;;;28445:12;17798:10;;17719:96;28445:12;-1:-1:-1;;;;;28418:40:0;28436:7;-1:-1:-1;;;;;28418:40:0;28430:4;28418:40;;;;;;;;;;28242:233;;:::o;8096:150::-;8166:4;8189:50;8194:3;-1:-1:-1;;;;;8214:23:0;;8189:4;:50::i;23374:202::-;23459:4;-1:-1:-1;;;;;;23482:47:0;;-1:-1:-1;;;23482:47:0;;:87;;-1:-1:-1;;;;;;;;;;14588:40:0;;;23533:36;14480:155;24102:103;24168:30;24179:4;17798:10;24168;:30::i;:::-;24102:103;:::o;32023:166::-;32110:31;32127:4;32133:7;32110:16;:31::i;:::-;32151:18;;;;:12;:18;;;;;:31;;32174:7;32151:22;:31::i;32278:171::-;32366:32;32384:4;32390:7;32366:17;:32::i;:::-;32408:18;;;;:12;:18;;;;;:34;;32434:7;32408:25;:34::i;9354:156::-;9428:7;9478:22;9482:3;9494:5;9478:3;:22::i;8897:115::-;8960:7;8986:19;8994:3;4512:18;;4430:107;46569:205;46708:58;;;-1:-1:-1;;;;;3661:32:1;;46708:58:0;;;3643:51:1;3710:18;;;;3703:34;;;46708:58:0;;;;;;;;;;3616:18:1;;;;46708:58:0;;;;;;;;-1:-1:-1;;;;;46708:58:0;-1:-1:-1;;;46708:58:0;;;46681:86;;46701:5;;46681:19;:86::i;2181:404::-;2244:4;4318:19;;;:12;;;:19;;;;;;2260:319;;-1:-1:-1;2302:23:0;;;;;;;;:11;:23;;;;;;;;;;;;;2482:18;;2460:19;;;:12;;;:19;;;;;;:40;;;;2514:11;;2260:319;-1:-1:-1;2563:5:0;2556:12;;24486:492;24574:22;24582:4;24588:7;24574;:22::i;:::-;24569:403;;24757:41;24785:7;-1:-1:-1;;;;;24757:41:0;24795:2;24757:19;:41::i;:::-;24869:38;24897:4;24904:2;24869:19;:38::i;:::-;24664:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;24664:265:0;;;;;;;;;;-1:-1:-1;;;24612:349:0;;;;;;;:::i;28646:234::-;28729:22;28737:4;28743:7;28729;:22::i;:::-;28725:149;;;28799:5;28767:12;;;;;;;;;;;-1:-1:-1;;;;;28767:29:0;;;;;;;;;;:37;;-1:-1:-1;;28767:37:0;;;28823:40;17798:10;;28767:12;;28823:40;;28799:5;28823:40;28646:234;;:::o;8414:156::-;8487:4;8510:53;8518:3;-1:-1:-1;;;;;8538:23:0;;8510:7;:53::i;4879:118::-;4946:7;4972:3;:11;;4984:5;4972:18;;;;;;-1:-1:-1;;;4972:18:0;;;;;;;;;;;;;;;;;4965:25;;4879:118;;;;:::o;49553:706::-;49972:23;49998:69;50026:4;49998:69;;;;;;;;;;;;;;;;;50006:5;-1:-1:-1;;;;;49998:27:0;;;:69;;;;;:::i;:::-;50081:17;;49972:95;;-1:-1:-1;50081:21:0;50077:176;;50176:10;50165:30;;;;;;;;;;;;:::i;:::-;50157:85;;;;-1:-1:-1;;;50157:85:0;;8446:2:1;50157:85:0;;;8428:21:1;8485:2;8465:18;;;8458:30;8524:34;8504:18;;;8497:62;-1:-1:-1;;;8575:18:1;;;8568:40;8625:19;;50157:85:0;8418:232:1;16312:441:0;16387:13;16412:19;16444:10;16448:6;16444:1;:10;:::i;:::-;:14;;16457:1;16444:14;:::i;:::-;16434:25;;;;;;-1:-1:-1;;;16434:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16434:25:0;;16412:47;;-1:-1:-1;;;16469:6:0;16476:1;16469:9;;;;;;-1:-1:-1;;;16469:9:0;;;;;;;;;;;;:15;-1:-1:-1;;;;;16469:15:0;;;;;;;;;-1:-1:-1;;;16494:6:0;16501:1;16494:9;;;;;;-1:-1:-1;;;16494:9:0;;;;;;;;;;;;:15;-1:-1:-1;;;;;16494:15:0;;;;;;;;-1:-1:-1;16524:9:0;16536:10;16540:6;16536:1;:10;:::i;:::-;:14;;16549:1;16536:14;:::i;:::-;16524:26;;16519:132;16556:1;16552;:5;16519:132;;;-1:-1:-1;;;16603:5:0;16611:3;16603:11;16590:25;;;;;-1:-1:-1;;;16590:25:0;;;;;;;;;;;;16578:6;16585:1;16578:9;;;;;;-1:-1:-1;;;16578:9:0;;;;;;;;;;;;:37;-1:-1:-1;;;;;16578:37:0;;;;;;;;-1:-1:-1;16639:1:0;16629:11;;;;;16559:3;;;:::i;:::-;;;16519:132;;;-1:-1:-1;16668:10:0;;16660:55;;;;-1:-1:-1;;;16660:55:0;;4712:2:1;16660:55:0;;;4694:21:1;;;4731:18;;;4724:30;4790:34;4770:18;;;4763:62;4842:18;;16660:55:0;4684:182:1;2753:1388:0;2819:4;2956:19;;;:12;;;:19;;;;;;2990:15;;2986:1149;;3359:21;3383:14;3396:1;3383:10;:14;:::i;:::-;3431:18;;3359:38;;-1:-1:-1;3411:17:0;;3431:22;;3452:1;;3431:22;:::i;:::-;3411:42;;3485:13;3472:9;:26;3468:398;;3518:17;3538:3;:11;;3550:9;3538:22;;;;;;-1:-1:-1;;;3538:22:0;;;;;;;;;;;;;;;;;3518:42;;3689:9;3660:3;:11;;3672:13;3660:26;;;;;;-1:-1:-1;;;3660:26:0;;;;;;;;;;;;;;;;;;;;:38;;;;3772:23;;;:12;;;:23;;;;;:36;;;3468:398;3944:17;;:3;;:17;;;-1:-1:-1;;;3944:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;4036:3;:12;;:19;4049:5;4036:19;;;;;;;;;;;4029:26;;;4077:4;4070:11;;;;;;;2986:1149;4119:5;4112:12;;;;;36335:223;36468:12;36499:52;36521:6;36529:4;36535:1;36538:12;36499:21;:52::i;:::-;36492:59;36335:223;-1:-1:-1;;;;36335:223:0:o;37422:499::-;37587:12;37644:5;37619:21;:30;;37611:81;;;;-1:-1:-1;;;37611:81:0;;5982:2:1;37611:81:0;;;5964:21:1;6021:2;6001:18;;;5994:30;6060:34;6040:18;;;6033:62;-1:-1:-1;;;6111:18:1;;;6104:36;6157:19;;37611:81:0;5954:228:1;37611:81:0;-1:-1:-1;;;;;33939:19:0;;;37702:60;;;;-1:-1:-1;;;37702:60:0;;8088:2:1;37702:60:0;;;8070:21:1;8127:2;8107:18;;;8100:30;8166:31;8146:18;;;8139:59;8215:18;;37702:60:0;8060:179:1;37702:60:0;37774:12;37788:23;37815:6;-1:-1:-1;;;;;37815:11:0;37834:5;37841:4;37815:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37773:73;;;;37863:51;37880:7;37889:10;37901:12;37863:16;:51::i;:::-;37856:58;37422:499;-1:-1:-1;;;;;;;37422:499:0:o;40035:742::-;40181:12;40209:7;40205:566;;;-1:-1:-1;40239:10:0;40232:17;;40205:566;40350:17;;:21;40346:415;;40594:10;40588:17;40654:15;40641:10;40637:2;40633:19;40626:44;40543:145;40733:12;40726:20;;-1:-1:-1;;;40726:20:0;;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:297::-;460:6;513:2;501:9;492:7;488:23;484:32;481:2;;;534:6;526;519:22;481:2;571:9;565:16;624:5;617:13;610:21;603:5;600:32;590:2;;651:6;643;636:22;695:190;754:6;807:2;795:9;786:7;782:23;778:32;775:2;;;828:6;820;813:22;775:2;-1:-1:-1;856:23:1;;765:120;-1:-1:-1;765:120:1:o;890:264::-;958:6;966;1019:2;1007:9;998:7;994:23;990:32;987:2;;;1040:6;1032;1025:22;987:2;1081:9;1068:23;1058:33;;1110:38;1144:2;1133:9;1129:18;1110:38;:::i;:::-;1100:48;;977:177;;;;;:::o;1159:258::-;1227:6;1235;1288:2;1276:9;1267:7;1263:23;1259:32;1256:2;;;1309:6;1301;1294:22;1256:2;-1:-1:-1;;1337:23:1;;;1407:2;1392:18;;;1379:32;;-1:-1:-1;1246:171:1:o;1422:306::-;1480:6;1533:2;1521:9;1512:7;1508:23;1504:32;1501:2;;;1554:6;1546;1539:22;1501:2;1585:23;;-1:-1:-1;;;;;;1637:32:1;;1627:43;;1617:2;;1689:6;1681;1674:22;2191:274;2320:3;2358:6;2352:13;2374:53;2420:6;2415:3;2408:4;2400:6;2396:17;2374:53;:::i;:::-;2443:16;;;;;2328:137;-1:-1:-1;;2328:137:1:o;2470:786::-;2881:25;2876:3;2869:38;2851:3;2936:6;2930:13;2952:62;3007:6;3002:2;2997:3;2993:12;2986:4;2978:6;2974:17;2952:62;:::i;:::-;-1:-1:-1;;;3073:2:1;3033:16;;;3065:11;;;3058:40;3123:13;;3145:63;3123:13;3194:2;3186:11;;3179:4;3167:17;;3145:63;:::i;:::-;3228:17;3247:2;3224:26;;2859:397;-1:-1:-1;;;;2859:397:1:o;4122:383::-;4271:2;4260:9;4253:21;4234:4;4303:6;4297:13;4346:6;4341:2;4330:9;4326:18;4319:34;4362:66;4421:6;4416:2;4405:9;4401:18;4396:2;4388:6;4384:15;4362:66;:::i;:::-;4489:2;4468:15;-1:-1:-1;;4464:29:1;4449:45;;;;4496:2;4445:54;;4243:262;-1:-1:-1;;4243:262:1:o;7069:406::-;7271:2;7253:21;;;7310:2;7290:18;;;7283:30;7349:34;7344:2;7329:18;;7322:62;-1:-1:-1;;;7415:2:1;7400:18;;7393:40;7465:3;7450:19;;7243:232::o;9657:128::-;9697:3;9728:1;9724:6;9721:1;9718:13;9715:2;;;9734:18;;:::i;:::-;-1:-1:-1;9770:9:1;;9705:80::o;9790:217::-;9830:1;9856;9846:2;;-1:-1:-1;;;9881:31:1;;9935:4;9932:1;9925:15;9963:4;9888:1;9953:15;9846:2;-1:-1:-1;9992:9:1;;9836:171::o;10012:168::-;10052:7;10118:1;10114;10110:6;10106:14;10103:1;10100:21;10095:1;10088:9;10081:17;10077:45;10074:2;;;10125:18;;:::i;:::-;-1:-1:-1;10165:9:1;;10064:116::o;10185:125::-;10225:4;10253:1;10250;10247:8;10244:2;;;10258:18;;:::i;:::-;-1:-1:-1;10295:9:1;;10234:76::o;10315:258::-;10387:1;10397:113;10411:6;10408:1;10405:13;10397:113;;;10487:11;;;10481:18;10468:11;;;10461:39;10433:2;10426:10;10397:113;;;10528:6;10525:1;10522:13;10519:2;;;10563:1;10554:6;10549:3;10545:16;10538:27;10519:2;;10368:205;;;:::o;10578:136::-;10617:3;10645:5;10635:2;;10654:18;;:::i;:::-;-1:-1:-1;;;10690:18:1;;10625:89::o;10719:127::-;10780:10;10775:3;10771:20;10768:1;10761:31;10811:4;10808:1;10801:15;10835:4;10832:1;10825:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1183000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BLACKLIST()": "284",
								"DEFAULT_ADMIN_ROLE()": "306",
								"EVENT_ADMIN()": "262",
								"SYSTEM_ADMIN()": "infinite",
								"betFactory()": "1127",
								"ecosystemAddress()": "1106",
								"ecosystemVig()": "1062",
								"eventFactory()": "1083",
								"getRoleAdmin(bytes32)": "1215",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "1396",
								"holdersAddress()": "1150",
								"holdersVig()": "1040",
								"isBlack(address)": "1436",
								"isEventAdmin(address)": "1412",
								"isSystemAdmin(address)": "infinite",
								"marketFactory()": "1128",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setBetFactory(address)": "infinite",
								"setEcosystemAddress(address)": "infinite",
								"setEventFactory(address)": "infinite",
								"setHoldersAddress(address)": "infinite",
								"setMarketFactory(address)": "infinite",
								"setStableCoin(address)": "infinite",
								"setVigPercentage(uint256)": "infinite",
								"setVigPercentageShares(uint256,uint256)": "infinite",
								"shareBetEarnings(uint256)": "infinite",
								"stableCoin()": "1126",
								"supportsInterface(bytes4)": "infinite",
								"vigPercentage()": "1107"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52159,
									"end": 52161,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 52122,
									"end": 52161,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 52122,
									"end": 52161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52122,
									"end": 52161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52122,
									"end": 52161,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52167,
									"end": 52208,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 52167,
									"end": 52208,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52254,
									"end": 52256,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 52214,
									"end": 52256,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52214,
									"end": 52256,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52305,
									"end": 52315,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52305,
									"end": 52315,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 52305,
									"end": 52315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52305,
									"end": 52315,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 52305,
									"end": 52315,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52262,
									"end": 52316,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52506,
									"end": 52931,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 52650,
									"end": 52692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 22840,
									"end": 22844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52681,
									"end": 52691,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 52650,
									"end": 52660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 52650,
									"end": 52692,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52650,
									"end": 52692,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52650,
									"end": 52692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52702,
									"end": 52738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52727,
									"end": 52737,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 52702,
									"end": 52712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 52702,
									"end": 52738,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52702,
									"end": 52738,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 52702,
									"end": 52738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52748,
									"end": 52783,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1509970658320CF711C24D98099E2B1D5DFD240BA4E3E67EEDD50A039033D4BF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52772,
									"end": 52782,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 52748,
									"end": 52758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 52748,
									"end": 52783,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52748,
									"end": 52783,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 52748,
									"end": 52783,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52793,
									"end": 52833,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1509970658320CF711C24D98099E2B1D5DFD240BA4E3E67EEDD50A039033D4BF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52793,
									"end": 52806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 52793,
									"end": 52833,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52793,
									"end": 52833,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 52793,
									"end": 52833,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52843,
									"end": 52876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "66DE2D57F1E19309316D1BEC7E9BDEE6DCD35EE6D22DE30E180FB9858210C7E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52873,
									"end": 52874,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52843,
									"end": 52853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 52843,
									"end": 52876,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52843,
									"end": 52876,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 52843,
									"end": 52876,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52886,
									"end": 52924,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "66DE2D57F1E19309316D1BEC7E9BDEE6DCD35EE6D22DE30E180FB9858210C7E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 52886,
									"end": 52899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 52886,
									"end": 52924,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 52886,
									"end": 52924,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 52886,
									"end": 52924,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27592,
									"end": 27702,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 27592,
									"end": 27702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27670,
									"end": 27695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27681,
									"end": 27685,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27687,
									"end": 27694,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27670,
									"end": 27680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 27670,
									"end": 27695,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27670,
									"end": 27695,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27670,
									"end": 27695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27592,
									"end": 27702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27592,
									"end": 27702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27592,
									"end": 27702,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 27827,
									"end": 28074,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 27827,
									"end": 28074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27910,
									"end": 27935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 27966,
									"end": 28000,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27966,
									"end": 28000,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 27966,
									"end": 28000,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27966,
									"end": 28000,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28015,
									"end": 28067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28015,
									"end": 28067,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27966,
									"end": 28000,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 27966,
									"end": 28000,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25281,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 25259,
									"end": 25271,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28015,
									"end": 28067,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 28015,
									"end": 28067,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 27910,
									"end": 27935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28015,
									"end": 28067,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 27827,
									"end": 28074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27827,
									"end": 28074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27827,
									"end": 28074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27827,
									"end": 28074,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 32023,
									"end": 32189,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 32023,
									"end": 32189,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32110,
									"end": 32141,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32127,
									"end": 32131,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32133,
									"end": 32140,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32110,
									"end": 32126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 32110,
									"end": 32126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32110,
									"end": 32126,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 32110,
									"end": 32126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551777"
								},
								{
									"begin": 32110,
									"end": 32126,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 32110,
									"end": 32141,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32110,
									"end": 32141,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 32110,
									"end": 32141,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 32110,
									"end": 32141,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32110,
									"end": 32141,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32163,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32169,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32174,
									"end": 32181,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 32174,
									"end": 32181,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32173,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551778"
								},
								{
									"begin": 32151,
									"end": 32173,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 32151,
									"end": 32173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32173,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32173,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32151,
									"end": 32182,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32023,
									"end": 32189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32023,
									"end": 32189,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32023,
									"end": 32189,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 28242,
									"end": 28475,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 28242,
									"end": 28475,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23749,
									"end": 23753,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23784,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 23772,
									"end": 23801,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28320,
									"end": 28469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28320,
									"end": 28469,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28369,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28375,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28392,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28399,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28399,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 28363,
									"end": 28399,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28395,
									"end": 28399,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28363,
									"end": 28399,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28399,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28363,
									"end": 28399,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28445,
									"end": 28457,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17798,
									"end": 17808,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 17798,
									"end": 17808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17719,
									"end": 17815,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28445,
									"end": 28457,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 28445,
									"end": 28457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28436,
									"end": 28443,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28430,
									"end": 28434,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28418,
									"end": 28458,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 28242,
									"end": 28475,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28242,
									"end": 28475,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28242,
									"end": 28475,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8166,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8189,
									"end": 8239,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 8194,
									"end": 8197,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8214,
									"end": 8237,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8214,
									"end": 8237,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8189,
									"end": 8193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8189,
									"end": 8239,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8189,
									"end": 8239,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 8189,
									"end": 8239,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8182,
									"end": 8239,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8182,
									"end": 8239,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8096,
									"end": 8246,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2181,
									"end": 2585,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 2181,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2248,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4330,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4318,
									"end": 4330,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4330,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 4318,
									"end": 4337,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2302,
									"end": 2325,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2482,
									"end": 2500,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2472,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2472,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2472,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2479,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2500,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2460,
									"end": 2500,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2514,
									"end": 2525,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2514,
									"end": 2525,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 2260,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2563,
									"end": 2568,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2556,
									"end": 2568,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2556,
									"end": 2568,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 51559,
									"end": 55339,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a40ea90369607611443963bf8cf79e334d66583582ec0fd1a2d73afaba89cfa564736f6c63430008040033",
									".code": [
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "6FDBD3F6"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "A8E01B28"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "CB146622"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "CB146622"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "CBF89C63"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "D43CBB15"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "D6C1CA26"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "A8E01B28"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "B501EC97"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "C8B0CF68"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "9376B94C"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "992642E5"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "6FDBD3F6"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "852757AD"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "89FEFBE1"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "327372E4"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "486D1E50"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "486D1E50"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "4DCC434A"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "4FB43199"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "64886880"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "327372E4"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "332DACCF"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "387440E6"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "23AF4E17"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "23AF4E17"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A9618"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "6A5CB3A"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "6AE7095"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "DA4EE50"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51559,
											"end": 55339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51662,
											"end": 51702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3362,
											"end": 3464,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51835,
											"end": 51872,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51708,
											"end": 51746,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25233,
											"end": 25240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25159,
											"end": 25288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4041,
											"end": 4117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51878,
											"end": 51912,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52214,
											"end": 52256,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52122,
											"end": 52161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51793,
											"end": 51829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51919,
											"end": 51983,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51919,
											"end": 51983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51919,
											"end": 51983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 51919,
											"end": 51983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51919,
											"end": 51983,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52167,
											"end": 52208,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51752,
											"end": 51786,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22844,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22795,
											"end": 22844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22840,
											"end": 22844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22795,
											"end": 22844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22795,
											"end": 22844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51989,
											"end": 52051,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 51989,
											"end": 52051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51989,
											"end": 52051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 52027,
											"end": 52051,
											"name": "PUSH",
											"source": 0,
											"value": "B5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0"
										},
										{
											"begin": 51989,
											"end": 52051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51989,
											"end": 52051,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52057,
											"end": 52115,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 52057,
											"end": 52115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52057,
											"end": 52115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 52093,
											"end": 52115,
											"name": "PUSH",
											"source": 0,
											"value": "C88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C"
										},
										{
											"begin": 52057,
											"end": 52115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52057,
											"end": 52115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30764,
											"end": 30768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30787,
											"end": 30844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A05180F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30787,
											"end": 30844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30787,
											"end": 30884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30848,
											"end": 30884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30872,
											"end": 30883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30848,
											"end": 30871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30848,
											"end": 30884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30848,
											"end": 30884,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30848,
											"end": 30884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30780,
											"end": 30884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30679,
											"end": 30891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53261,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53247,
											"end": 53270,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53173,
											"end": 53277,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25233,
											"end": 25240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 23284,
											"end": 23288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25708,
											"end": 25712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25714,
											"end": 25721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25697,
											"end": 25707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 25697,
											"end": 25722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25697,
											"end": 25722,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 25697,
											"end": 25722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25584,
											"end": 25729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 55211,
											"end": 55336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55301,
											"end": 55329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 52093,
											"end": 52115,
											"name": "PUSH",
											"source": 0,
											"value": "C88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C"
										},
										{
											"begin": 55320,
											"end": 55328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55301,
											"end": 55308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 55301,
											"end": 55329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26788,
											"end": 26811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26788,
											"end": 26811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26788,
											"end": 26811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9243,
											"end": 9264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9300,
											"end": 9302,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9273,
											"end": 9303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 9373,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9312,
											"end": 9374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9233,
											"end": 9470,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26780,
											"end": 26863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26874,
											"end": 26900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26886,
											"end": 26890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26892,
											"end": 26899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26874,
											"end": 26885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26874,
											"end": 26900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26874,
											"end": 26900,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26874,
											"end": 26900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26693,
											"end": 26907,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53489,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53397,
											"end": 53507,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 54933,
											"end": 55067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55006,
											"end": 55010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55029,
											"end": 55060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 55051,
											"end": 55059,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55029,
											"end": 55036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 55029,
											"end": 55060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54028,
											"end": 54031,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54020,
											"end": 54024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54043,
											"end": 54046,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54035,
											"end": 54039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54035,
											"end": 54046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54035,
											"end": 54046,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 54020,
											"end": 54046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5481,
											"end": 5502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "4A"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5611,
											"name": "PUSH",
											"source": 1,
											"value": "5669672070657263656E746167657320736861726573206D7573742062652065"
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5682,
											"name": "PUSH",
											"source": 1,
											"value": "787072657373656420696E206120203020746F2031303020726174696F2E2045"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78616D706C653A20333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5769,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 5750,
											"end": 5769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5471,
											"end": 5775,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 53999,
											"end": 54146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 54184,
											"end": 54188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54177,
											"end": 54188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54177,
											"end": 54188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54177,
											"end": 54188,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 54177,
											"end": 54188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54193,
											"end": 54196,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54177,
											"end": 54196,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "PUSH",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5085,
											"end": 5115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "5468652073756D206F6620616C6C205669672070657263656E74616765207368"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5222,
											"end": 5249,
											"name": "PUSH",
											"source": 1,
											"value": "61726573206D75737420626520657175616C20746F2031303000000000000000"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5286,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5267,
											"end": 5286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5045,
											"end": 5292,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54156,
											"end": 54279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54290,
											"end": 54300,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54290,
											"end": 54307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54290,
											"end": 54307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54290,
											"end": 54307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54290,
											"end": 54307,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54317,
											"end": 54329,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54317,
											"end": 54336,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53884,
											"end": 54343,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53599,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53610,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53513,
											"end": 53617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31566,
											"end": 31573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 31592,
											"end": 31620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31614,
											"end": 31619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 31592,
											"end": 31620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31592,
											"end": 31620,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 31592,
											"end": 31620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31585,
											"end": 31620,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31476,
											"end": 31627,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23749,
											"end": 23753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23663,
											"end": 23808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53151,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53160,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53055,
											"end": 53167,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 31795,
											"end": 31935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 31882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 31901,
											"end": 31928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 31901,
											"end": 31928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 55073,
											"end": 55205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55145,
											"end": 55149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55168,
											"end": 55198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 52027,
											"end": 52051,
											"name": "PUSH",
											"source": 0,
											"value": "B5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0"
										},
										{
											"begin": 55189,
											"end": 55197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55168,
											"end": 55175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 55168,
											"end": 55198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 54349,
											"end": 54927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54444,
											"end": 54445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54431,
											"end": 54441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54431,
											"end": 54445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8896,
											"end": 8898,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 8969,
											"name": "PUSH",
											"source": 1,
											"value": "626574206561726E696E6773206D757374206265206772656174657220746861"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9048,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9029,
											"end": 9048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8829,
											"end": 9054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 54423,
											"end": 54485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54495,
											"end": 54515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54546,
											"end": 54549,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54532,
											"end": 54542,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54532,
											"end": 54542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54519,
											"end": 54529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 54519,
											"end": 54542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 54518,
											"end": 54549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54495,
											"end": 54549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54495,
											"end": 54549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54582,
											"end": 54583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54567,
											"end": 54579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54567,
											"end": 54583,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 7684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7694,
											"end": 7724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "686F6C6465727327207368617265206D75737420626520677265617465722074"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7733,
											"end": 7795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7875,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7856,
											"end": 7875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7654,
											"end": 7881,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54559,
											"end": 54625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54690,
											"end": 54693,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 54674,
											"end": 54686,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54674,
											"end": 54686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54661,
											"end": 54671,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 54661,
											"end": 54686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 54660,
											"end": 54693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54635,
											"end": 54693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54711,
											"end": 54725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54711,
											"end": 54729,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6428,
											"end": 6430,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "PUSH",
											"source": 1,
											"value": "65636F73797374656D207368617265206D757374206265206772656174657220"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6564,
											"end": 6583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6361,
											"end": 6589,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 54703,
											"end": 54772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54831,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54815,
											"end": 54831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54783,
											"end": 54801,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 54783,
											"end": 54801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54783,
											"end": 54848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 54783,
											"end": 54848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54783,
											"end": 54801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54783,
											"end": 54801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54783,
											"end": 54801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54783,
											"end": 54801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54815,
											"end": 54831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54833,
											"end": 54847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54783,
											"end": 54814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 54783,
											"end": 54848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54783,
											"end": 54848,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 54783,
											"end": 54848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54891,
											"end": 54905,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54891,
											"end": 54905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54859,
											"end": 54877,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 54859,
											"end": 54877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54859,
											"end": 54920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 54859,
											"end": 54920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54859,
											"end": 54877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54859,
											"end": 54877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54859,
											"end": 54877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54859,
											"end": 54877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54891,
											"end": 54905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54907,
											"end": 54919,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54859,
											"end": 54890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 54859,
											"end": 54920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53373,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53361,
											"end": 53384,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53283,
											"end": 53391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 26009,
											"end": 26156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25233,
											"end": 25240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25259,
											"end": 25281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 23284,
											"end": 23288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23273,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 23273,
											"end": 23289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26123,
											"end": 26149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26135,
											"end": 26139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26141,
											"end": 26148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26123,
											"end": 26134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26123,
											"end": 26149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52403,
											"end": 52413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52381,
											"end": 52388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 52381,
											"end": 52414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 52360,
											"end": 52482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53740,
											"end": 53742,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53726,
											"end": 53737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53726,
											"end": 53742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6778,
											"end": 6799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6874,
											"end": 6908,
											"name": "PUSH",
											"source": 1,
											"value": "5669672070657263656E74616765206D75737420626520657870726573736564"
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "PUSH",
											"source": 1,
											"value": "20696E203020746F2031302070657263656E746167652E204578616D706C653A"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6980,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "101B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7058,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 7039,
											"end": 7058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6768,
											"end": 7064,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 53705,
											"end": 53834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53844,
											"end": 53857,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53844,
											"end": 53871,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53623,
											"end": 53878,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28242,
											"end": 28475,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28242,
											"end": 28475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 28333,
											"end": 28337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28339,
											"end": 28346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28325,
											"end": 28332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28325,
											"end": 28347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28325,
											"end": 28347,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 28325,
											"end": 28347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28320,
											"end": 28469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28320,
											"end": 28469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28363,
											"end": 28399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28395,
											"end": 28399,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28363,
											"end": 28399,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28363,
											"end": 28399,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17719,
											"end": 17815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28445,
											"end": 28457,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 28445,
											"end": 28457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28436,
											"end": 28443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28430,
											"end": 28434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28458,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 28242,
											"end": 28475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28242,
											"end": 28475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28242,
											"end": 28475,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8096,
											"end": 8246,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8096,
											"end": 8246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8214,
											"end": 8237,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8189,
											"end": 8239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23374,
											"end": 23576,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 23374,
											"end": 23576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23459,
											"end": 23463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23482,
											"end": 23529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23482,
											"end": 23529,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 23482,
											"end": 23569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14588,
											"end": 14628,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 14628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 14628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14480,
											"end": 14635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24102,
											"end": 24205,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24102,
											"end": 24205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 24179,
											"end": 24183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24168,
											"end": 24178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 24168,
											"end": 24198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24168,
											"end": 24198,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 24168,
											"end": 24198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24102,
											"end": 24205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24102,
											"end": 24205,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32023,
											"end": 32189,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 32023,
											"end": 32189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32110,
											"end": 32141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 32127,
											"end": 32131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32133,
											"end": 32140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32110,
											"end": 32126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32110,
											"end": 32141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32110,
											"end": 32141,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 32110,
											"end": 32141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32151,
											"end": 32182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32174,
											"end": 32181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32151,
											"end": 32173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32151,
											"end": 32182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32278,
											"end": 32449,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 32278,
											"end": 32449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 32384,
											"end": 32388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32390,
											"end": 32397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32366,
											"end": 32398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32366,
											"end": 32398,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 32366,
											"end": 32398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32408,
											"end": 32442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32434,
											"end": 32441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32408,
											"end": 32433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 32408,
											"end": 32442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9354,
											"end": 9510,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9354,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9482,
											"end": 9485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9494,
											"end": 9499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9478,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 9478,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8897,
											"end": 9012,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8897,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 8967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8986,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8994,
											"end": 8997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4430,
											"end": 4537,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46569,
											"end": 46774,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 46569,
											"end": 46774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46708,
											"end": 46766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 46767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 46681,
											"end": 46767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46701,
											"end": 46706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46701,
											"end": 46706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46681,
											"end": 46700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 46681,
											"end": 46767,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2181,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4330,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4318,
											"end": 4330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2260,
											"end": 2579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2479,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2514,
											"end": 2525,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2260,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2563,
											"end": 2568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2556,
											"end": 2568,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24486,
											"end": 24978,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 24486,
											"end": 24978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24574,
											"end": 24596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 24582,
											"end": 24586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24588,
											"end": 24595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24574,
											"end": 24581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 24574,
											"end": 24596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24574,
											"end": 24596,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 24574,
											"end": 24596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 24569,
											"end": 24972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24757,
											"end": 24798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 24785,
											"end": 24792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24757,
											"end": 24798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24795,
											"end": 24797,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24757,
											"end": 24776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 24757,
											"end": 24798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24757,
											"end": 24798,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 24757,
											"end": 24798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24869,
											"end": 24907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 24897,
											"end": 24901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24904,
											"end": 24906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24869,
											"end": 24888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 24869,
											"end": 24907,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24869,
											"end": 24907,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 24869,
											"end": 24907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 24612,
											"end": 24961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28646,
											"end": 28880,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28646,
											"end": 28880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 28737,
											"end": 28741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28743,
											"end": 28750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28729,
											"end": 28736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 28729,
											"end": 28751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28729,
											"end": 28751,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 28729,
											"end": 28751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28725,
											"end": 28874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28725,
											"end": 28874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28725,
											"end": 28874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28799,
											"end": 28804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28796,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28804,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28767,
											"end": 28804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28804,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28823,
											"end": 28863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28767,
											"end": 28779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28823,
											"end": 28863,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 28823,
											"end": 28863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28799,
											"end": 28804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28823,
											"end": 28863,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 28646,
											"end": 28880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28646,
											"end": 28880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28646,
											"end": 28880,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8414,
											"end": 8570,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8414,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8487,
											"end": 8491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 8518,
											"end": 8521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 8561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8538,
											"end": 8561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 8510,
											"end": 8563,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4965,
											"end": 4990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4997,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49553,
											"end": 50259,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 49553,
											"end": 50259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49972,
											"end": 49995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 50026,
											"end": 50030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50006,
											"end": 50011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49998,
											"end": 50025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 49998,
											"end": 50025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49998,
											"end": 50067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50081,
											"end": 50098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50081,
											"end": 50098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49972,
											"end": 50067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49972,
											"end": 50067,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50081,
											"end": 50102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50077,
											"end": 50253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50077,
											"end": 50253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50176,
											"end": 50186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 50165,
											"end": 50195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8487,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8524,
											"end": 8558,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8568,
											"end": 8608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50157,
											"end": 50242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8418,
											"end": 8650,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16312,
											"end": 16753,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 16312,
											"end": 16753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16400,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16412,
											"end": 16431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16444,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 16448,
											"end": 16454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16444,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 16444,
											"end": 16454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16444,
											"end": 16454,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 16444,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16457,
											"end": 16458,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 16444,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16434,
											"end": 16459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16412,
											"end": 16459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16469,
											"end": 16475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16476,
											"end": 16477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16494,
											"end": 16500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16501,
											"end": 16502,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16494,
											"end": 16509,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16524,
											"end": 16533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 16540,
											"end": 16546,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16537,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16536,
											"end": 16546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 16536,
											"end": 16546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16536,
											"end": 16546,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 16536,
											"end": 16546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16549,
											"end": 16550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 16536,
											"end": 16550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16524,
											"end": 16550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16556,
											"end": 16557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16552,
											"end": 16553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16557,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16603,
											"end": 16608,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16611,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 16603,
											"end": 16614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 16590,
											"end": 16615,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16585,
											"end": 16586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16578,
											"end": 16615,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16639,
											"end": 16640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16629,
											"end": 16640,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16640,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16640,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16629,
											"end": 16640,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16559,
											"end": 16562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 16519,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16668,
											"end": 16678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16668,
											"end": 16678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16660,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4684,
											"end": 4866,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 4141,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2753,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2819,
											"end": 2823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2968,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2956,
											"end": 2968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 3005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 3005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2986,
											"end": 4135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3383,
											"end": 3393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 3428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3411,
											"end": 3453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 3468,
											"end": 3866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3541,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3560,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3698,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3698,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3866,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 3468,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2986,
											"end": 4135,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2986,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4119,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36335,
											"end": 36558,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 36335,
											"end": 36558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36468,
											"end": 36480,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36499,
											"end": 36551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 36521,
											"end": 36527,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36529,
											"end": 36533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36535,
											"end": 36536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36538,
											"end": 36550,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36499,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 36499,
											"end": 36551,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36499,
											"end": 36551,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 36499,
											"end": 36551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36492,
											"end": 36551,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36335,
											"end": 36558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36335,
											"end": 36558,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37422,
											"end": 37921,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 37422,
											"end": 37921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37587,
											"end": 37599,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37644,
											"end": 37649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37619,
											"end": 37640,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 37619,
											"end": 37649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37619,
											"end": 37649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6094,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6033,
											"end": 6095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5954,
											"end": 6182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 37611,
											"end": 37692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33939,
											"end": 33958,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33939,
											"end": 33958,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8129,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8060,
											"end": 8239,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 37702,
											"end": 37762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37774,
											"end": 37786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37788,
											"end": 37811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37821,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37815,
											"end": 37826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37834,
											"end": 37839,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37841,
											"end": 37845,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37815,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37773,
											"end": 37846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37773,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37773,
											"end": 37846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37773,
											"end": 37846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 37880,
											"end": 37887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37889,
											"end": 37899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37901,
											"end": 37913,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 37863,
											"end": 37914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37863,
											"end": 37914,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 37863,
											"end": 37914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37856,
											"end": 37914,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 37422,
											"end": 37921,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37422,
											"end": 37921,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40035,
											"end": 40777,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 40035,
											"end": 40777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40181,
											"end": 40193,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40209,
											"end": 40216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40205,
											"end": 40771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40205,
											"end": 40771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 40205,
											"end": 40771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40239,
											"end": 40249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40232,
											"end": 40249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 40232,
											"end": 40249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40205,
											"end": 40771,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 40205,
											"end": 40771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40350,
											"end": 40367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40350,
											"end": 40367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40350,
											"end": 40371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40346,
											"end": 40761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 40346,
											"end": 40761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40594,
											"end": 40604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40588,
											"end": 40605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40654,
											"end": 40669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40641,
											"end": 40651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40637,
											"end": 40639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40633,
											"end": 40652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40626,
											"end": 40670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40543,
											"end": 40688,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 40543,
											"end": 40688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40733,
											"end": 40745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 40726,
											"end": 40746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 393,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 460,
											"end": 466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 492,
											"end": 499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 484,
											"end": 516,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 481,
											"end": 483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 534,
											"end": 540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 481,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 571,
											"end": 580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 565,
											"end": 581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 624,
											"end": 629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 617,
											"end": 630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 610,
											"end": 631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 603,
											"end": 608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 600,
											"end": 632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 590,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 590,
											"end": 592,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 643,
											"end": 649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 636,
											"end": 658,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 695,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 695,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 754,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 786,
											"end": 793,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 782,
											"end": 805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 778,
											"end": 810,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 775,
											"end": 777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 775,
											"end": 777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 813,
											"end": 835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 775,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 775,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 879,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 856,
											"end": 879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 765,
											"end": 885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 890,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 958,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1005,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 987,
											"end": 989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 987,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 987,
											"end": 989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 987,
											"end": 989,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 987,
											"end": 989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1091,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1159,
											"end": 1417,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1159,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1246,
											"end": 1417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1422,
											"end": 1728,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1422,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1531,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1536,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1670,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2465,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 2191,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2412,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2470,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 2470,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2906,
											"name": "PUSH",
											"source": 1,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3224,
											"end": 3250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3250,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 3256,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 3256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4122,
											"end": 4505,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 4122,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4468,
											"end": 4483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4445,
											"end": 4499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4499,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7069,
											"end": 7475,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7069,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7310,
											"end": 7312,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F2070726976696C65676520746F2072756E20746869"
										},
										{
											"begin": 7344,
											"end": 7346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 7384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7415,
											"end": 7417,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7475,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9657,
											"end": 9785,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 9657,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 9700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9731,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9790,
											"end": 10007,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9790,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 9912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 9932,
											"end": 9933,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9925,
											"end": 9940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 9968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 10007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10106,
											"end": 10120,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10104,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10121,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10081,
											"end": 10098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10165,
											"end": 10174,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10064,
											"end": 10180,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10185,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10185,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10247,
											"end": 10255,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10295,
											"end": 10304,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10315,
											"end": 10573,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10315,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10481,
											"end": 10499,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10468,
											"end": 10479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10535,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10560,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10552,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10578,
											"end": 10714,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 10578,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10635,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 10635,
											"end": 10637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10714,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10719,
											"end": 10846,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10719,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 10775,
											"end": 10778,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10768,
											"end": 10769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10761,
											"end": 10792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10811,
											"end": 10815,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10801,
											"end": 10816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10825,
											"end": 10840,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F": "74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639"
									}
								},
								"1509970658320CF711C24D98099E2B1D5DFD240BA4E3E67EEDD50A039033D4BF": "b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0",
								"4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F": "74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639",
								"66DE2D57F1E19309316D1BEC7E9BDEE6DCD35EE6D22DE30E180FB9858210C7E5": "c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c"
							}
						},
						"methodIdentifiers": {
							"BLACKLIST()": "c8b0cf68",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"EVENT_ADMIN()": "b501ec97",
							"SYSTEM_ADMIN()": "852757ad",
							"betFactory()": "2e1a9618",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventFactory()": "6fdbd3f6",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setBetFactory(address)": "89fefbe1",
							"setEcosystemAddress(address)": "a8e01b28",
							"setEventFactory(address)": "d43cbb15",
							"setHoldersAddress(address)": "327372e4",
							"setMarketFactory(address)": "4dcc434a",
							"setStableCoin(address)": "23af4e17",
							"setVigPercentage(uint256)": "d6c1ca26",
							"setVigPercentageShares(uint256,uint256)": "64886880",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLACKLIST\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EVENT_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYSTEM_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setBetFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setEventFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setHoldersAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setMarketFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setVigPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hVig\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eVig\",\"type\":\"uint256\"}],\"name\":\"setVigPercentageShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Okoro\",\"custom:security\":\"contact okoro.victor@web3bets.io\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Web3Bets Contract for FixedOdds decentralized betting exchange\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains Web3Bets ecosystem's variables and functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Web3BetsFO_flat.sol\":\"Web3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Web3BetsFO_flat.sol\":{\"keccak256\":\"0x4ab5b71cf87d38e759b624e051bb4a39de9b00bb86da8326f856bb56e283433e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a428e58ef20881d3faaa5a5e84db76b3328d94671807c545d300b9b237c29be1\",\"dweb:/ipfs/Qmb9Liy8XjRZN78FWa9EsJ819Uj5dCCspwx66kyT7UN3bk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 969,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)964_storage)"
							},
							{
								"astId": 1302,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)311_storage)"
							},
							{
								"astId": 2177,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "ecosystemAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2180,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "holdersAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2183,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "stableCoin",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2186,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "eventFactory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 2189,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "marketFactory",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2192,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "betFactory",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 2211,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "holdersVig",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2215,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "ecosystemVig",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2219,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "vigPercentage",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 2225,
								"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
								"label": "_stableCoinWrapper",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IERC20)1814"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)1814": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)311_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)311_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)964_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)964_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)311_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 310,
										"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)10_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)964_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 961,
										"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 963,
										"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)10_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 5,
										"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 9,
										"contract": "Web3BetsFO_flat.sol:Web3BetsFO",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains Web3Bets ecosystem's variables and functions",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Web3BetsFO_flat.sol": {
				"ast": {
					"absolutePath": "Web3BetsFO_flat.sol",
					"exportedSymbols": {
						"AccessControl": [
							1264
						],
						"AccessControlEnumerable": [
							1408
						],
						"Address": [
							1702
						],
						"Context": [
							877
						],
						"ERC165": [
							631
						],
						"EnumerableSet": [
							598
						],
						"IAccessControl": [
							949
						],
						"IAccessControlEnumerable": [
							1287
						],
						"IERC165": [
							609
						],
						"IERC20": [
							1814
						],
						"IERC20Permit": [
							1737
						],
						"IWeb3BetsFO": [
							2164
						],
						"SafeERC20": [
							2091
						],
						"Strings": [
							856
						],
						"Web3BetsFO": [
							2510
						]
					},
					"id": 2511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "183:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "208:1087:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 598,
							"linearizedBaseContracts": [
								598
							],
							"name": "EnumerableSet",
							"nameLocation": "1304:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1828:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "1818:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 4,
												"nodeType": "ArrayTypeName",
												"src": "1818:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1996:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "1968:36:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 8,
												"keyType": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1968:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1771:3:0",
									"nodeType": "StructDefinition",
									"scope": 598,
									"src": "1764:247:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2250:335:0",
										"statements": [
											{
												"condition": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:22:0",
													"subExpression": {
														"arguments": [
															{
																"id": 22,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "2275:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 23,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2280:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 21,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "2265:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 49,
													"nodeType": "Block",
													"src": "2542:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2563:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 20,
															"id": 48,
															"nodeType": "Return",
															"src": "2556:12:0"
														}
													]
												},
												"id": 50,
												"nodeType": "IfStatement",
												"src": "2260:319:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "2288:248:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "2319:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 26,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "2302:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "2302:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2302:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2302:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 33,
															"nodeType": "ExpressionStatement",
															"src": "2302:23:0"
														},
														{
															"expression": {
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 34,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "2460:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "2460:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 38,
																	"indexExpression": {
																		"id": 36,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "2473:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2460:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 39,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "2482:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "2482:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2482:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2460:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 43,
															"nodeType": "ExpressionStatement",
															"src": "2460:40:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2521:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 20,
															"id": 45,
															"nodeType": "Return",
															"src": "2514:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "2017:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2190:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2207:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2195:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "2195:3:0"
													},
													"referencedDeclaration": 10,
													"src": "2195:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2220:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 15,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:32:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2244:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2243:6:0"
									},
									"scope": 598,
									"src": "2181:404:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "2825:1316:0",
										"statements": [
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2943:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 135,
														"src": "2935:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 65,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2956:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "2956:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 68,
													"indexExpression": {
														"id": 67,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "2969:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2956:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2935:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 70,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2990:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3004:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2990:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 133,
													"nodeType": "Block",
													"src": "4098:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 62,
															"id": 132,
															"nodeType": "Return",
															"src": "4112:12:0"
														}
													]
												},
												"id": 134,
												"nodeType": "IfStatement",
												"src": "2986:1149:0",
												"trueBody": {
													"id": 130,
													"nodeType": "Block",
													"src": "3007:1085:0",
													"statements": [
														{
															"assignments": [
																74
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 74,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3367:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 130,
																	"src": "3359:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 73,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3359:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 78,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 75,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "3383:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3383:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3359:38:0"
														},
														{
															"assignments": [
																80
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 80,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3419:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 130,
																	"src": "3411:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 79,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3411:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 86,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 81,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "3431:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "3431:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3431:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3452:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3431:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3411:42:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 87,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "3472:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 88,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "3485:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3472:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 114,
															"nodeType": "IfStatement",
															"src": "3468:398:0",
															"trueBody": {
																"id": 113,
																"nodeType": "Block",
																"src": "3500:366:0",
																"statements": [
																	{
																		"assignments": [
																			91
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 91,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3526:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 113,
																				"src": "3518:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 90,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3518:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 96,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 92,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "3538:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 93,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5,
																				"src": "3538:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 95,
																			"indexExpression": {
																				"id": 94,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 80,
																				"src": "3550:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3538:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3518:42:0"
																	},
																	{
																		"expression": {
																			"id": 103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 97,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "3660:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 100,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 5,
																					"src": "3660:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 101,
																				"indexExpression": {
																					"id": 99,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 74,
																					"src": "3672:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3660:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 102,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 91,
																				"src": "3689:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3660:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 104,
																		"nodeType": "ExpressionStatement",
																		"src": "3660:38:0"
																	},
																	{
																		"expression": {
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 105,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "3772:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 108,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 9,
																					"src": "3772:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 109,
																				"indexExpression": {
																					"id": 107,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 91,
																					"src": "3785:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3772:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 110,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 64,
																				"src": "3798:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3772:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 112,
																		"nodeType": "ExpressionStatement",
																		"src": "3772:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 115,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "3944:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "3944:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3944:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3944:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "3944:17:0"
														},
														{
															"expression": {
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4029:26:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 122,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "4036:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "4036:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 125,
																	"indexExpression": {
																		"id": 124,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "4049:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4036:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "4029:26:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4077:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 62,
															"id": 129,
															"nodeType": "Return",
															"src": "4070:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2591:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2762:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2782:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2770:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 55,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 54,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "2770:3:0"
													},
													"referencedDeclaration": 10,
													"src": "2770:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2795:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 57,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:32:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:6:0"
									},
									"scope": 598,
									"src": "2753:1388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "4301:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 147,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "4318:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "4318:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 150,
														"indexExpression": {
															"id": 149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4331:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4318:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4318:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 146,
												"id": 153,
												"nodeType": "Return",
												"src": "4311:31:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "4147:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4231:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4253:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4241:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "4241:3:0"
													},
													"referencedDeclaration": 10,
													"src": "4241:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4266:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:32:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4295:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4295:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:6:0"
									},
									"scope": 598,
									"src": "4222:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4495:42:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 164,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "4512:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4512:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4512:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 163,
												"id": 167,
												"nodeType": "Return",
												"src": "4505:25:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "4355:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4439:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4459:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4447:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 158,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 157,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "4447:3:0"
													},
													"referencedDeclaration": 10,
													"src": "4447:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:17:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4486:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4485:9:0"
									},
									"scope": 598,
									"src": "4430:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4955:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 180,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4972:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4972:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 183,
													"indexExpression": {
														"id": 182,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4984:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4972:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 179,
												"id": 184,
												"nodeType": "Return",
												"src": "4965:25:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4543:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4904:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4892:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "4892:3:0"
													},
													"referencedDeclaration": 10,
													"src": "4892:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4891:32:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4945:9:0"
									},
									"scope": 598,
									"src": "4879:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "5611:35:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 196,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "5628:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "5628:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 195,
												"id": 198,
												"nodeType": "Return",
												"src": "5621:18:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5003:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5546:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5566:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5554:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 188,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "5554:3:0"
													},
													"referencedDeclaration": 10,
													"src": "5554:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5553:17:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5593:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 192,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 193,
													"nodeType": "ArrayTypeName",
													"src": "5593:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:18:0"
									},
									"scope": 598,
									"src": "5537:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 204,
									"members": [
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5703:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 204,
											"src": "5699:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 202,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 201,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 10,
													"src": "5699:3:0"
												},
												"referencedDeclaration": 10,
												"src": "5699:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5678:10:0",
									"nodeType": "StructDefinition",
									"scope": 598,
									"src": "5671:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "5962:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 216,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "5984:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "5984:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 218,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "5996:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 215,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "5979:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5979:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 214,
												"id": 220,
												"nodeType": "Return",
												"src": "5972:30:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "5722:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5895:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5918:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5899:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 206,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 204,
														"src": "5899:10:0"
													},
													"referencedDeclaration": 204,
													"src": "5899:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5931:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5923:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 209,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5898:39:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "5956:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5955:6:0"
									},
									"scope": 598,
									"src": "5886:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "6256:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 234,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "6281:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "6281:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "6293:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "6273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6273:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 232,
												"id": 238,
												"nodeType": "Return",
												"src": "6266:33:0"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "6015:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6186:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6212:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "6193:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 204,
														"src": "6193:10:0"
													},
													"referencedDeclaration": 204,
													"src": "6193:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6225:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "6217:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6192:39:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "6250:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6249:6:0"
									},
									"scope": 598,
									"src": "6177:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "6473:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 252,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6500:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "6500:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 254,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "6512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 251,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "6490:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6490:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 250,
												"id": 256,
												"nodeType": "Return",
												"src": "6483:35:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "6312:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6396:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6424:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6405:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 243,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 242,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 204,
														"src": "6405:10:0"
													},
													"referencedDeclaration": 204,
													"src": "6405:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6437:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6429:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6404:39:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "6467:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6466:6:0"
									},
									"scope": 598,
									"src": "6387:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "6678:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 268,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "6703:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "6703:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 267,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "6695:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6695:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 271,
												"nodeType": "Return",
												"src": "6688:26:0"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "6531:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6615:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6641:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "6622:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 261,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 260,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 204,
														"src": "6622:10:0"
													},
													"referencedDeclaration": 204,
													"src": "6622:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6621:24:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "6669:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6668:9:0"
									},
									"scope": 598,
									"src": "6606:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "7146:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 285,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "7167:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "7167:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 287,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "7179:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "7163:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7163:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 283,
												"id": 289,
												"nodeType": "Return",
												"src": "7156:29:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "6727:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7072:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7094:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "7075:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 275,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 204,
														"src": "7075:10:0"
													},
													"referencedDeclaration": 204,
													"src": "7075:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7107:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "7099:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:39:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "7137:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7136:9:0"
									},
									"scope": 598,
									"src": "7063:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "7813:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 302,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "7838:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "7838:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 301,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "7830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7830:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 300,
												"id": 305,
												"nodeType": "Return",
												"src": "7823:26:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "7198:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7741:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7767:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "7748:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 293,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 204,
														"src": "7748:10:0"
													},
													"referencedDeclaration": 204,
													"src": "7748:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$204_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7747:24:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "7795:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 297,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 298,
													"nodeType": "ArrayTypeName",
													"src": "7795:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7794:18:0"
									},
									"scope": 598,
									"src": "7732:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 311,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7913:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 311,
											"src": "7909:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 309,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 308,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 10,
													"src": "7909:3:0"
												},
												"referencedDeclaration": 10,
												"src": "7909:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7888:10:0",
									"nodeType": "StructDefinition",
									"scope": 598,
									"src": "7881:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "8172:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "8194:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "8194:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 331,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "8230:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8222:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 329,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8222:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8222:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8214:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 327,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8214:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8214:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 325,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8206:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8206:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 322,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "8189:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8189:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 336,
												"nodeType": "Return",
												"src": "8182:57:0"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "7932:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8105:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8128:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "8109:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "8109:10:0"
													},
													"referencedDeclaration": 311,
													"src": "8109:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8141:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "8133:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8108:39:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "8166:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8165:6:0"
									},
									"scope": 598,
									"src": "8096:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "8493:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 350,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "8518:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "8518:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 358,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "8554:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8546:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 356,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8546:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8546:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8538:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 354,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8538:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8538:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8530:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 352,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8530:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8530:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 349,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8510:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 348,
												"id": 363,
												"nodeType": "Return",
												"src": "8503:60:0"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "8252:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8423:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8449:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8430:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "8430:10:0"
													},
													"referencedDeclaration": 311,
													"src": "8430:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8462:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8454:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8429:39:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8487:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8486:6:0"
									},
									"scope": 598,
									"src": "8414:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "8737:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 377,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "8764:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "8764:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 385,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 371,
																					"src": "8800:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8792:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 383,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8792:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8792:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8784:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 381,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8784:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8784:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8776:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 379,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8776:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8776:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 376,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "8754:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8754:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 390,
												"nodeType": "Return",
												"src": "8747:62:0"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "8576:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8660:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8688:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "8669:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 367,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "8669:10:0"
													},
													"referencedDeclaration": 311,
													"src": "8669:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8701:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "8693:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8668:39:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "8731:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8731:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8730:6:0"
									},
									"scope": 598,
									"src": "8651:165:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "8969:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 402,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "8994:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "8994:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 401,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "8986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8986:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 400,
												"id": 405,
												"nodeType": "Return",
												"src": "8979:26:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "8822:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8906:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8932:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "8913:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 394,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "8913:10:0"
													},
													"referencedDeclaration": 311,
													"src": "8913:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8912:24:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "8960:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8959:9:0"
									},
									"scope": 598,
									"src": "8897:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "9437:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 425,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "9482:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 426,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 310,
																					"src": "9482:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$10_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 427,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "9494:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$10_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 424,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 186,
																				"src": "9478:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9478:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9470:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 422,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9470:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9470:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9462:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 420,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9462:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9462:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 418,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9454:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9454:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 417,
												"id": 432,
												"nodeType": "Return",
												"src": "9447:56:0"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "9018:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9363:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9385:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9366:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "9366:10:0"
													},
													"referencedDeclaration": 311,
													"src": "9366:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9398:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9390:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9365:39:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "9428:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9427:9:0"
									},
									"scope": 598,
									"src": "9354:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "10131:219:0",
										"statements": [
											{
												"assignments": [
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10158:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "10141:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 446,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10141:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 447,
															"nodeType": "ArrayTypeName",
															"src": "10141:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 450,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "10174:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 310,
															"src": "10174:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 449,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "10166:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10166:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10141:44:0"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10212:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "10195:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10195:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 457,
															"nodeType": "ArrayTypeName",
															"src": "10195:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"nodeType": "VariableDeclarationStatement",
												"src": "10195:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10281:39:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10295:15:0",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10305:5:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10295:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 458,
														"isOffset": false,
														"isSlot": false,
														"src": "10295:6:0",
														"valueSize": 1
													},
													{
														"declaration": 448,
														"isOffset": false,
														"isSlot": false,
														"src": "10305:5:0",
														"valueSize": 1
													}
												],
												"id": 460,
												"nodeType": "InlineAssembly",
												"src": "10272:48:0"
											},
											{
												"expression": {
													"id": 461,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "10337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 443,
												"id": 462,
												"nodeType": "Return",
												"src": "10330:13:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "9516:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10059:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10085:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "10066:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 436,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "10066:10:0"
													},
													"referencedDeclaration": 311,
													"src": "10066:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10065:24:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "10113:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 440,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10113:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 441,
													"nodeType": "ArrayTypeName",
													"src": "10113:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10112:18:0"
									},
									"scope": 598,
									"src": "10050:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 468,
									"members": [
										{
											"constant": false,
											"id": 467,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10401:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 468,
											"src": "10397:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 466,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 465,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 10,
													"src": "10397:3:0"
												},
												"referencedDeclaration": 10,
												"src": "10397:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10379:7:0",
									"nodeType": "StructDefinition",
									"scope": 598,
									"src": "10372:42:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "10657:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 480,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "10679:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "10679:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 484,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "10699:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10691:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 482,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10691:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10691:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 479,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "10674:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10674:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 478,
												"id": 487,
												"nodeType": "Return",
												"src": "10667:39:0"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "10420:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10593:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10613:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10597:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "10597:7:0"
													},
													"referencedDeclaration": 468,
													"src": "10597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10626:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10618:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10596:36:0"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10651:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10650:6:0"
									},
									"scope": 598,
									"src": "10584:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "10957:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 501,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "10982:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "10982:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 505,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "11002:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10994:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 503,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10994:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10994:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 500,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "10974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10974:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 508,
												"nodeType": "Return",
												"src": "10967:42:0"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "10719:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10890:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10913:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "10897:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 491,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "10897:7:0"
													},
													"referencedDeclaration": 468,
													"src": "10897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10926:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "10918:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10896:36:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "10951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10950:6:0"
									},
									"scope": 598,
									"src": "10881:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "11180:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 522,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "11207:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "11207:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 526,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "11227:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11219:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 524,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11219:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11219:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 521,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "11197:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11197:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 520,
												"id": 529,
												"nodeType": "Return",
												"src": "11190:44:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "11022:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11106:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11131:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11115:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "11115:7:0"
													},
													"referencedDeclaration": 468,
													"src": "11115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11144:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11136:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11114:36:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11174:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11173:6:0"
									},
									"scope": 598,
									"src": "11097:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "11391:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "11416:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "11416:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 540,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "11408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11408:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 539,
												"id": 544,
												"nodeType": "Return",
												"src": "11401:26:0"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "11247:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11331:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11354:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "11338:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 533,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "11338:7:0"
													},
													"referencedDeclaration": 468,
													"src": "11338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11337:21:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "11382:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11381:9:0"
									},
									"scope": 598,
									"src": "11322:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "11856:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 560,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "11885:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 467,
																	"src": "11885:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$10_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 562,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "11897:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$10_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 559,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "11881:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11881:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11873:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11873:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 556,
												"id": 565,
												"nodeType": "Return",
												"src": "11866:38:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "11440:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11785:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11804:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "11788:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 548,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "11788:7:0"
													},
													"referencedDeclaration": 468,
													"src": "11788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11817:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "11809:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11787:36:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "11847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11846:9:0"
									},
									"scope": 598,
									"src": "11776:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "12529:219:0",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12556:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "12539:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 579,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12539:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 580,
															"nodeType": "ArrayTypeName",
															"src": "12539:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 583,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "12572:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 467,
															"src": "12572:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 582,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "12564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12564:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:44:0"
											},
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12610:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "12593:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 589,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12593:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 590,
															"nodeType": "ArrayTypeName",
															"src": "12593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 592,
												"nodeType": "VariableDeclarationStatement",
												"src": "12593:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12679:39:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12693:15:0",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12703:5:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12693:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 591,
														"isOffset": false,
														"isSlot": false,
														"src": "12693:6:0",
														"valueSize": 1
													},
													{
														"declaration": 581,
														"isOffset": false,
														"isSlot": false,
														"src": "12703:5:0",
														"valueSize": 1
													}
												],
												"id": 593,
												"nodeType": "InlineAssembly",
												"src": "12670:48:0"
											},
											{
												"expression": {
													"id": 594,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 591,
													"src": "12735:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 576,
												"id": 595,
												"nodeType": "Return",
												"src": "12728:13:0"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "11917:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12460:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12483:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "12467:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 569,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 468,
														"src": "12467:7:0"
													},
													"referencedDeclaration": 468,
													"src": "12467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$468_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12466:21:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "12511:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 573,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 574,
													"nodeType": "ArrayTypeName",
													"src": "12511:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12510:18:0"
									},
									"scope": 598,
									"src": "12451:297:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "1296:11454:0",
							"usedErrors": []
						},
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12887:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "12912:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 609,
							"linearizedBaseContracts": [
								609
							],
							"name": "IERC165",
							"nameLocation": "13202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "13216:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13570:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13595:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "13588:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 602,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13587:20:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "13631:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13630:6:0"
									},
									"scope": 609,
									"src": "13561:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "13192:447:0",
							"usedErrors": []
						},
						{
							"id": 610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13774:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 612,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 609,
										"src": "14405:7:0"
									},
									"id": 613,
									"nodeType": "InheritanceSpecifier",
									"src": "14405:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 611,
								"nodeType": "StructuredDocumentation",
								"src": "13800:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631,
								609
							],
							"name": "ERC165",
							"nameLocation": "14395:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										608
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "14571:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 622,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "14588:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 624,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "14608:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$609_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$609_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 623,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14603:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14603:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$609",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "14603:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "14588:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 621,
												"id": 628,
												"nodeType": "Return",
												"src": "14581:47:0"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "14419:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "14489:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 618,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14547:8:0"
									},
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "14514:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "14507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 615,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "14507:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14506:20:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "14565:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14564:6:0"
									},
									"scope": 631,
									"src": "14480:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2511,
							"src": "14377:260:0",
							"usedErrors": []
						},
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14761:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 633,
								"nodeType": "StructuredDocumentation",
								"src": "14786:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "Strings",
							"nameLocation": "14829:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 636,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "14868:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "14843:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 634,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "14843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14883:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 639,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "14930:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 856,
									"src": "14907:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 637,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "14907:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14948:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "15123:632:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "15325:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15334:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15325:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "15321:51:0",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "15337:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15358:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 646,
															"id": 651,
															"nodeType": "Return",
															"src": "15351:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "15389:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "15381:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 654,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"id": 656,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 642,
													"src": "15396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15381:20:0"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "15419:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "15411:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15411:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"nodeType": "VariableDeclarationStatement",
												"src": "15411:14:0"
											},
											{
												"body": {
													"id": 671,
													"nodeType": "Block",
													"src": "15453:57:0",
													"statements": [
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "15467:8:0",
																"subExpression": {
																	"id": 664,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "15467:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "15467:8:0"
														},
														{
															"expression": {
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 667,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "15489:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15497:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "15489:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "15489:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "15442:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15442:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "WhileStatement",
												"src": "15435:75:0"
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "15532:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "15519:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 673,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15519:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "15551:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15541:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 675,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15545:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15541:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15519:39:0"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "15587:131:0",
													"statements": [
														{
															"expression": {
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 683,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "15601:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15601:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "15601:11:0"
														},
														{
															"expression": {
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 687,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "15626:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 689,
																	"indexExpression": {
																		"id": 688,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "15633:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "15626:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15656:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 699,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 697,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 642,
																									"src": "15669:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 698,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15677:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "15669:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 696,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "15661:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 695,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "15661:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 700,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15661:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15656:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15650:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 692,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "15650:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15650:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15643:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 690,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "15643:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15643:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "15626:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "15626:56:0"
														},
														{
															"expression": {
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "15696:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15705:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "15696:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "15696:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "15575:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15584:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15575:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "WhileStatement",
												"src": "15568:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "15741:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15734:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 712,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "15734:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15734:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 646,
												"id": 716,
												"nodeType": "Return",
												"src": "15727:21:0"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "14957:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "15061:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15078:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "15070:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15069:15:0"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "15108:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15107:15:0"
									},
									"scope": 856,
									"src": "15052:703:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "15934:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 726,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "15948:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15957:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15948:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"nodeType": "IfStatement",
												"src": "15944:54:0",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "15960:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15981:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 725,
															"id": 730,
															"nodeType": "Return",
															"src": "15974:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "16015:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "16007:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"id": 735,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "16022:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16007:20:0"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "16045:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "16037:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 740,
												"initialValue": {
													"hexValue": "30",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16054:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16037:18:0"
											},
											{
												"body": {
													"id": 751,
													"nodeType": "Block",
													"src": "16083:57:0",
													"statements": [
														{
															"expression": {
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "16097:8:0",
																"subExpression": {
																	"id": 744,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "16097:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 746,
															"nodeType": "ExpressionStatement",
															"src": "16097:8:0"
														},
														{
															"expression": {
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 747,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "16119:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16128:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "16119:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "16119:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 741,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "16072:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16080:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16072:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "WhileStatement",
												"src": "16065:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "16168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 755,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "16175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															759,
															835,
															855
														],
														"referencedDeclaration": 835,
														"src": "16156:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16156:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 757,
												"nodeType": "Return",
												"src": "16149:33:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "15761:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "15869:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15889:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "15881:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15880:15:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "15919:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15919:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15918:15:0"
									},
									"scope": 856,
									"src": "15860:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "16402:351:0",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "16425:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 834,
														"src": "16412:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 769,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16412:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16444:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 774,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "16448:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16444:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16457:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "16444:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "16434:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 771,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16438:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16434:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16412:47:0"
											},
											{
												"expression": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 780,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "16469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 782,
														"indexExpression": {
															"hexValue": "30",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16476:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16469:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16481:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "16469:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "16469:15:0"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "16494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 788,
														"indexExpression": {
															"hexValue": "31",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16501:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16494:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16506:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "16494:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "16494:15:0"
											},
											{
												"body": {
													"id": 820,
													"nodeType": "Block",
													"src": "16564:87:0",
													"statements": [
														{
															"expression": {
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 806,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "16578:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 808,
																	"indexExpression": {
																		"id": 807,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "16585:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16578:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 809,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "16590:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 813,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 810,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "16603:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16611:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "16603:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16590:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "16578:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 815,
															"nodeType": "ExpressionStatement",
															"src": "16578:37:0"
														},
														{
															"expression": {
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 816,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "16629:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "16629:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "16629:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 800,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "16552:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16556:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16552:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"initializationExpression": {
													"assignments": [
														793
													],
													"declarations": [
														{
															"constant": false,
															"id": 793,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "16532:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 821,
															"src": "16524:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 792,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16524:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 799,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16536:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 795,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16540:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16536:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16549:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "16536:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16524:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "16559:3:0",
														"subExpression": {
															"id": 803,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "16561:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 805,
													"nodeType": "ExpressionStatement",
													"src": "16559:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16519:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 823,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "16668:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16677:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16668:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16680:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16660:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "16660:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "16739:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16732:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 829,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "16732:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16732:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 768,
												"id": 833,
												"nodeType": "Return",
												"src": "16725:21:0"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "16195:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "16321:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "16333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "16356:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "16348:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16332:31:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "16387:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16387:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16386:15:0"
									},
									"scope": 856,
									"src": "16312:441:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "16978:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 848,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 838,
																			"src": "17023:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17015:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 846,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "17015:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17015:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17007:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17007:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 851,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "17031:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 843,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															759,
															835,
															855
														],
														"referencedDeclaration": 835,
														"src": "16995:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16995:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 842,
												"id": 853,
												"nodeType": "Return",
												"src": "16988:59:0"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "16759:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "16914:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "16934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "16926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16925:14:0"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "16963:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16963:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16962:15:0"
									},
									"scope": 856,
									"src": "16905:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "14821:2235:0",
							"usedErrors": []
						},
						{
							"id": 857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17165:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 858,
								"nodeType": "StructuredDocumentation",
								"src": "17190:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "Context",
							"nameLocation": "17705:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "17781:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 863,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "17798:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "17798:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 862,
												"id": 865,
												"nodeType": "Return",
												"src": "17791:17:0"
											}
										]
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "17728:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17738:2:0"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "17772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17772:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17771:9:0"
									},
									"scope": 877,
									"src": "17719:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "17888:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 872,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "17905:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "17905:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 871,
												"id": 874,
												"nodeType": "Return",
												"src": "17898:15:0"
											}
										]
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "17830:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17838:2:0"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "17872:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17872:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17871:16:0"
									},
									"scope": 877,
									"src": "17821:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "17687:235:0",
							"usedErrors": []
						},
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18047:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 879,
								"nodeType": "StructuredDocumentation",
								"src": "18072:89:0",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949
							],
							"name": "IAccessControl",
							"nameLocation": "18172:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "18193:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 888,
									"name": "RoleAdminChanged",
									"nameLocation": "18496:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "18529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "18513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "18551:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "18535:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "18586:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "18570:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18512:87:0"
									},
									"src": "18490:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "18606:212:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 897,
									"name": "RoleGranted",
									"nameLocation": "18829:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "18857:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "18841:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18879:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "18863:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "18904:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "18888:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18840:71:0"
									},
									"src": "18823:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "18918:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 906,
									"name": "RoleRevoked",
									"nameLocation": "19204:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19232:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "19216:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 899,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "19238:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "19279:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "19263:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19215:71:0"
									},
									"src": "19198:89:0"
								},
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "19293:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "19383:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19399:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "19391:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 908,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "19405:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19390:31:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "19445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19444:6:0"
									},
									"scope": 949,
									"src": "19374:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "19457:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "19655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19676:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "19668:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19667:14:0"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "19705:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 921,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19704:9:0"
									},
									"scope": 949,
									"src": "19646:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "19720:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "19973:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19991:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "19983:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 926,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20005:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "19997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19982:31:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20022:0:0"
									},
									"scope": 949,
									"src": "19964:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "20029:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "20266:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "20285:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20277:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 934,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "20291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20276:31:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20316:0:0"
									},
									"scope": 949,
									"src": "20257:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "20323:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "20817:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "20838:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "20830:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 942,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20852:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "20844:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20829:31:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20869:0:0"
									},
									"scope": 949,
									"src": "20808:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "18162:2710:0",
							"usedErrors": []
						},
						{
							"id": 950,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21010:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 952,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "22609:7:0"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "22609:7:0"
								},
								{
									"baseName": {
										"id": 954,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "22618:14:0"
									},
									"id": 955,
									"nodeType": "InheritanceSpecifier",
									"src": "22618:14:0"
								},
								{
									"baseName": {
										"id": 956,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "22634:6:0"
									},
									"id": 957,
									"nodeType": "InheritanceSpecifier",
									"src": "22634:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 951,
								"nodeType": "StructuredDocumentation",
								"src": "21039:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 1264,
							"linearizedBaseContracts": [
								1264,
								631,
								609,
								949,
								877
							],
							"name": "AccessControl",
							"nameLocation": "22592:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 964,
									"members": [
										{
											"constant": false,
											"id": 961,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "22698:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "22673:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 960,
												"keyType": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "22673:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22692:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "22723:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 964,
											"src": "22715:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 962,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "22715:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "22654:8:0",
									"nodeType": "StructDefinition",
									"scope": 1264,
									"src": "22647:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 969,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "22782:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "22745:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 968,
										"keyType": {
											"id": 965,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "22753:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "22745:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 967,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 966,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 964,
												"src": "22764:8:0"
											},
											"referencedDeclaration": 964,
											"src": "22764:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$964_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 972,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "22819:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1264,
									"src": "22795:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 970,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "22795:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 971,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "22840:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "23263:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "23284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 977,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1037,
															1080
														],
														"referencedDeclaration": 1037,
														"src": "23273:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23273:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "23273:16:0"
											},
											{
												"id": 981,
												"nodeType": "PlaceholderStatement",
												"src": "23299:1:0"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "22851:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 983,
									"name": "onlyRole",
									"nameLocation": "23240:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "23257:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "23249:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23248:14:0"
									},
									"src": "23231:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "23465:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 992,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "23482:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 994,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "23502:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$949_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$949_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 993,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "23497:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23497:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$949",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "23497:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "23482:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1000,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "23557:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 998,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "23533:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$1264_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 630,
															"src": "23533:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23533:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23482:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 991,
												"id": 1003,
												"nodeType": "Return",
												"src": "23475:94:0"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "23313:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "23383:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 988,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23441:8:0"
									},
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "23408:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "23401:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 985,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "23401:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23400:20:0"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "23459:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23458:6:0"
									},
									"scope": 1264,
									"src": "23374:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "23755:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 1016,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "23772:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 1018,
															"indexExpression": {
																"id": 1017,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "23779:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23772:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$964_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 961,
														"src": "23772:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1021,
													"indexExpression": {
														"id": 1020,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "23793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23772:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1022,
												"nodeType": "Return",
												"src": "23765:36:0"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "23582:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "23672:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1012,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23731:8:0"
									},
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "23688:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "23680:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1007,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "23702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "23694:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23679:31:0"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "23749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:6:0"
									},
									"scope": 1264,
									"src": "23663:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "24158:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "24179:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1032,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "24185:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24185:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1030,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1037,
															1080
														],
														"referencedDeclaration": 1080,
														"src": "24168:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24168:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "24168:30:0"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "23814:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "24111:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "24130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "24122:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24121:14:0"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24158:0:0"
									},
									"scope": 1264,
									"src": "24102:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "24559:419:0",
										"statements": [
											{
												"condition": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "24573:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1046,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "24582:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1047,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "24588:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1045,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "24574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24574:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "24569:403:0",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "24598:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 1055,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24706:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1060,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1042,
																										"src": "24785:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1059,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "24777:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 1058,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "24777:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1061,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "24777:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 1062,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24795:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 1056,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 856,
																								"src": "24757:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$856_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1057,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 835,
																							"src": "24757:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1063,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "24757:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 1064,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24824:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1069,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1040,
																										"src": "24897:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 1068,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "24889:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 1067,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "24889:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1070,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "24889:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 1071,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24904:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 1065,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 856,
																								"src": "24869:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$856_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1066,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 835,
																							"src": "24869:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1072,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "24869:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 1053,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "24664:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "24664:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24664:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24636:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1051,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "24636:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24636:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1050,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "24612:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24612:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1076,
															"nodeType": "ExpressionStatement",
															"src": "24612:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "24211:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "24495:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "24514:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "24506:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1039,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24528:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "24520:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24505:31:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24559:0:0"
									},
									"scope": 1264,
									"src": "24486:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "25242:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1089,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "25259:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 1091,
														"indexExpression": {
															"id": 1090,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "25266:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25259:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$964_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 963,
													"src": "25259:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1093,
												"nodeType": "Return",
												"src": "25252:29:0"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "24984:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "25168:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1085,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25215:8:0"
									},
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "25189:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "25181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25180:14:0"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "25233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25232:9:0"
									},
									"scope": 1264,
									"src": "25159:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										932
									],
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "25687:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1110,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "25708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1111,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "25714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1109,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "25697:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25697:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "25697:25:0"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "25294:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1105,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "25680:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1104,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "25667:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25667:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1103,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 983,
												"src": "25658:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25658:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "25593:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1102,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25649:8:0"
									},
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "25611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "25603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "25617:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25602:31:0"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25687:0:0"
									},
									"scope": 1264,
									"src": "25584:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										940
									],
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "26113:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "26135:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "26141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1129,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "26123:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26123:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "26123:26:0"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "25735:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1125,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "26106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1124,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "26093:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26093:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1127,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1123,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 983,
												"src": "26084:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26084:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "26018:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26075:8:0"
									},
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "26037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "26029:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "26029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "26043:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26028:31:0"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26113:0:0"
									},
									"scope": 1264,
									"src": "26009:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "26770:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "26788:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1146,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "26799:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26799:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26788:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26813:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26780:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "26780:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1153,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "26886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1154,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "26892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1152,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "26874:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26874:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "26874:26:0"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "26162:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "26702:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26761:8:0"
									},
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "26723:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "26715:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "26715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "26729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26714:31:0"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26770:0:0"
									},
									"scope": 1264,
									"src": "26693:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "27660:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "27681:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1168,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "27687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1166,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "27670:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27670:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "27670:25:0"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "26913:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "27601:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "27620:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "27612:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27634:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "27626:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27611:31:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27660:0:0"
									},
									"scope": 1264,
									"src": "27592:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "27900:174:0",
										"statements": [
											{
												"assignments": [
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "27918:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "27910:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1180,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "27910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"arguments": [
														{
															"id": 1183,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "27951:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1182,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "27938:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27938:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27910:46:0"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1186,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 969,
																"src": "27966:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 1188,
															"indexExpression": {
																"id": 1187,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "27973:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27966:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$964_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 963,
														"src": "27966:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "27991:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "27966:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "27966:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1194,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "28032:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1195,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "28038:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1196,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "28057:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1193,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "28015:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28015:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "EmitStatement",
												"src": "28010:57:0"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "27708:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "27836:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "27858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "27850:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "27872:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "27864:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "27864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27849:33:0"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27900:0:0"
									},
									"scope": 1264,
									"src": "27827:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "28310:165:0",
										"statements": [
											{
												"condition": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "28324:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1209,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "28333:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1210,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "28339:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1208,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "28325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28325:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "IfStatement",
												"src": "28320:149:0",
												"trueBody": {
													"id": 1229,
													"nodeType": "Block",
													"src": "28349:120:0",
													"statements": [
														{
															"expression": {
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1213,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "28363:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1215,
																			"indexExpression": {
																				"id": 1214,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1203,
																				"src": "28370:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28363:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$964_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 961,
																		"src": "28363:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1218,
																	"indexExpression": {
																		"id": 1217,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "28384:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28363:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28395:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "28363:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1221,
															"nodeType": "ExpressionStatement",
															"src": "28363:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1203,
																		"src": "28430:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1224,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "28436:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1225,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "28445:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28445:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1222,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "28418:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28418:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1228,
															"nodeType": "EmitStatement",
															"src": "28413:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "28080:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "28251:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "28270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "28262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "28276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28261:31:0"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28310:0:0"
									},
									"scope": 1264,
									"src": "28242:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "28715:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1241,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "28737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1242,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "28743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1240,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "28729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28729:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "28725:149:0",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "28753:121:0",
													"statements": [
														{
															"expression": {
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1244,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "28767:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$964_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1246,
																			"indexExpression": {
																				"id": 1245,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "28774:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28767:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$964_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 961,
																		"src": "28767:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1249,
																	"indexExpression": {
																		"id": 1248,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "28788:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28767:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28799:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "28767:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1252,
															"nodeType": "ExpressionStatement",
															"src": "28767:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "28835:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "28841:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1256,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "28850:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28850:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1253,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "28823:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28823:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1259,
															"nodeType": "EmitStatement",
															"src": "28818:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "28481:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "28655:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "28675:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "28667:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28689:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "28681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:31:0"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28715:0:0"
									},
									"scope": 1264,
									"src": "28646:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "22574:6308:0",
							"usedErrors": []
						},
						{
							"id": 1265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29027:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1267,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "29191:14:0"
									},
									"id": 1268,
									"nodeType": "InheritanceSpecifier",
									"src": "29191:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1266,
								"nodeType": "StructuredDocumentation",
								"src": "29053:99:0",
								"text": " @dev External interface of AccessControlEnumerable declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1287,
							"linearizedBaseContracts": [
								1287,
								949
							],
							"name": "IAccessControlEnumerable",
							"nameLocation": "29163:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "29212:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "29800:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "29822:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "29814:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "29836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "29828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29813:29:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "29866:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29865:9:0"
									},
									"scope": 1287,
									"src": "29791:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "29881:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "30052:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "30079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "30071:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30070:14:0"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "30108:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30107:9:0"
									},
									"scope": 1287,
									"src": "30043:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "29153:966:0",
							"usedErrors": []
						},
						{
							"id": 1288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30277:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1290,
										"name": "IAccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1287,
										"src": "30445:24:0"
									},
									"id": 1291,
									"nodeType": "InheritanceSpecifier",
									"src": "30445:24:0"
								},
								{
									"baseName": {
										"id": 1292,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1264,
										"src": "30471:13:0"
									},
									"id": 1293,
									"nodeType": "InheritanceSpecifier",
									"src": "30471:13:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1289,
								"nodeType": "StructuredDocumentation",
								"src": "30305:94:0",
								"text": " @dev Extension of {AccessControl} that allows enumerating the members of each role."
							},
							"fullyImplemented": true,
							"id": 1408,
							"linearizedBaseContracts": [
								1408,
								1264,
								631,
								609,
								1287,
								949,
								877
							],
							"name": "AccessControlEnumerable",
							"nameLocation": "30418:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1297,
									"libraryName": {
										"id": 1294,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 598,
										"src": "30497:13:0"
									},
									"nodeType": "UsingForDirective",
									"src": "30491:49:0",
									"typeName": {
										"id": 1296,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1295,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 311,
											"src": "30515:24:0"
										},
										"referencedDeclaration": 311,
										"src": "30515:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 1302,
									"mutability": "mutable",
									"name": "_roleMembers",
									"nameLocation": "30599:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1408,
									"src": "30546:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$311_storage_$",
										"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
									},
									"typeName": {
										"id": 1301,
										"keyType": {
											"id": 1298,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "30554:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "30546:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$311_storage_$",
											"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
										},
										"valueType": {
											"id": 1300,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1299,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 311,
												"src": "30565:24:0"
											},
											"referencedDeclaration": 311,
											"src": "30565:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$311_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1005
									],
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "30770:121:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1311,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "30787:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1313,
																		"name": "IAccessControlEnumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "30807:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$1287_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$1287_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	],
																	"id": 1312,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "30802:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30802:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlEnumerable_$1287",
																	"typeString": "type(contract IAccessControlEnumerable)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "30802:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "30787:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1319,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "30872:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1317,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "30848:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1408_$",
																	"typeString": "type(contract super AccessControlEnumerable)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1005,
															"src": "30848:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30848:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30787:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1310,
												"id": 1322,
												"nodeType": "Return",
												"src": "30780:104:0"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "30618:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "30688:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30746:8:0"
									},
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "30713:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "30706:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30706:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30705:20:0"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "30764:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30764:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30763:6:0"
									},
									"scope": 1408,
									"src": "30679:212:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1278
									],
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "31575:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1339,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "31614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1335,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "31592:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$311_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1337,
															"indexExpression": {
																"id": 1336,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "31605:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31592:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$311_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 434,
														"src": "31592:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$311_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$311_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31592:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1341,
												"nodeType": "Return",
												"src": "31585:35:0"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "30897:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "31485:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31548:8:0"
									},
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "31507:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "31499:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "31521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "31513:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31498:29:0"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "31566:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31565:9:0"
									},
									"scope": 1408,
									"src": "31476:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1286
									],
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "31884:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1352,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "31901:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$311_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1354,
															"indexExpression": {
																"id": 1353,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "31914:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31901:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$311_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "31901:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$311_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$311_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31901:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1357,
												"nodeType": "Return",
												"src": "31894:34:0"
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "31633:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "31804:18:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1348,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "31857:8:0"
									},
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "31831:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "31823:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31822:14:0"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "31875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31874:9:0"
									},
									"scope": 1408,
									"src": "31795:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1232
									],
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "32100:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "32127:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1372,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "32133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1368,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "32110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1408_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_grantRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1232,
														"src": "32110:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32110:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "32110:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "32174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1375,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "32151:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$311_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1377,
															"indexExpression": {
																"id": 1376,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "32164:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32151:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$311_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "32151:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$311_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32151:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "32151:31:0"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "31941:77:0",
										"text": " @dev Overload {_grantRole} to track enumerable memberships"
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "32032:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32091:8:0"
									},
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "32051:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "32043:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "32057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32042:31:0"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32100:0:0"
									},
									"scope": 1408,
									"src": "32023:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1263
									],
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "32356:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "32384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "32390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1392,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "32366:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$1408_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_revokeRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1263,
														"src": "32366:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32366:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "32366:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1403,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "32434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1399,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "32408:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$311_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 1401,
															"indexExpression": {
																"id": 1400,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "32421:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32408:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$311_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "32408:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$311_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$311_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32408:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "32408:34:0"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "32195:78:0",
										"text": " @dev Overload {_revokeRole} to track enumerable memberships"
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "32287:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1390,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32347:8:0"
									},
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "32307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "32299:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "32313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32298:31:0"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32356:0:0"
									},
									"scope": 1408,
									"src": "32278:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "30400:2051:0",
							"usedErrors": []
						},
						{
							"id": 1409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32575:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1410,
								"nodeType": "StructuredDocumentation",
								"src": "32600:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1702,
							"linearizedBaseContracts": [
								1702
							],
							"name": "Address",
							"nameLocation": "32676:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "33715:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1418,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "33939:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "33939:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "33939:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33961:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33939:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1417,
												"id": 1423,
												"nodeType": "Return",
												"src": "33932:30:0"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "32690:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "33658:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "33677:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "33669:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33668:17:0"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "33709:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33708:6:0"
									},
									"scope": 1702,
									"src": "33649:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "34957:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1436,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "34983:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1702",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1702",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34975:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1434,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34975:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34975:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "34975:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1439,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "35000:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34975:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35008:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34967:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "34967:73:0"
											},
											{
												"assignments": [
													1445,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1445,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "35057:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1458,
														"src": "35052:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1444,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "35052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1452,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35100:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1446,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "35070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "35070:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1448,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "35092:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "35070:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35070:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35051:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1454,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "35121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35130:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35113:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35113:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "35113:78:0"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "33975:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "34895:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "34921:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "34905:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34905:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34940:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "34932:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34904:43:0"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34957:0:0"
									},
									"scope": 1702,
									"src": "34886:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "36029:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1470,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "36059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "36067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36073:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1469,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1476,
															1496
														],
														"referencedDeclaration": 1496,
														"src": "36046:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36046:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1474,
												"nodeType": "Return",
												"src": "36039:67:0"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "35204:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "35949:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "35970:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "35962:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "35991:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "35978:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35961:35:0"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "36015:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36015:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36014:14:0"
									},
									"scope": 1702,
									"src": "35940:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "36482:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "36521:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "36529:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36535:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1492,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "36538:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1488,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1516,
															1566
														],
														"referencedDeclaration": 1566,
														"src": "36499:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36499:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1494,
												"nodeType": "Return",
												"src": "36492:59:0"
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "36119:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "36344:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "36374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36403:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36390:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36390:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "36431:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36417:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36417:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36356:93:0"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "36468:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36467:14:0"
									},
									"scope": 1702,
									"src": "36335:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "37063:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1509,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "37102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1510,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "37110:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "37116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37123:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1508,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1516,
															1566
														],
														"referencedDeclaration": 1566,
														"src": "37080:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37080:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1514,
												"nodeType": "Return",
												"src": "37073:94:0"
											}
										]
									},
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "36564:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "36929:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "36968:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "36960:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36997:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "36984:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36984:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37019:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "37011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36950:80:0"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "37049:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37049:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37048:14:0"
									},
									"scope": 1702,
									"src": "36920:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "37601:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1533,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37627:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1702",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1702",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37619:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37619:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37619:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "37619:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1536,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "37644:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37619:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37651:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37611:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "37611:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1543,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "37721:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1542,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "37710:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37710:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37730:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37702:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "37702:60:0"
											},
											{
												"assignments": [
													1549,
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1549,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "37779:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "37774:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1548,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "37774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "37801:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "37788:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1550,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "37788:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1558,
												"initialValue": {
													"arguments": [
														{
															"id": 1556,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "37841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1552,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "37815:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "37815:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1554,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "37834:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "37815:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37815:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37773:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1560,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "37880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1561,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "37889:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1562,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "37901:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1559,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "37863:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37863:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1564,
												"nodeType": "Return",
												"src": "37856:58:0"
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "37180:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "37431:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "37470:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "37462:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "37499:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "37486:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37521:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "37513:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "37550:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "37536:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37452:116:0"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "37587:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37587:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37586:14:0"
									},
									"scope": 1702,
									"src": "37422:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "38198:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "38234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "38242:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38248:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1576,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1583,
															1618
														],
														"referencedDeclaration": 1618,
														"src": "38215:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38215:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1575,
												"id": 1581,
												"nodeType": "Return",
												"src": "38208:80:0"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "37927:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "38107:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "38134:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "38126:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38155:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "38142:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1570,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38142:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38125:35:0"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "38184:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38183:14:0"
									},
									"scope": 1702,
									"src": "38098:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "38637:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1597,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "38666:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1596,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "38655:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38655:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38675:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38647:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "38647:67:0"
											},
											{
												"assignments": [
													1603,
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "38731:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "38726:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1602,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "38726:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "38753:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1617,
														"src": "38740:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1604,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "38740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"arguments": [
														{
															"id": 1608,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "38785:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "38767:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "38767:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38767:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38725:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1612,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "38824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1613,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "38833:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1614,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "38845:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1611,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "38807:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38807:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1616,
												"nodeType": "Return",
												"src": "38800:58:0"
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "38301:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "38488:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "38524:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "38516:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38553:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "38540:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "38581:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "38567:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38506:93:0"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "38623:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38622:14:0"
									},
									"scope": 1702,
									"src": "38479:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "39141:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1629,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "39179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "39187:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39193:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1628,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1635,
															1670
														],
														"referencedDeclaration": 1670,
														"src": "39158:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39158:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1633,
												"nodeType": "Return",
												"src": "39151:84:0"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "38871:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "39053:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39082:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "39074:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39103:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "39090:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39090:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39073:35:0"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "39127:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39126:14:0"
									},
									"scope": 1702,
									"src": "39044:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "39583:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1649,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "39612:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1648,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "39601:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39601:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39621:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39593:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "39593:69:0"
											},
											{
												"assignments": [
													1655,
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "39679:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "39674:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1654,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "39674:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "39701:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "39688:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1656,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "39688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1662,
												"initialValue": {
													"arguments": [
														{
															"id": 1660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "39735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1658,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "39715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "39715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39715:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39673:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1664,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "39774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1665,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "39783:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1666,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "39795:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1663,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "39757:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39757:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1668,
												"nodeType": "Return",
												"src": "39750:58:0"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "39248:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "39437:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "39475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "39467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39504:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "39491:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "39532:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "39518:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39457:93:0"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "39569:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39568:14:0"
									},
									"scope": 1702,
									"src": "39428:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "40195:582:0",
										"statements": [
											{
												"condition": {
													"id": 1682,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1673,
													"src": "40209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1698,
													"nodeType": "Block",
													"src": "40266:505:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1686,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "40350:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "40350:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40370:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "40350:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1696,
																"nodeType": "Block",
																"src": "40708:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1693,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1677,
																					"src": "40733:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1692,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "40726:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40726:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1695,
																		"nodeType": "ExpressionStatement",
																		"src": "40726:20:0"
																	}
																]
															},
															"id": 1697,
															"nodeType": "IfStatement",
															"src": "40346:415:0",
															"trueBody": {
																"id": 1691,
																"nodeType": "Block",
																"src": "40373:329:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "40543:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "40565:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "40594:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "40588:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "40588:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "40569:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "40637:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "40641:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "40633:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "40633:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "40654:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "40626:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "40626:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "40626:44:0"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1675,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "40594:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1675,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "40641:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 1690,
																		"nodeType": "InlineAssembly",
																		"src": "40534:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 1699,
												"nodeType": "IfStatement",
												"src": "40205:566:0",
												"trueBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "40218:42:0",
													"statements": [
														{
															"expression": {
																"id": 1683,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "40239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1681,
															"id": 1684,
															"nodeType": "Return",
															"src": "40232:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "39821:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "40044:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "40075:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "40070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "40105:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "40092:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "40139:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "40125:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40125:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40060:97:0"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "40181:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40181:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40180:14:0"
									},
									"scope": 1702,
									"src": "40035:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2511,
							"src": "32668:8111:0",
							"usedErrors": []
						},
						{
							"id": 1703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40944:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1704,
								"nodeType": "StructuredDocumentation",
								"src": "40969:480:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1737,
							"linearizedBaseContracts": [
								1737
							],
							"name": "IERC20Permit",
							"nameLocation": "41460:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "41479:792:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "42285:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42309:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42301:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "42332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42357:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42349:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "42380:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "42404:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1714,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "42398:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "42423:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42415:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "42442:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "42434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42291:158:0"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42458:0:0"
									},
									"scope": 1737,
									"src": "42276:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "42465:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "42773:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42788:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "42780:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42779:15:0"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "42818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42817:9:0"
									},
									"scope": 1737,
									"src": "42764:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "42833:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "43028:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43044:2:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "43070:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "43070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43069:9:0"
									},
									"scope": 1737,
									"src": "43019:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "41450:1631:0",
							"usedErrors": []
						},
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "43215:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1739,
								"nodeType": "StructuredDocumentation",
								"src": "43240:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1814,
							"linearizedBaseContracts": [
								1814
							],
							"name": "IERC20",
							"nameLocation": "43321:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "43334:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1748,
									"name": "Transfer",
									"nameLocation": "43503:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43528:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "43512:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43550:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "43534:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43562:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "43554:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43511:57:0"
									},
									"src": "43497:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "43575:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1757,
									"name": "Approval",
									"nameLocation": "43734:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "43743:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "43782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "43766:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1755,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "43791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43742:63:0"
									},
									"src": "43728:78:0"
								},
								{
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "43812:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "43892:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43903:2:0"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "43929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43928:9:0"
									},
									"scope": 1814,
									"src": "43883:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "43944:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "44030:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "44048:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "44040:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44039:17:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "44080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44079:9:0"
									},
									"scope": 1814,
									"src": "44021:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "44095:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "44311:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "44320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "44340:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "44332:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44319:28:0"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "44366:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44365:6:0"
									},
									"scope": 1814,
									"src": "44302:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "44378:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "44656:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "44666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44689:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "44681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44665:32:0"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "44721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44720:9:0"
									},
									"scope": 1814,
									"src": "44647:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "44736:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "45392:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "45400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "45425:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "45417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45399:33:0"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "45451:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45451:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45450:6:0"
									},
									"scope": 1814,
									"src": "45383:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "45463:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "45764:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "45794:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "45786:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45816:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "45808:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "45836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "45828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45776:72:0"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "45867:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45867:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45866:6:0"
									},
									"scope": 1814,
									"src": "45755:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "43311:2564:0",
							"usedErrors": []
						},
						{
							"id": 1815,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46027:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1816,
								"nodeType": "StructuredDocumentation",
								"src": "46055:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2091,
							"linearizedBaseContracts": [
								2091
							],
							"name": "SafeERC20",
							"nameLocation": "46521:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1819,
									"libraryName": {
										"id": 1817,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1702,
										"src": "46543:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "46537:26:0",
									"typeName": {
										"id": 1818,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "46555:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1841,
										"nodeType": "Block",
										"src": "46671:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1830,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "46701:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1833,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "46731:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1814",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1781,
																		"src": "46731:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "46731:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1836,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1824,
																	"src": "46756:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1837,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "46760:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1831,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "46708:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "46708:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46708:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1829,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "46681:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46681:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "46681:86:0"
											}
										]
									},
									"id": 1842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "46578:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "46607:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "46600:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1814",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1820,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1814,
														"src": "46600:6:0"
													},
													"referencedDeclaration": 1814,
													"src": "46600:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1814",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46630:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "46622:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "46650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "46642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46590:71:0"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46671:0:0"
									},
									"scope": 2091,
									"src": "46569:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "46908:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1855,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "46938:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1858,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "46968:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1814",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1813,
																		"src": "46968:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "46968:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1861,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "46997:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1862,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "47003:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1863,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "47007:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1856,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "46945:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "46945:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46945:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1854,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "46918:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46918:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "46918:96:0"
											}
										]
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "46789:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "46822:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "46815:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1814",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1843,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1814,
														"src": "46815:6:0"
													},
													"referencedDeclaration": 1814,
													"src": "46815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1814",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46845:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "46837:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46867:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "46859:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "46887:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "46879:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46805:93:0"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46908:0:0"
									},
									"scope": 2091,
									"src": "46780:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "47387:497:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1880,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "47636:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47645:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "47636:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "47635:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1888,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "47676:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2091",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2091",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1887,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "47668:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1886,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "47668:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "47668:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1890,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1874,
																					"src": "47683:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1884,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1872,
																					"src": "47652:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1814",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1791,
																				"src": "47652:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "47652:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47695:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "47652:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1894,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "47651:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "47635:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47711:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47614:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "47614:163:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1900,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "47807:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1903,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "47837:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1814",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1801,
																		"src": "47837:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "47837:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1906,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "47861:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "47870:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1901,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "47814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "47814:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47814:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1899,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "47787:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47787:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "47787:90:0"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "47027:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "47290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "47318:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "47311:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1814",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1870,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1814,
														"src": "47311:6:0"
													},
													"referencedDeclaration": 1814,
													"src": "47311:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1814",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "47341:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "47333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47366:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "47358:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47301:76:0"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47387:0:0"
									},
									"scope": 2091,
									"src": "47281:603:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "48006:194:0",
										"statements": [
											{
												"assignments": [
													1923
												],
												"declarations": [
													{
														"constant": false,
														"id": 1923,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "48024:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "48016:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "48016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1928,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "48063:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2091",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2091",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "48055:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1926,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "48055:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48055:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1930,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "48070:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1924,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "48039:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1814",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1791,
															"src": "48039:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48039:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1932,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "48081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48039:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48016:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1936,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "48116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1939,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "48146:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1814",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1801,
																		"src": "48146:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "48146:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1942,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1917,
																	"src": "48170:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1943,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "48179:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1937,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "48123:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "48123:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48123:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1935,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "48096:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48096:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "48096:97:0"
											}
										]
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "47899:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "47937:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "47930:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1814",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1913,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1814,
														"src": "47930:6:0"
													},
													"referencedDeclaration": 1814,
													"src": "47930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1814",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "47960:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "47952:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "47977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47920:76:0"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48006:0:0"
									},
									"scope": 2091,
									"src": "47890:310:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "48322:370:0",
										"statements": [
											{
												"id": 1994,
												"nodeType": "UncheckedBlock",
												"src": "48332:354:0",
												"statements": [
													{
														"assignments": [
															1959
														],
														"declarations": [
															{
																"constant": false,
																"id": 1959,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "48364:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1994,
																"src": "48356:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1958,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "48356:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1968,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1964,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "48403:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2091",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2091",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "48395:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1962,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "48395:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48395:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1966,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "48410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1960,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "48379:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1814",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1791,
																"src": "48379:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48379:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "48356:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1970,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "48440:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "48456:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "48440:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48463:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1969,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "48432:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48432:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1975,
														"nodeType": "ExpressionStatement",
														"src": "48432:75:0"
													},
													{
														"assignments": [
															1977
														],
														"declarations": [
															{
																"constant": false,
																"id": 1977,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "48529:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1994,
																"src": "48521:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1976,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "48521:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1981,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1978,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "48544:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1979,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "48559:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "48544:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "48521:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1983,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "48598:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1814",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1986,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "48628:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1814",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1801,
																				"src": "48628:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "48628:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1989,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "48652:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1990,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1977,
																			"src": "48661:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1984,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "48605:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "48605:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48605:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1814",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1982,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "48578:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48578:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1993,
														"nodeType": "ExpressionStatement",
														"src": "48578:97:0"
													}
												]
											}
										]
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "48215:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "48253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "48246:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1814",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1949,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1814,
														"src": "48246:6:0"
													},
													"referencedDeclaration": 1814,
													"src": "48246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1814",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "48276:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "48268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "48293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48236:76:0"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48322:0:0"
									},
									"scope": 2091,
									"src": "48206:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "48913:257:0",
										"statements": [
											{
												"assignments": [
													2017
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "48931:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "48923:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "48923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"arguments": [
														{
															"id": 2020,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "48958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2018,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "48945:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1737",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1730,
														"src": "48945:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48945:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48923:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "48987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2027,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "48994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2028,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "49003:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2029,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "49010:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2030,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2009,
															"src": "49020:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2031,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "49023:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2032,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "49026:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2023,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "48974:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1737",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1722,
														"src": "48974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48974:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "48974:54:0"
											},
											{
												"assignments": [
													2036
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "49046:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "49038:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2041,
												"initialValue": {
													"arguments": [
														{
															"id": 2039,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "49072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2037,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "49059:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1737",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1730,
														"src": "49059:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49059:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49038:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2043,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "49096:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2044,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "49110:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49110:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49096:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49127:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 2042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49088:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49088:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "49088:75:0"
											}
										]
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "48707:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "48740:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48727:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$1737",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 1998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1997,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1737,
														"src": "48727:12:0"
													},
													"referencedDeclaration": 1737,
													"src": "48727:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$1737",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "48763:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48755:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "48786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "48834:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48826:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "48858:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48852:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2008,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "48852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "48877:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48869:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2010,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "48896:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "48888:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "48888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48717:186:0"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48913:0:0"
									},
									"scope": 2091,
									"src": "48698:472:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "49623:636:0",
										"statements": [
											{
												"assignments": [
													2062
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "49985:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "49972:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2061,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "49972:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"arguments": [
														{
															"id": 2068,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "50026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50032:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "50006:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1814",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1814",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49998:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49998:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49998:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1496,
														"src": "49998:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49998:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49972:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2072,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "50081:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "50081:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "50081:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2088,
												"nodeType": "IfStatement",
												"src": "50077:176:0",
												"trueBody": {
													"id": 2087,
													"nodeType": "Block",
													"src": "50104:149:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2079,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2062,
																				"src": "50176:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2081,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "50189:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2080,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "50189:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2082,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "50188:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2077,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "50165:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "50165:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50165:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "50197:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2076,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "50157:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50157:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2086,
															"nodeType": "ExpressionStatement",
															"src": "50157:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "49176:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "49562:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "49589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "49582:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1814",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2054,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1814,
														"src": "49582:6:0"
													},
													"referencedDeclaration": 1814,
													"src": "49582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1814",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49609:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "49596:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49596:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49581:33:0"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49623:0:0"
									},
									"scope": 2091,
									"src": "49553:706:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2511,
							"src": "46513:3748:0",
							"usedErrors": []
						},
						{
							"id": 2092,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "50311:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2164,
							"linearizedBaseContracts": [
								2164
							],
							"name": "IWeb3BetsFO",
							"nameLocation": "50346:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06a5cb3a",
									"id": 2097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemAddress",
									"nameLocation": "50373:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50389:2:0"
									},
									"returnParameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "50414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50413:9:0"
									},
									"scope": 2164,
									"src": "50364:59:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0da4ee50",
									"id": 2102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersAddress",
									"nameLocation": "50438:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50452:2:0"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "50477:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50476:9:0"
									},
									"scope": 2164,
									"src": "50429:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992642e5",
									"id": 2107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableCoin",
									"nameLocation": "50501:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50511:2:0"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "50536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50535:9:0"
									},
									"scope": 2164,
									"src": "50492:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6fdbd3f6",
									"id": 2112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eventFactory",
									"nameLocation": "50560:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50572:2:0"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "50597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50596:9:0"
									},
									"scope": 2164,
									"src": "50551:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06ae7095",
									"id": 2117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketFactory",
									"nameLocation": "50621:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50634:2:0"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "50659:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50658:9:0"
									},
									"scope": 2164,
									"src": "50612:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a9618",
									"id": 2122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "betFactory",
									"nameLocation": "50683:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50693:2:0"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "50718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50717:9:0"
									},
									"scope": 2164,
									"src": "50674:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "486d1e50",
									"id": 2127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersVig",
									"nameLocation": "50742:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50752:2:0"
									},
									"returnParameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "50777:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "50777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50776:6:0"
									},
									"scope": 2164,
									"src": "50733:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9376b94c",
									"id": 2132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemVig",
									"nameLocation": "50798:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50810:2:0"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "50835:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "50835:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50834:6:0"
									},
									"scope": 2164,
									"src": "50789:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "387440e6",
									"id": 2137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vigPercentage",
									"nameLocation": "50856:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50869:2:0"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "50889:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "50889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50888:6:0"
									},
									"scope": 2164,
									"src": "50847:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cbf89c63",
									"id": 2142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "50910:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "50935:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "50927:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50926:20:0"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50955:0:0"
									},
									"scope": 2164,
									"src": "50901:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fb43199",
									"id": 2149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "50971:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "50993:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "50985:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50984:18:0"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "51021:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51021:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51020:6:0"
									},
									"scope": 2164,
									"src": "50962:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb146622",
									"id": 2156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "51042:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "51063:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "51055:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51054:18:0"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "51091:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51090:6:0"
									},
									"scope": 2164,
									"src": "51033:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "332daccf",
									"id": 2163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "51112:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "51128:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "51120:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51119:18:0"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "51156:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51156:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51155:6:0"
									},
									"scope": 2164,
									"src": "51103:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "50336:828:0",
							"usedErrors": []
						},
						{
							"id": 2165,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "51202:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2167,
										"name": "IWeb3BetsFO",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2164,
										"src": "51582:11:0"
									},
									"id": 2168,
									"nodeType": "InheritanceSpecifier",
									"src": "51582:11:0"
								},
								{
									"baseName": {
										"id": 2169,
										"name": "AccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "51595:23:0"
									},
									"id": 2170,
									"nodeType": "InheritanceSpecifier",
									"src": "51595:23:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2166,
								"nodeType": "StructuredDocumentation",
								"src": "51231:219:0",
								"text": "@author Victor Okoro\n @title Web3Bets Contract for FixedOdds decentralized betting exchange\n @notice Contains Web3Bets ecosystem's variables and functions\n @custom:security contact okoro.victor@web3bets.io"
							},
							"fullyImplemented": true,
							"id": 2510,
							"linearizedBaseContracts": [
								2510,
								1408,
								1264,
								631,
								609,
								1287,
								949,
								877,
								2164
							],
							"name": "Web3BetsFO",
							"nameLocation": "51568:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2174,
									"libraryName": {
										"id": 2171,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2091,
										"src": "51631:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "51625:27:0",
									"typeName": {
										"id": 2173,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2172,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1814,
											"src": "51645:6:0"
										},
										"referencedDeclaration": 1814,
										"src": "51645:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1814",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"baseFunctions": [
										2097
									],
									"constant": false,
									"functionSelector": "06a5cb3a",
									"id": 2177,
									"mutability": "mutable",
									"name": "ecosystemAddress",
									"nameLocation": "51686:16:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51677:8:0"
									},
									"scope": 2510,
									"src": "51662:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2175,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51662:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2102
									],
									"constant": false,
									"functionSelector": "0da4ee50",
									"id": 2180,
									"mutability": "mutable",
									"name": "holdersAddress",
									"nameLocation": "51732:14:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2179,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51723:8:0"
									},
									"scope": 2510,
									"src": "51708:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2178,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51708:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2107
									],
									"constant": false,
									"functionSelector": "992642e5",
									"id": 2183,
									"mutability": "mutable",
									"name": "stableCoin",
									"nameLocation": "51776:10:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51767:8:0"
									},
									"scope": 2510,
									"src": "51752:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2181,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51752:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2112
									],
									"constant": false,
									"functionSelector": "6fdbd3f6",
									"id": 2186,
									"mutability": "mutable",
									"name": "eventFactory",
									"nameLocation": "51817:12:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51808:8:0"
									},
									"scope": 2510,
									"src": "51793:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2184,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51793:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2117
									],
									"constant": false,
									"functionSelector": "06ae7095",
									"id": 2189,
									"mutability": "mutable",
									"name": "marketFactory",
									"nameLocation": "51859:13:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2188,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51850:8:0"
									},
									"scope": 2510,
									"src": "51835:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51835:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2122
									],
									"constant": false,
									"functionSelector": "2e1a9618",
									"id": 2192,
									"mutability": "mutable",
									"name": "betFactory",
									"nameLocation": "51902:10:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51893:8:0"
									},
									"scope": 2510,
									"src": "51878:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2190,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51878:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "852757ad",
									"id": 2197,
									"mutability": "constant",
									"name": "SYSTEM_ADMIN",
									"nameLocation": "51943:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2510,
									"src": "51919:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2193,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "51919:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "53595354454d5f41444d494e",
												"id": 2195,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "51968:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639",
													"typeString": "literal_string \"SYSTEM_ADMIN\""
												},
												"value": "SYSTEM_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639",
													"typeString": "literal_string \"SYSTEM_ADMIN\""
												}
											],
											"id": 2194,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "51958:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "51958:25:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b501ec97",
									"id": 2202,
									"mutability": "constant",
									"name": "EVENT_ADMIN",
									"nameLocation": "52013:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2510,
									"src": "51989:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2198,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "51989:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4556454e545f41444d494e",
												"id": 2200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "52037:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0",
													"typeString": "literal_string \"EVENT_ADMIN\""
												},
												"value": "EVENT_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0",
													"typeString": "literal_string \"EVENT_ADMIN\""
												}
											],
											"id": 2199,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "52027:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "52027:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8b0cf68",
									"id": 2207,
									"mutability": "constant",
									"name": "BLACKLIST",
									"nameLocation": "52081:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2510,
									"src": "52057:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2203,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "52057:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424c41434b4c495354",
												"id": 2205,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "52103:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c",
													"typeString": "literal_string \"BLACKLIST\""
												},
												"value": "BLACKLIST"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c",
													"typeString": "literal_string \"BLACKLIST\""
												}
											],
											"id": 2204,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "52093:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "52093:22:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2127
									],
									"constant": false,
									"functionSelector": "486d1e50",
									"id": 2211,
									"mutability": "mutable",
									"name": "holdersVig",
									"nameLocation": "52146:10:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "52137:8:0"
									},
									"scope": 2510,
									"src": "52122:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "52122:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 2210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "52159:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2132
									],
									"constant": false,
									"functionSelector": "9376b94c",
									"id": 2215,
									"mutability": "mutable",
									"name": "ecosystemVig",
									"nameLocation": "52191:12:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2213,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "52182:8:0"
									},
									"scope": 2510,
									"src": "52167:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "52167:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 2214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "52206:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2137
									],
									"constant": false,
									"functionSelector": "387440e6",
									"id": 2219,
									"mutability": "mutable",
									"name": "vigPercentage",
									"nameLocation": "52238:13:0",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "52229:8:0"
									},
									"scope": 2510,
									"src": "52214:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "52214:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "52254:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2225,
									"mutability": "mutable",
									"name": "_stableCoinWrapper",
									"nameLocation": "52277:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2510,
									"src": "52262:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1814",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2221,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2220,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1814,
											"src": "52262:6:0"
										},
										"referencedDeclaration": 1814,
										"src": "52262:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1814",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 2223,
												"name": "stableCoin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2183,
												"src": "52305:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 2222,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1814,
											"src": "52298:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$1814_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 2224,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "52298:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1814",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "52350:150:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2229,
																	"name": "SYSTEM_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "52389:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2230,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "52403:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "52403:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2228,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "52381:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52381:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52428:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 2227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "52360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52360:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "52360:122:0"
											},
											{
												"id": 2236,
												"nodeType": "PlaceholderStatement",
												"src": "52492:1:0"
											}
										]
									},
									"id": 2238,
									"name": "onlySystemAdmin",
									"nameLocation": "52332:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52347:2:0"
									},
									"src": "52323:177:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "52520:411:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2242,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "52661:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2243,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52681:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52681:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2241,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "52650:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52650:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "52650:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2248,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "52713:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52727:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52727:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2247,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "52702:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52702:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "52702:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2254,
															"name": "EVENT_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "52759:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "52772:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "52772:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2253,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "52748:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52748:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2258,
												"nodeType": "ExpressionStatement",
												"src": "52748:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2260,
															"name": "EVENT_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "52807:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2261,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "52820:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2259,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "52793:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52793:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2263,
												"nodeType": "ExpressionStatement",
												"src": "52793:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2265,
															"name": "BLACKLIST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "52854:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52873:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "52865:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2266,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "52865:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52865:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2264,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "52843:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52843:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "52843:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2273,
															"name": "BLACKLIST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "52900:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2274,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "52911:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2272,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "52886:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52886:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "52886:38:0"
											}
										]
									},
									"id": 2278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52517:2:0"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52520:0:0"
									},
									"scope": 2510,
									"src": "52506:425:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2289,
										"nodeType": "Block",
										"src": "53009:40:0",
										"statements": [
											{
												"expression": {
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2285,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "53019:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2286,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "53036:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53019:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "53019:23:0"
											}
										]
									},
									"functionSelector": "327372e4",
									"id": 2290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2282,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "52993:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "52993:15:0"
										}
									],
									"name": "setHoldersAddress",
									"nameLocation": "52950:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "52976:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "52968:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52967:16:0"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53009:0:0"
									},
									"scope": 2510,
									"src": "52941:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "53125:42:0",
										"statements": [
											{
												"expression": {
													"id": 2299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2297,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "53135:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2298,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2292,
														"src": "53154:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53135:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2300,
												"nodeType": "ExpressionStatement",
												"src": "53135:25:0"
											}
										]
									},
									"functionSelector": "a8e01b28",
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2294,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53109:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53109:15:0"
										}
									],
									"name": "setEcosystemAddress",
									"nameLocation": "53064:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "53092:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "53084:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53083:16:0"
									},
									"returnParameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53125:0:0"
									},
									"scope": 2510,
									"src": "53055:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "53237:40:0",
										"statements": [
											{
												"expression": {
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2309,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "53247:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2310,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "53264:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53247:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "53247:23:0"
											}
										]
									},
									"functionSelector": "23af4e17",
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2306,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53221:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53221:15:0"
										}
									],
									"name": "setStableCoin",
									"nameLocation": "53182:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "53204:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "53196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53195:16:0"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53237:0:0"
									},
									"scope": 2510,
									"src": "53173:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "53351:40:0",
										"statements": [
											{
												"expression": {
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2321,
														"name": "eventFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "53361:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2322,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2316,
														"src": "53376:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53361:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2324,
												"nodeType": "ExpressionStatement",
												"src": "53361:23:0"
											}
										]
									},
									"functionSelector": "d43cbb15",
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2318,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53335:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53335:15:0"
										}
									],
									"name": "setEventFactory",
									"nameLocation": "53292:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "53316:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "53308:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53307:18:0"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53351:0:0"
									},
									"scope": 2510,
									"src": "53283:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "53466:41:0",
										"statements": [
											{
												"expression": {
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2333,
														"name": "marketFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "53476:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2334,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2328,
														"src": "53492:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53476:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "53476:24:0"
											}
										]
									},
									"functionSelector": "4dcc434a",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2331,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2330,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53450:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53450:15:0"
										}
									],
									"name": "setMarketFactory",
									"nameLocation": "53406:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "53431:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "53423:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53422:18:0"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53466:0:0"
									},
									"scope": 2510,
									"src": "53397:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "53579:38:0",
										"statements": [
											{
												"expression": {
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2345,
														"name": "betFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "53589:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2346,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2340,
														"src": "53602:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53589:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2348,
												"nodeType": "ExpressionStatement",
												"src": "53589:21:0"
											}
										]
									},
									"functionSelector": "89fefbe1",
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2342,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53563:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53563:15:0"
										}
									],
									"name": "setBetFactory",
									"nameLocation": "53522:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "53544:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "53536:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53535:18:0"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53579:0:0"
									},
									"scope": 2510,
									"src": "53513:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "53695:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2358,
																"name": "_percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "53726:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53740:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "53726:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e74616765206d7573742062652065787072657373656420696e203020746f2031302070657263656e746167652e204578616d706c653a2036",
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53756:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															},
															"value": "Vig percentage must be expressed in 0 to 10 percentage. Example: 6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															}
														],
														"id": 2357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53705:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "53705:129:0"
											},
											{
												"expression": {
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2364,
														"name": "vigPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "53844:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2365,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "53860:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53844:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "53844:27:0"
											}
										]
									},
									"functionSelector": "d6c1ca26",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2355,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2354,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53679:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53679:15:0"
										}
									],
									"name": "setVigPercentage",
									"nameLocation": "53632:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "53657:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "53649:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53648:21:0"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53695:0:0"
									},
									"scope": 2510,
									"src": "53623:255:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "53989:354:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2379,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "54020:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54028:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "54020:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2382,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "54035:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54043:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "54035:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "54020:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e746167657320736861726573206d7573742062652065787072657373656420696e206120203020746f2031303020726174696f2e204578616d706c653a203330",
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54060:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															},
															"value": "Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															}
														],
														"id": 2378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53999:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "53999:147:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2390,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "54177:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2391,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "54184:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54177:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54193:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "54177:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652073756d206f6620616c6c205669672070657263656e7461676520736861726573206d75737420626520657175616c20746f20313030",
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54210:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															},
															"value": "The sum of all Vig percentage shares must be equal to 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															}
														],
														"id": 2389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54156:123:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "54156:123:0"
											},
											{
												"expression": {
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2398,
														"name": "holdersVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "54290:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2399,
														"name": "hVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "54303:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54290:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "54290:17:0"
											},
											{
												"expression": {
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2402,
														"name": "ecosystemVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "54317:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2403,
														"name": "eVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "54332:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54317:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2405,
												"nodeType": "ExpressionStatement",
												"src": "54317:19:0"
											}
										]
									},
									"functionSelector": "64886880",
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2375,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2238,
												"src": "53973:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "53973:15:0"
										}
									],
									"name": "setVigPercentageShares",
									"nameLocation": "53893:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "hVig",
												"nameLocation": "53933:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "53925:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "eVig",
												"nameLocation": "53955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "53947:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53915:50:0"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53989:0:0"
									},
									"scope": 2510,
									"src": "53884:459:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2142
									],
									"body": {
										"id": 2466,
										"nodeType": "Block",
										"src": "54413:514:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2414,
																"name": "_vigAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "54431:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "54431:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626574206561726e696e6773206d7573742062652067726561746572207468616e2030",
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54447:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															},
															"value": "bet earnings must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															}
														],
														"id": 2413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54423:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2419,
												"nodeType": "ExpressionStatement",
												"src": "54423:62:0"
											},
											{
												"assignments": [
													2421
												],
												"declarations": [
													{
														"constant": false,
														"id": 2421,
														"mutability": "mutable",
														"name": "holdersShare",
														"nameLocation": "54503:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2466,
														"src": "54495:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "54495:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2428,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2422,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "54519:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2423,
																	"name": "holdersVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "54532:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54519:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2425,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "54518:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54546:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "54518:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54495:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2430,
																"name": "holdersShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2421,
																"src": "54567:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54582:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "54567:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686f6c6465727327207368617265206d7573742062652067726561746572207468616e2030",
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54585:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															},
															"value": "holders' share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															}
														],
														"id": 2429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54559:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2435,
												"nodeType": "ExpressionStatement",
												"src": "54559:66:0"
											},
											{
												"assignments": [
													2437
												],
												"declarations": [
													{
														"constant": false,
														"id": 2437,
														"mutability": "mutable",
														"name": "ecosystemShare",
														"nameLocation": "54643:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2466,
														"src": "54635:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "54635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2444,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2438,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "54661:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2439,
																	"name": "ecosystemVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2215,
																	"src": "54674:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54661:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2441,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "54660:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54690:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "54660:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54635:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2446,
																"name": "ecosystemShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2437,
																"src": "54711:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54728:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "54711:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "65636f73797374656d207368617265206d7573742062652067726561746572207468616e2030",
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54731:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															},
															"value": "ecosystem share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															}
														],
														"id": 2445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "54703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54703:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2451,
												"nodeType": "ExpressionStatement",
												"src": "54703:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2455,
															"name": "ecosystemAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "54815:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2456,
															"name": "ecosystemShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "54833:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2452,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "54783:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1842,
														"src": "54783:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1814_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54783:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2458,
												"nodeType": "ExpressionStatement",
												"src": "54783:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2462,
															"name": "holdersAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "54891:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2463,
															"name": "holdersShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2421,
															"src": "54907:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2459,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "54859:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1814",
																"typeString": "contract IERC20"
															}
														},
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1842,
														"src": "54859:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1814_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1814_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54859:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2465,
												"nodeType": "ExpressionStatement",
												"src": "54859:61:0"
											}
										]
									},
									"functionSelector": "cbf89c63",
									"id": 2467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "54358:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54404:8:0"
									},
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "54383:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "54375:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54374:20:0"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54413:0:0"
									},
									"scope": 2510,
									"src": "54349:578:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2149
									],
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "55012:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2476,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "55037:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2477,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2469,
															"src": "55051:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2475,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "55029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55029:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2474,
												"id": 2479,
												"nodeType": "Return",
												"src": "55022:38:0"
											}
										]
									},
									"functionSelector": "4fb43199",
									"id": 2481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "54942:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2471,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54988:8:0"
									},
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "54964:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "54956:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54955:18:0"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "55006:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55005:6:0"
									},
									"scope": 2510,
									"src": "54933:134:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2156
									],
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "55151:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2490,
															"name": "EVENT_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "55176:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2491,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "55189:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2489,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "55168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55168:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2488,
												"id": 2493,
												"nodeType": "Return",
												"src": "55161:37:0"
											}
										]
									},
									"functionSelector": "cb146622",
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "55082:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2485,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55127:8:0"
									},
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "55103:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "55095:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55094:18:0"
									},
									"returnParameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "55145:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55144:6:0"
									},
									"scope": 2510,
									"src": "55073:132:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2163
									],
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "55284:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2504,
															"name": "BLACKLIST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "55309:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2505,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "55320:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2503,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "55301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55301:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2502,
												"id": 2507,
												"nodeType": "Return",
												"src": "55294:35:0"
											}
										]
									},
									"functionSelector": "332daccf",
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "55220:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2499,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55260:8:0"
									},
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "55236:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "55228:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55227:18:0"
									},
									"returnParameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "55278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55277:6:0"
									},
									"scope": 2510,
									"src": "55211:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2511,
							"src": "51559:3780:0",
							"usedErrors": []
						}
					],
					"src": "183:55156:0"
				},
				"id": 0
			}
		}
	}
}