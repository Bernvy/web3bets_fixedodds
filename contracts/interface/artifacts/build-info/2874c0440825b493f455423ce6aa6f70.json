{
	"id": "2874c0440825b493f455423ce6aa6f70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Web3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./interface/IWeb3BetsFO.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @author Victor Okoro\n/// @title Web3Bets Contract for FixedOdds decentralized betting exchange\n/// @notice Contains Web3Bets ecosystem's variables and functions\n/// @custom:security contact okoro.victor@web3bets.io\n\n/* \ncopied and modified code logic from github Repo: https://github.com/wizardoma/web3_bets_contract.git\n*/\ncontract Web3BetsFO is IWeb3BetsFO {\n\n    address public contractOwner;\n    \n    address public override holdersAddress;\n    address public override ecosystemAddress;\n    address public override stableCoin;\n\n    address public override eventFactory;\n    address public override marketFactory;\n    address public override betFactory;\n\n    uint256 public override holdersVig = 50;\n    uint256 public override ecosystemVig = 50;\n    uint256 public override vigPercentage = 10;\n\n    address[] public systemAdmins;\n    address[] public eventAdmins;\n    address[] public blackList;\n\n    mapping(address => address) public admins;\n    mapping(address => address) public eventOwners;\n    mapping(address => address) public blacked;\n\n    IERC20 private _stableCoinWrapper = IERC20(stableCoin);\n\n    modifier onlyUser() {\n        require(\n            msg.sender == contractOwner,\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n    modifier onlySystemAdmin {\n        require(\n            isSystemAdmin(msg.sender) || msg.sender == contractOwner,\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n    modifier uniqueSystemAdmin(address _addr) {\n        require(admins[_addr] == address(0), \"already a system admin\");\n        _;\n    }\n    modifier uniqueEventAdmin(address _addr) {\n        require(eventOwners[_addr] == address(0), \"already an event admin\");\n        _;\n    }\n    modifier uniqueBlack(address _addr) {\n        require(blacked[_addr] == address(0), \"already in blacklist\");\n        _;\n    }\n\n    constructor() {\n        contractOwner = msg.sender;\n    }\n    \n    function setAddresses(address holdAddr, address ecoAddr,address scAddr) external onlySystemAdmin {\n        holdersAddress = holdAddr;\n        ecosystemAddress = ecoAddr;\n        stableCoin = scAddr;\n    }\n\n    function setFactory(address _event,address _market,address _bet) external onlySystemAdmin {\n        eventFactory = _event;\n        marketFactory = _market;\n        betFactory = _bet;\n    }\n\n    function setVigPercentage(uint256 _percentage) external onlySystemAdmin {\n        require(\n            _percentage < 10,\n            \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\"\n        );\n        vigPercentage = _percentage;\n    }\n\n    function setVigPercentageShares(\n        uint256 hVig,\n        uint256 eVig\n    ) external onlySystemAdmin {\n        require(\n            hVig <= 100 && eVig <= 100,\n            \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\"\n        );\n        require(\n            hVig + eVig  == 100,\n            \"The sum of all Vig percentage shares must be equal to 100\"\n        );\n\n        holdersVig = hVig;\n        ecosystemVig = eVig;\n    }\n\n    function shareBetEarnings() external override {\n        uint256 _vigAmount = _stableCoinWrapper.balanceOf(address(this));\n        require(_vigAmount > 0, \"bet earnings must be greater than 0\");\n        uint256 holdersShare = (_vigAmount * holdersVig )/ 100;\n        require(holdersShare > 0, \"holders' share must be greater than 0\");\n        uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100;\n        require(ecosystemShare > 0, \"ecosystem share must be greater than 0\");\n\n        _stableCoinWrapper.transfer(ecosystemAddress, ecosystemShare);\n\n        _stableCoinWrapper.transfer(holdersAddress, holdersShare);\n    }\n    \n    function addSystemAdmin(address _addr)\n        external\n        onlyUser\n        uniqueSystemAdmin(_addr)\n    {\n        systemAdmins.push(_addr);\n        admins[_addr] = _addr;\n    }\n\n    function deleteSystemAdmin(address _systemAdmin) external onlyUser {\n        require (admins[_systemAdmin] != address(0), \"Invalid event owner\");\n        \n        delete admins[_systemAdmin];\n\n        for (uint256 i = 0; i < systemAdmins.length; i++) {\n            if (systemAdmins[i] == _systemAdmin) {\n                delete systemAdmins[i];\n                break;\n            }\n        }\n    }\n    \n    function addEventAdmin(address _addr)\n        external\n        onlySystemAdmin\n        uniqueEventAdmin(_addr)\n    {\n        require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\");\n\n        eventAdmins.push(_addr);\n        eventOwners[_addr] = _addr;\n    }\n\n    function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {\n        require (eventOwners[_eventOwner] != address(0), \"Invalid event owner\");\n        \n        delete eventOwners[_eventOwner];\n\n        for (uint256 i = 0; i < eventAdmins.length; i++) {\n            if (eventAdmins[i] == _eventOwner) {\n                delete eventAdmins[i];\n                break;\n            }\n        }\n    }\n    \n    function addBlacked(address _addr)\n        external\n        onlySystemAdmin\n        uniqueBlack(_addr)\n    {\n        eventAdmins.push(_addr);\n        eventOwners[_addr] = _addr;\n    }\n\n    function removeBlacked(address _eventOwner) external onlySystemAdmin {\n        require (blacked[_eventOwner] != address(0), \"Invalid event owner\");\n        \n        delete blacked[_eventOwner];\n\n        for (uint256 i = 0; i < blackList.length; i++) {\n            if (blackList[i] == _eventOwner) {\n                delete blackList[i];\n                break;\n            }\n        }\n    }\n\n    function isSystemAdmin(address _addr) public view override returns (bool) {\n        if(admins[_addr] != address(0)){\n            bool found = false;\n            for (uint256 i = 0; i < systemAdmins.length; i++) {\n                if (systemAdmins[i] == _addr) {\n                    found = true;\n                    break;\n                }\n            }\n            return found;\n        }\n        else{\n            return false;\n        }\n    }\n\n    function isEventAdmin(address _addr) public view override returns (bool) {\n        if(eventOwners[_addr] != address(0)){\n            bool found = false;\n            for (uint256 i = 0; i < eventAdmins.length; i++) {\n                if (eventAdmins[i] == _addr) {\n                    found = true;\n                    break;\n                }\n            }\n            return found;\n        }\n        else{\n            return false;\n        }\n    }\n\n    function isBlack(address _addr) public view override returns (bool) {\n        if(blacked[_addr] != address(0)){\n            bool found = false;\n            for (uint256 i = 0; i < blackList.length; i++) {\n                if (blackList[i] == _addr) {\n                    found = true;\n                    break;\n                }\n            }\n            return found;\n        }\n        else{\n            return false;\n        }\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IWeb3BetsFO{\n\n    function ecosystemAddress() external view returns(address);\n\n    function holdersAddress() external view returns(address);\n\n    function stableCoin() external view returns(address);\n\n    function eventFactory() external view returns(address);\n\n    function marketFactory() external view returns(address);\n\n    function betFactory() external view returns(address);\n\n    function holdersVig() external view returns(uint);\n\n    function ecosystemVig() external view returns(uint);\n\n    function vigPercentage() external returns(uint);\n\n    function shareBetEarnings() external;\n\n    function isSystemAdmin(address _account) external returns (bool);\n\n    function isEventAdmin(address _account) external returns (bool);\n\n    function isBlack(address _account) external returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Web3BetsFO.sol": {
				"Web3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addBlacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addEventAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addSystemAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "blackList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacked",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventOwner",
									"type": "address"
								}
							],
							"name": "deleteEventAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_systemAdmin",
									"type": "address"
								}
							],
							"name": "deleteSystemAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "eventAdmins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "eventOwners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventOwner",
									"type": "address"
								}
							],
							"name": "removeBlacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holdAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ecoAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "scAddr",
									"type": "address"
								}
							],
							"name": "setAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_event",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_market",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_bet",
									"type": "address"
								}
							],
							"name": "setFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								}
							],
							"name": "setVigPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "hVig",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "eVig",
									"type": "uint256"
								}
							],
							"name": "setVigPercentageShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "systemAdmins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Victor Okoro",
						"custom:security": "contact okoro.victor@web3bets.io",
						"kind": "dev",
						"methods": {},
						"title": "Web3Bets Contract for FixedOdds decentralized betting exchange",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Web3BetsFO.sol\":482:7182  contract Web3BetsFO is IWeb3BetsFO {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Web3BetsFO.sol\":857:859  50 */\n  0x32\n    /* \"contracts/Web3BetsFO.sol\":820:859  uint256 public override holdersVig = 50 */\n  0x07\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":865:906  uint256 public override ecosystemVig = 50 */\n  0x08\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":952:954  10 */\n  0x0a\n    /* \"contracts/Web3BetsFO.sol\":912:954  uint256 public override vigPercentage = 10 */\n  0x09\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":1254:1264  stableCoin */\n  sload(0x03)\n    /* \"contracts/Web3BetsFO.sol\":1211:1265  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  0x10\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Web3BetsFO.sol\":1254:1264  stableCoin */\n  swap1\n  swap3\n  and\n    /* \"contracts/Web3BetsFO.sol\":1211:1265  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":2053:2110  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Web3BetsFO.sol\":2077:2090  contractOwner */\n  0x00\n    /* \"contracts/Web3BetsFO.sol\":2077:2103  contractOwner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Web3BetsFO.sol\":2093:2103  msg.sender */\n  caller\n    /* \"contracts/Web3BetsFO.sol\":2077:2103  contractOwner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":482:7182  contract Web3BetsFO is IWeb3BetsFO {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Web3BetsFO.sol\":482:7182  contract Web3BetsFO is IWeb3BetsFO {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x709ec8b4\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcb146622\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd6c1ca26\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd6c1ca26\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe3c0ed78\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xed9f7eb9\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2210b2c\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xcb146622\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd37e87fd\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd5494869\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x9376b94c\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x9376b94c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9b460aa9\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa94fabc5\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x709ec8b4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x80036b34\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x85d8349b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x387440e6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x4fb43199\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x4fb43199\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x64886880\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x681ada8c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6fdbd3f6\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x387440e6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x429b62e5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x486d1e50\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4d161324\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x0da4ee50\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x0da4ee50\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a9618\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x332daccf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x363bf964\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x026c1a4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06a5cb3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06ae7095\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":961:990  address[] public systemAdmins */\n    tag_3:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1865:1897   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1847:1898   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1835:1837   */\n      0x20\n        /* \"#utility.yul\":1820:1838   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":961:990  address[] public systemAdmins */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Web3BetsFO.sol\":607:647  address public override ecosystemAddress */\n    tag_4:\n      sload(0x02)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":736:773  address public override marketFactory */\n    tag_5:\n      sload(0x05)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":563:601  address public override holdersAddress */\n    tag_6:\n      sload(0x01)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":779:813  address public override betFactory */\n    tag_7:\n      sload(0x06)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":6745:7179  function isBlack(address _addr) public view override returns (bool) {... */\n    tag_8:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":2353:2367   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2346:2368   */\n      iszero\n        /* \"#utility.yul\":2328:2369   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2316:2318   */\n      0x20\n        /* \"#utility.yul\":2301:2319   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":6745:7179  function isBlack(address _addr) public view override returns (bool) {... */\n      tag_44\n        /* \"#utility.yul\":2283:2375   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2120:2324  function setAddresses(address holdAddr, address ecoAddr,address scAddr) external onlySystemAdmin {... */\n    tag_9:\n      tag_64\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/Web3BetsFO.sol\":912:954  uint256 public override vigPercentage = 10 */\n    tag_10:\n      tag_68\n      sload(0x09)\n      dup2\n      jump\n    tag_68:\n      mload(0x40)\n        /* \"#utility.yul\":7424:7449   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7412:7414   */\n      0x20\n        /* \"#utility.yul\":7397:7415   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":912:954  uint256 public override vigPercentage = 10 */\n      tag_44\n        /* \"#utility.yul\":7379:7455   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1063:1104  mapping(address => address) public admins */\n    tag_11:\n      tag_40\n      tag_73\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_73:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":820:859  uint256 public override holdersVig = 50 */\n    tag_12:\n      tag_68\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3252:3878  function shareBetEarnings() external override {... */\n    tag_13:\n      tag_64\n      tag_80\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":5841:6286  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n    tag_14:\n      tag_58\n      tag_82\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2785:3246  function setVigPercentageShares(... */\n    tag_15:\n      tag_64\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":5447:5835  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n    tag_16:\n      tag_64\n      tag_90\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":694:730  address public override eventFactory */\n    tag_17:\n      sload(0x04)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1030:1056  address[] public blackList */\n    tag_18:\n      tag_40\n      tag_96\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1162:1204  mapping(address => address) public blacked */\n    tag_19:\n      tag_40\n      tag_100\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_100:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1110:1156  mapping(address => address) public eventOwners */\n    tag_20:\n      tag_40\n      tag_104\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_104:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":865:906  uint256 public override ecosystemVig = 50 */\n    tag_21:\n      tag_68\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":653:687  address public override stableCoin */\n    tag_22:\n      sload(0x03)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":5258:5441  function addBlacked(address _addr)... */\n    tag_23:\n      tag_64\n      tag_114\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2330:2518  function setFactory(address _event,address _market,address _bet) external onlySystemAdmin {... */\n    tag_24:\n      tag_64\n      tag_117\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":6292:6739  function isEventAdmin(address _addr) public view override returns (bool) {... */\n    tag_25:\n      tag_58\n      tag_120\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":524:552  address public contractOwner */\n    tag_26:\n      sload(0x00)\n      tag_40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":996:1024  address[] public eventAdmins */\n    tag_27:\n      tag_40\n      tag_127\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4076:4472  function deleteSystemAdmin(address _systemAdmin) external onlyUser {... */\n    tag_28:\n      tag_64\n      tag_131\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2524:2779  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_29:\n      tag_64\n      tag_134\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4482:4837  function addEventAdmin(address _addr)... */\n    tag_30:\n      tag_64\n      tag_137\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3888:4070  function addSystemAdmin(address _addr)... */\n    tag_31:\n      tag_64\n      tag_140\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4843:5248  function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {... */\n    tag_32:\n      tag_64\n      tag_143\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":961:990  address[] public systemAdmins */\n    tag_43:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6745:7179  function isBlack(address _addr) public view override returns (bool) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6826:6840  blacked[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6807:6811  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6826:6840  blacked[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6826:6833  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":6826:6840  blacked[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6807:6811  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6826:6840  blacked[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6826:6854  blacked[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":6823:7173  if(blacked[_addr] != address(0)){... */\n      tag_148\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6869:6879  bool found */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6906:6915  uint256 i */\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":6901:7087  for (uint256 i = 0; i < blackList.length; i++) {... */\n    tag_149:\n        /* \"contracts/Web3BetsFO.sol\":6925:6934  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6925:6941  blackList.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6921:6941  i < blackList.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6901:7087  for (uint256 i = 0; i < blackList.length; i++) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6986:6991  _addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6970:6991  blackList[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6970:6979  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6980:6981  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6970:6982  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_152:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6970:6991  blackList[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6966:7073  if (blackList[i] == _addr) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":7023:7027  true */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":7015:7027  found = true */\n      swap2\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7049:7054  break */\n      jump(tag_150)\n        /* \"contracts/Web3BetsFO.sol\":6966:7073  if (blackList[i] == _addr) {... */\n    tag_154:\n        /* \"contracts/Web3BetsFO.sol\":6943:6946  i++ */\n      dup1\n      tag_155\n      dup2\n      tag_156\n      jump\t// in\n    tag_155:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6901:7087  for (uint256 i = 0; i < blackList.length; i++) {... */\n      jump(tag_149)\n    tag_150:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7107:7112  found */\n      swap3\n        /* \"contracts/Web3BetsFO.sol\":6745:7179  function isBlack(address _addr) public view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6823:7173  if(blacked[_addr] != address(0)){... */\n    tag_148:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7157:7162  false */\n      0x00\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6745:7179  function isBlack(address _addr) public view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6823:7173  if(blacked[_addr] != address(0)){... */\n    tag_157:\n        /* \"contracts/Web3BetsFO.sol\":6745:7179  function isBlack(address _addr) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2120:2324  function setAddresses(address holdAddr, address ecoAddr,address scAddr) external onlySystemAdmin {... */\n    tag_67:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_159\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_160\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_160:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/Web3BetsFO.sol\":2227:2241  holdersAddress */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":2227:2252  holdersAddress = holdAddr */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2262:2278  ecosystemAddress */\n      0x02\n        /* \"contracts/Web3BetsFO.sol\":2262:2288  ecosystemAddress = ecoAddr */\n      dup1\n      sload\n      swap4\n      dup6\n      and\n      swap4\n      dup3\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2298:2308  stableCoin */\n      0x03\n        /* \"contracts/Web3BetsFO.sol\":2298:2317  stableCoin = scAddr */\n      dup1\n      sload\n      swap2\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2120:2324  function setAddresses(address holdAddr, address ecoAddr,address scAddr) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":3252:3878  function shareBetEarnings() external override {... */\n    tag_80:\n        /* \"contracts/Web3BetsFO.sol\":3329:3347  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":3329:3372  _stableCoinWrapper.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3366:3370  this */\n      address\n        /* \"contracts/Web3BetsFO.sol\":3329:3372  _stableCoinWrapper.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1847:1898   */\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3308:3326  uint256 _vigAmount */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":3329:3347  _stableCoinWrapper */\n      and\n      swap1\n        /* \"contracts/Web3BetsFO.sol\":3329:3357  _stableCoinWrapper.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1820:1838   */\n      0x24\n      add\n        /* \"contracts/Web3BetsFO.sol\":3329:3372  _stableCoinWrapper.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contracts/Web3BetsFO.sol\":3308:3372  uint256 _vigAmount = _stableCoinWrapper.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3403:3404  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3390:3400  _vigAmount */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3390:3404  _vigAmount > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3382:3444  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6589:6591   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3382:3444  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6571:6592   */\n      mstore\n        /* \"#utility.yul\":6628:6630   */\n      0x23\n        /* \"#utility.yul\":6608:6626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6601:6631   */\n      mstore\n        /* \"#utility.yul\":6667:6701   */\n      0x626574206561726e696e6773206d757374206265206772656174657220746861\n        /* \"#utility.yul\":6647:6665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6640:6702   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":6718:6736   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6711:6744   */\n      mstore\n        /* \"#utility.yul\":6761:6780   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3382:3444  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_162\n        /* \"#utility.yul\":6561:6786   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3382:3444  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n    tag_172:\n        /* \"contracts/Web3BetsFO.sol\":3454:3474  uint256 holdersShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3505:3508  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3491:3501  holdersVig */\n      sload(0x07)\n        /* \"contracts/Web3BetsFO.sol\":3478:3488  _vigAmount */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3478:3501  _vigAmount * holdersVig */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/Web3BetsFO.sol\":3477:3508  (_vigAmount * holdersVig )/ 100 */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/Web3BetsFO.sol\":3454:3508  uint256 holdersShare = (_vigAmount * holdersVig )/ 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3541:3542  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3526:3538  holdersShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3526:3542  holdersShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3518:3584  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5486:5488   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3518:3584  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5468:5489   */\n      mstore\n        /* \"#utility.yul\":5525:5527   */\n      0x25\n        /* \"#utility.yul\":5505:5523   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5498:5528   */\n      mstore\n        /* \"#utility.yul\":5564:5598   */\n      0x686f6c6465727327207368617265206d75737420626520677265617465722074\n        /* \"#utility.yul\":5544:5562   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5537:5599   */\n      mstore\n      shl(0xdc, 0x068616e203)\n        /* \"#utility.yul\":5615:5633   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5608:5643   */\n      mstore\n        /* \"#utility.yul\":5660:5679   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3518:3584  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_162\n        /* \"#utility.yul\":5458:5685   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3518:3584  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n    tag_179:\n        /* \"contracts/Web3BetsFO.sol\":3594:3616  uint256 ecosystemShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3649:3652  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3633:3645  ecosystemVig */\n      sload(0x08)\n        /* \"contracts/Web3BetsFO.sol\":3620:3630  _vigAmount */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":3620:3645  _vigAmount * ecosystemVig */\n      tag_182\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_182:\n        /* \"contracts/Web3BetsFO.sol\":3619:3652  (_vigAmount * ecosystemVig) / 100 */\n      tag_183\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_183:\n        /* \"contracts/Web3BetsFO.sol\":3594:3652  uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3687:3688  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3670:3684  ecosystemShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3670:3688  ecosystemShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3662:3731  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3491:3493   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3662:3731  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3473:3494   */\n      mstore\n        /* \"#utility.yul\":3530:3532   */\n      0x26\n        /* \"#utility.yul\":3510:3528   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3503:3533   */\n      mstore\n        /* \"#utility.yul\":3569:3603   */\n      0x65636f73797374656d207368617265206d757374206265206772656174657220\n        /* \"#utility.yul\":3549:3567   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3542:3604   */\n      mstore\n      shl(0xd4, 0x07468616e203)\n        /* \"#utility.yul\":3620:3638   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3613:3649   */\n      mstore\n        /* \"#utility.yul\":3666:3685   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3662:3731  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_162\n        /* \"#utility.yul\":3463:3691   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3662:3731  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n    tag_184:\n        /* \"contracts/Web3BetsFO.sol\":3742:3760  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":3770:3786  ecosystemAddress */\n      sload(0x02)\n        /* \"contracts/Web3BetsFO.sol\":3742:3803  _stableCoinWrapper.transfer(ecosystemAddress, ecosystemShare) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":3770:3786  ecosystemAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":3742:3803  _stableCoinWrapper.transfer(ecosystemAddress, ecosystemShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2083:2134   */\n      mstore\n        /* \"#utility.yul\":2150:2168   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2143:2177   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3742:3760  _stableCoinWrapper */\n      swap2\n      and\n      swap1\n        /* \"contracts/Web3BetsFO.sol\":3742:3769  _stableCoinWrapper.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2056:2074   */\n      0x44\n      add\n        /* \"contracts/Web3BetsFO.sol\":3742:3803  _stableCoinWrapper.transfer(ecosystemAddress, ecosystemShare) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3814:3832  _stableCoinWrapper */\n      sload(0x10)\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":3842:3856  holdersAddress */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":3814:3871  _stableCoinWrapper.transfer(holdersAddress, holdersShare) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":3842:3856  holdersAddress */\n      swap2\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":3814:3871  _stableCoinWrapper.transfer(holdersAddress, holdersShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2083:2134   */\n      mstore\n        /* \"#utility.yul\":2150:2168   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2143:2177   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3814:3832  _stableCoinWrapper */\n      swap2\n      and\n      swap1\n        /* \"contracts/Web3BetsFO.sol\":3814:3841  _stableCoinWrapper.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2056:2074   */\n      0x44\n      add\n        /* \"contracts/Web3BetsFO.sol\":3814:3871  _stableCoinWrapper.transfer(holdersAddress, holdersShare) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_198:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3252:3878  function shareBetEarnings() external override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5841:6286  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5928:5941  admins[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":5909:5913  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5928:5941  admins[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5928:5934  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":5928:5941  admins[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5909:5913  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":5928:5941  admins[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":5928:5955  admins[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":5925:6280  if(admins[_addr] != address(0)){... */\n      tag_148\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5970:5980  bool found */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6007:6016  uint256 i */\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":6002:6194  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n    tag_201:\n        /* \"contracts/Web3BetsFO.sol\":6026:6038  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":6026:6045  systemAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6022:6045  i < systemAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6002:6194  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6093:6098  _addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6074:6098  systemAdmins[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6074:6086  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":6087:6088  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6074:6089  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_204:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6074:6098  systemAdmins[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6070:6180  if (systemAdmins[i] == _addr) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6130:6134  true */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":6122:6134  found = true */\n      swap2\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6156:6161  break */\n      jump(tag_150)\n        /* \"contracts/Web3BetsFO.sol\":6070:6180  if (systemAdmins[i] == _addr) {... */\n    tag_206:\n        /* \"contracts/Web3BetsFO.sol\":6047:6050  i++ */\n      dup1\n      tag_207\n      dup2\n      tag_156\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6002:6194  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      jump(tag_201)\n        /* \"contracts/Web3BetsFO.sol\":2785:3246  function setVigPercentageShares(... */\n    tag_88:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_210\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_211\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_211:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_212:\n        /* \"contracts/Web3BetsFO.sol\":2931:2934  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":2923:2927  hVig */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":2923:2934  hVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":2923:2949  hVig <= 100 && eVig <= 100 */\n      dup1\n      iszero\n      tag_215\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":2946:2949  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":2938:2942  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2938:2949  eVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":2923:2949  hVig <= 100 && eVig <= 100 */\n    tag_215:\n        /* \"contracts/Web3BetsFO.sol\":2902:3049  require(... */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3008:3010   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2902:3049  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2990:3011   */\n      mstore\n        /* \"#utility.yul\":3047:3049   */\n      0x4a\n        /* \"#utility.yul\":3027:3045   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3020:3050   */\n      mstore\n        /* \"#utility.yul\":3086:3120   */\n      0x5669672070657263656e746167657320736861726573206d7573742062652065\n        /* \"#utility.yul\":3066:3084   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3059:3121   */\n      mstore\n        /* \"#utility.yul\":3157:3191   */\n      0x787072657373656420696e206120203020746f2031303020726174696f2e2045\n        /* \"#utility.yul\":3137:3155   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3130:3192   */\n      mstore\n      shl(0xb4, 0x078616d706c653a20333)\n        /* \"#utility.yul\":3208:3227   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3201:3242   */\n      mstore\n        /* \"#utility.yul\":3259:3278   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":2902:3049  require(... */\n      tag_162\n        /* \"#utility.yul\":2980:3284   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2902:3049  require(... */\n    tag_216:\n        /* \"contracts/Web3BetsFO.sol\":3080:3091  hVig + eVig */\n      tag_219\n        /* \"contracts/Web3BetsFO.sol\":3087:3091  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3080:3084  hVig */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3080:3091  hVig + eVig */\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"contracts/Web3BetsFO.sol\":3096:3099  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3080:3099  hVig + eVig  == 100 */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":3059:3182  require(... */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2582:2584   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3059:3182  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2564:2585   */\n      mstore\n        /* \"#utility.yul\":2621:2623   */\n      0x39\n        /* \"#utility.yul\":2601:2619   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2594:2624   */\n      mstore\n        /* \"#utility.yul\":2660:2694   */\n      0x5468652073756d206f6620616c6c205669672070657263656e74616765207368\n        /* \"#utility.yul\":2640:2658   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2633:2695   */\n      mstore\n        /* \"#utility.yul\":2731:2758   */\n      0x61726573206d75737420626520657175616c20746f2031303000000000000000\n        /* \"#utility.yul\":2711:2729   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2704:2759   */\n      mstore\n        /* \"#utility.yul\":2776:2795   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3059:3182  require(... */\n      tag_162\n        /* \"#utility.yul\":2554:2801   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3059:3182  require(... */\n    tag_221:\n        /* \"contracts/Web3BetsFO.sol\":3193:3203  holdersVig */\n      0x07\n        /* \"contracts/Web3BetsFO.sol\":3193:3210  holdersVig = hVig */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":3220:3232  ecosystemVig */\n      0x08\n        /* \"contracts/Web3BetsFO.sol\":3220:3239  ecosystemVig = eVig */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2785:3246  function setVigPercentageShares(... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5447:5835  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n    tag_91:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_225\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_226:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5535:5555  blacked[_eventOwner] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":5567:5568  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5535:5555  blacked[_eventOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5535:5542  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":5535:5555  blacked[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":5526:5593  require (blacked[_eventOwner] != address(0), \"Invalid event owner\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_232\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5619:5639  blacked[_eventOwner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5619:5626  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":5619:5639  blacked[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5612:5639  delete blacked[_eventOwner] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5650:5829  for (uint256 i = 0; i < blackList.length; i++) {... */\n    tag_233:\n        /* \"contracts/Web3BetsFO.sol\":5674:5683  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":5674:5690  blackList.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5670:5690  i < blackList.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":5650:5829  for (uint256 i = 0; i < blackList.length; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5731:5742  _eventOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5715:5742  blackList[i] == _eventOwner */\n      and\n        /* \"contracts/Web3BetsFO.sol\":5715:5724  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":5725:5726  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":5715:5727  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_236\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_236:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":5715:5742  blackList[i] == _eventOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":5711:5819  if (blackList[i] == _eventOwner) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5769:5778  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":5779:5780  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":5769:5781  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_239:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/Web3BetsFO.sol\":5762:5781  delete blackList[i] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5650:5829  for (uint256 i = 0; i < blackList.length; i++) {... */\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5447:5835  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5711:5819  if (blackList[i] == _eventOwner) {... */\n    tag_238:\n        /* \"contracts/Web3BetsFO.sol\":5692:5695  i++ */\n      dup1\n      tag_241\n      dup2\n      tag_156\n      jump\t// in\n    tag_241:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5650:5829  for (uint256 i = 0; i < blackList.length; i++) {... */\n      jump(tag_233)\n    tag_234:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5447:5835  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":1030:1056  address[] public blackList */\n    tag_97:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":5258:5441  function addBlacked(address _addr)... */\n    tag_115:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_245\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_246:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1976:1990  blacked[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":2002:2003  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1976:1990  blacked[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1976:1983  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":1976:1990  blacked[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5354:5359  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1976:1990  blacked[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1976:2004  blacked[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1968:2029  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6240:6242   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1968:2029  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6222:6243   */\n      mstore\n        /* \"#utility.yul\":6279:6281   */\n      0x14\n        /* \"#utility.yul\":6259:6277   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6252:6282   */\n      mstore\n      shl(0x62, 0x185b1c9958591e481a5b88189b1858dadb1a5cdd)\n        /* \"#utility.yul\":6298:6316   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6291:6341   */\n      mstore\n        /* \"#utility.yul\":6358:6376   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1968:2029  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      tag_162\n        /* \"#utility.yul\":6212:6382   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1968:2029  require(blacked[_addr] == address(0), \"already in blacklist\") */\n    tag_250:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5375:5386  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5375:5398  eventAdmins.push(_addr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5408:5426  eventOwners[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5408:5419  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5375:5398  eventAdmins.push(_addr) */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":5408:5426  eventOwners[_addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5408:5434  eventOwners[_addr] = _addr */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5258:5441  function addBlacked(address _addr)... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2330:2518  function setFactory(address _event,address _market,address _bet) external onlySystemAdmin {... */\n    tag_118:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_256\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_257:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"contracts/Web3BetsFO.sol\":2430:2442  eventFactory */\n      0x04\n        /* \"contracts/Web3BetsFO.sol\":2430:2451  eventFactory = _event */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2461:2474  marketFactory */\n      0x05\n        /* \"contracts/Web3BetsFO.sol\":2461:2484  marketFactory = _market */\n      dup1\n      sload\n      swap4\n      dup6\n      and\n      swap4\n      dup3\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2494:2504  betFactory */\n      0x06\n        /* \"contracts/Web3BetsFO.sol\":2494:2511  betFactory = _bet */\n      dup1\n      sload\n      swap2\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2330:2518  function setFactory(address _event,address _market,address _bet) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6292:6739  function isEventAdmin(address _addr) public view override returns (bool) {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6378:6396  eventOwners[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6359:6363  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6378:6396  eventOwners[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6378:6389  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":6378:6396  eventOwners[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6359:6363  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6378:6396  eventOwners[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6378:6410  eventOwners[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":6375:6733  if(eventOwners[_addr] != address(0)){... */\n      tag_148\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6425:6435  bool found */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6462:6471  uint256 i */\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":6457:6647  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n    tag_263:\n        /* \"contracts/Web3BetsFO.sol\":6481:6492  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":6481:6499  eventAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6477:6499  i < eventAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6457:6647  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6546:6551  _addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6528:6551  eventAdmins[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6528:6539  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":6540:6541  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6528:6542  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_266\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_266:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6528:6551  eventAdmins[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6524:6633  if (eventAdmins[i] == _addr) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6583:6587  true */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":6575:6587  found = true */\n      swap2\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6609:6614  break */\n      jump(tag_150)\n        /* \"contracts/Web3BetsFO.sol\":6524:6633  if (eventAdmins[i] == _addr) {... */\n    tag_268:\n        /* \"contracts/Web3BetsFO.sol\":6501:6504  i++ */\n      dup1\n      tag_269\n      dup2\n      tag_156\n      jump\t// in\n    tag_269:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6457:6647  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      jump(tag_263)\n        /* \"contracts/Web3BetsFO.sol\":996:1024  address[] public eventAdmins */\n    tag_128:\n      0x0b\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":4076:4472  function deleteSystemAdmin(address _systemAdmin) external onlyUser {... */\n    tag_132:\n        /* \"contracts/Web3BetsFO.sol\":1337:1350  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1323:1333  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1323:1350  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1302:1418  require(... */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4162:4182  admins[_systemAdmin] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":4194:4195  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4162:4182  admins[_systemAdmin] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4162:4168  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4162:4182  admins[_systemAdmin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":4153:4220  require (admins[_systemAdmin] != address(0), \"Invalid event owner\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_232\n      jump\t// in\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4246:4266  admins[_systemAdmin] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4246:4252  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4246:4266  admins[_systemAdmin] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":4239:4266  delete admins[_systemAdmin] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":4277:4466  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n    tag_279:\n        /* \"contracts/Web3BetsFO.sol\":4301:4313  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4301:4320  systemAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":4297:4320  i < systemAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":4277:4466  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":4364:4376  _systemAdmin */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4345:4376  systemAdmins[i] == _systemAdmin */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4345:4357  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4358:4359  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":4345:4360  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_282\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_282:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":4345:4376  systemAdmins[i] == _systemAdmin */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":4341:4456  if (systemAdmins[i] == _systemAdmin) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":4403:4415  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4416:4417  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":4403:4418  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/Web3BetsFO.sol\":4341:4456  if (systemAdmins[i] == _systemAdmin) {... */\n    tag_284:\n        /* \"contracts/Web3BetsFO.sol\":4322:4325  i++ */\n      dup1\n      tag_287\n      dup2\n      tag_156\n      jump\t// in\n    tag_287:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4277:4466  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      jump(tag_279)\n        /* \"contracts/Web3BetsFO.sol\":2524:2779  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_135:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_289\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_290\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_290:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_291:\n        /* \"contracts/Web3BetsFO.sol\":2641:2643  10 */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":2627:2638  _percentage */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2627:2643  _percentage < 10 */\n      lt\n        /* \"contracts/Web3BetsFO.sol\":2606:2735  require(... */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4249:4251   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2606:2735  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4231:4252   */\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x42\n        /* \"#utility.yul\":4268:4286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4261:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4361   */\n      0x5669672070657263656e74616765206d75737420626520657870726573736564\n        /* \"#utility.yul\":4307:4325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4300:4362   */\n      mstore\n        /* \"#utility.yul\":4398:4432   */\n      0x20696e203020746f2031302070657263656e746167652e204578616d706c653a\n        /* \"#utility.yul\":4378:4396   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4371:4433   */\n      mstore\n      shl(0xf1, 0x101b)\n        /* \"#utility.yul\":4449:4468   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4442:4475   */\n      mstore\n        /* \"#utility.yul\":4492:4511   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":2606:2735  require(... */\n      tag_162\n        /* \"#utility.yul\":4221:4517   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2606:2735  require(... */\n    tag_294:\n        /* \"contracts/Web3BetsFO.sol\":2745:2758  vigPercentage */\n      0x09\n        /* \"contracts/Web3BetsFO.sol\":2745:2772  vigPercentage = _percentage */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2524:2779  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":4482:4837  function addEventAdmin(address _addr)... */\n    tag_138:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_298\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_298:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_299\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_299:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1840:1858  eventOwners[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":1870:1871  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1840:1858  eventOwners[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1840:1851  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":1840:1858  eventOwners[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":4586:4591  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1840:1858  eventOwners[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1840:1872  eventOwners[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1832:1899  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1832:1899  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3880:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3939   */\n      0x16\n        /* \"#utility.yul\":3917:3935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3910:3940   */\n      mstore\n      shl(0x51, 0x30b63932b0b23c9030b71032bb32b73a1030b236b4b7)\n        /* \"#utility.yul\":3956:3974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3949:4001   */\n      mstore\n        /* \"#utility.yul\":4018:4036   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1832:1899  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      tag_162\n        /* \"#utility.yul\":3870:4042   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1832:1899  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n    tag_303:\n        /* \"contracts/Web3BetsFO.sol\":4615:4629  holdersAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Web3BetsFO.sol\":4615:4643  holdersAddress == address(0) */\n      iszero\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":4615:4677  holdersAddress == address(0) || ecosystemAddress == address(0) */\n      tag_307\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4647:4663  ecosystemAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Web3BetsFO.sol\":4647:4677  ecosystemAddress == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":4615:4677  holdersAddress == address(0) || ecosystemAddress == address(0) */\n    tag_307:\n        /* \"contracts/Web3BetsFO.sol\":4607:4760  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6993:6995   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":4607:4760  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6975:6996   */\n      mstore\n        /* \"#utility.yul\":7032:7034   */\n      0x4e\n        /* \"#utility.yul\":7012:7030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7005:7035   */\n      mstore\n        /* \"#utility.yul\":7071:7105   */\n      0x796f75206d7573742073657420686f6c6465727320616e642065636f73797374\n        /* \"#utility.yul\":7051:7069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7044:7106   */\n      mstore\n        /* \"#utility.yul\":7142:7176   */\n      0x6d654164647265737320616464726573736573206265666f726520616464696e\n        /* \"#utility.yul\":7122:7140   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7115:7177   */\n      mstore\n      shl(0x90, 0x67206576656e74206f776e657273)\n        /* \"#utility.yul\":7193:7212   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7186:7231   */\n      mstore\n        /* \"#utility.yul\":7248:7267   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":4607:4760  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      tag_162\n        /* \"#utility.yul\":6965:7273   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3888:4070  function addSystemAdmin(address _addr)... */\n    tag_141:\n        /* \"contracts/Web3BetsFO.sol\":1337:1350  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1323:1333  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1323:1350  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1302:1418  require(... */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1704:1717  admins[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":1729:1730  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1704:1717  admins[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1704:1710  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":1704:1717  admins[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":3987:3992  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1704:1717  admins[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1704:1731  admins[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1696:1758  require(admins[_addr] == address(0), \"already a system admin\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5135:5137   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1696:1758  require(admins[_addr] == address(0), \"already a system admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5117:5138   */\n      mstore\n        /* \"#utility.yul\":5174:5176   */\n      0x16\n        /* \"#utility.yul\":5154:5172   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5147:5177   */\n      mstore\n      shl(0x51, 0x30b63932b0b23c90309039bcb9ba32b69030b236b4b7)\n        /* \"#utility.yul\":5193:5211   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5186:5238   */\n      mstore\n        /* \"#utility.yul\":5255:5273   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1696:1758  require(admins[_addr] == address(0), \"already a system admin\") */\n      tag_162\n        /* \"#utility.yul\":5107:5279   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1696:1758  require(admins[_addr] == address(0), \"already a system admin\") */\n    tag_316:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4008:4020  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4008:4032  systemAdmins.push(_addr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4042:4055  admins[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4042:4048  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4008:4032  systemAdmins.push(_addr) */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":4042:4055  admins[_addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":4042:4063  admins[_addr] = _addr */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":3888:4070  function addSystemAdmin(address _addr)... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":4843:5248  function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {... */\n    tag_144:\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      tag_322\n        /* \"contracts/Web3BetsFO.sol\":1511:1521  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1497:1510  isSystemAdmin */\n      tag_83\n        /* \"contracts/Web3BetsFO.sol\":1497:1522  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_322:\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n      dup1\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":1540:1553  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1526:1536  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1526:1553  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1497:1553  isSystemAdmin(msg.sender) || msg.sender == contractOwner */\n    tag_323:\n        /* \"contracts/Web3BetsFO.sol\":1476:1621  require(... */\n      tag_324\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_324:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4934:4958  eventOwners[_eventOwner] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":4970:4971  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4934:4958  eventOwners[_eventOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4934:4945  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":4934:4958  eventOwners[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":4925:4996  require (eventOwners[_eventOwner] != address(0), \"Invalid event owner\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_232\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5022:5046  eventOwners[_eventOwner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5022:5033  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5022:5046  eventOwners[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5015:5046  delete eventOwners[_eventOwner] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5057:5242  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n    tag_329:\n        /* \"contracts/Web3BetsFO.sol\":5081:5092  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5081:5099  eventAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5077:5099  i < eventAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":5057:5242  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5142:5153  _eventOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5124:5153  eventAdmins[i] == _eventOwner */\n      and\n        /* \"contracts/Web3BetsFO.sol\":5124:5135  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5136:5137  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":5124:5138  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_332\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_332:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":5124:5153  eventAdmins[i] == _eventOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":5120:5232  if (eventAdmins[i] == _eventOwner) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5180:5191  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5192:5193  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":5180:5194  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/Web3BetsFO.sol\":5120:5232  if (eventAdmins[i] == _eventOwner) {... */\n    tag_334:\n        /* \"contracts/Web3BetsFO.sol\":5101:5104  i++ */\n      dup1\n      tag_337\n      dup2\n      tag_156\n      jump\t// in\n    tag_337:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5057:5242  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      jump(tag_329)\n        /* \"#utility.yul\":14:187   */\n    tag_339:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_60:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_343:\n        /* \"#utility.yul\":353:382   */\n      tag_344\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_339\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:737   */\n    tag_66:\n        /* \"#utility.yul\":470:476   */\n      0x00\n        /* \"#utility.yul\":478:484   */\n      dup1\n        /* \"#utility.yul\":486:492   */\n      0x00\n        /* \"#utility.yul\":539:541   */\n      0x60\n        /* \"#utility.yul\":527:536   */\n      dup5\n        /* \"#utility.yul\":518:525   */\n      dup7\n        /* \"#utility.yul\":514:537   */\n      sub\n        /* \"#utility.yul\":510:542   */\n      slt\n        /* \"#utility.yul\":507:509   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":560:566   */\n      dup2\n        /* \"#utility.yul\":552:558   */\n      dup3\n        /* \"#utility.yul\":545:567   */\n      revert\n        /* \"#utility.yul\":507:509   */\n    tag_346:\n        /* \"#utility.yul\":588:617   */\n      tag_347\n        /* \"#utility.yul\":607:616   */\n      dup5\n        /* \"#utility.yul\":588:617   */\n      tag_339\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":578:617   */\n      swap3\n      pop\n        /* \"#utility.yul\":636:674   */\n      tag_348\n        /* \"#utility.yul\":670:672   */\n      0x20\n        /* \"#utility.yul\":659:668   */\n      dup6\n        /* \"#utility.yul\":655:673   */\n      add\n        /* \"#utility.yul\":636:674   */\n      tag_339\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":626:674   */\n      swap2\n      pop\n        /* \"#utility.yul\":693:731   */\n      tag_349\n        /* \"#utility.yul\":727:729   */\n      0x40\n        /* \"#utility.yul\":716:725   */\n      dup6\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":693:731   */\n      tag_339\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":683:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":497:737   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":742:1039   */\n    tag_193:\n        /* \"#utility.yul\":809:815   */\n      0x00\n        /* \"#utility.yul\":862:864   */\n      0x20\n        /* \"#utility.yul\":850:859   */\n      dup3\n        /* \"#utility.yul\":841:848   */\n      dup5\n        /* \"#utility.yul\":837:860   */\n      sub\n        /* \"#utility.yul\":833:865   */\n      slt\n        /* \"#utility.yul\":830:832   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":883:889   */\n      dup1\n        /* \"#utility.yul\":875:881   */\n      dup2\n        /* \"#utility.yul\":868:890   */\n      revert\n        /* \"#utility.yul\":830:832   */\n    tag_351:\n        /* \"#utility.yul\":920:929   */\n      dup2\n        /* \"#utility.yul\":914:930   */\n      mload\n        /* \"#utility.yul\":973:978   */\n      dup1\n        /* \"#utility.yul\":966:979   */\n      iszero\n        /* \"#utility.yul\":959:980   */\n      iszero\n        /* \"#utility.yul\":952:957   */\n      dup2\n        /* \"#utility.yul\":949:981   */\n      eq\n        /* \"#utility.yul\":939:941   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":1000:1006   */\n      dup2\n        /* \"#utility.yul\":992:998   */\n      dup3\n        /* \"#utility.yul\":985:1007   */\n      revert\n        /* \"#utility.yul\":1044:1234   */\n    tag_42:\n        /* \"#utility.yul\":1103:1109   */\n      0x00\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1144:1153   */\n      dup3\n        /* \"#utility.yul\":1135:1142   */\n      dup5\n        /* \"#utility.yul\":1131:1154   */\n      sub\n        /* \"#utility.yul\":1127:1159   */\n      slt\n        /* \"#utility.yul\":1124:1126   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":1177:1183   */\n      dup1\n        /* \"#utility.yul\":1169:1175   */\n      dup2\n        /* \"#utility.yul\":1162:1184   */\n      revert\n        /* \"#utility.yul\":1124:1126   */\n    tag_354:\n      pop\n        /* \"#utility.yul\":1205:1228   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1114:1234   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1433   */\n    tag_171:\n        /* \"#utility.yul\":1309:1315   */\n      0x00\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1341:1348   */\n      dup5\n        /* \"#utility.yul\":1337:1360   */\n      sub\n        /* \"#utility.yul\":1333:1365   */\n      slt\n        /* \"#utility.yul\":1330:1332   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":1383:1389   */\n      dup1\n        /* \"#utility.yul\":1375:1381   */\n      dup2\n        /* \"#utility.yul\":1368:1390   */\n      revert\n        /* \"#utility.yul\":1330:1332   */\n    tag_356:\n      pop\n        /* \"#utility.yul\":1411:1427   */\n      mload\n      swap2\n        /* \"#utility.yul\":1320:1433   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1438:1696   */\n    tag_87:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1514:1520   */\n      dup1\n        /* \"#utility.yul\":1567:1569   */\n      0x40\n        /* \"#utility.yul\":1555:1564   */\n      dup4\n        /* \"#utility.yul\":1546:1553   */\n      dup6\n        /* \"#utility.yul\":1542:1565   */\n      sub\n        /* \"#utility.yul\":1538:1570   */\n      slt\n        /* \"#utility.yul\":1535:1537   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":1588:1594   */\n      dup2\n        /* \"#utility.yul\":1580:1586   */\n      dup3\n        /* \"#utility.yul\":1573:1595   */\n      revert\n        /* \"#utility.yul\":1535:1537   */\n    tag_358:\n      pop\n      pop\n        /* \"#utility.yul\":1616:1639   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1686:1688   */\n      0x20\n        /* \"#utility.yul\":1671:1689   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1658:1690   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1525:1696   */\n      jump\t// out\n        /* \"#utility.yul\":4522:4928   */\n    tag_163:\n        /* \"#utility.yul\":4724:4726   */\n      0x20\n        /* \"#utility.yul\":4706:4727   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4763:4765   */\n      0x2a\n        /* \"#utility.yul\":4743:4761   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4736:4766   */\n      mstore\n        /* \"#utility.yul\":4802:4836   */\n      0x596f752068617665206e6f2070726976696c65676520746f2072756e20746869\n        /* \"#utility.yul\":4797:4799   */\n      0x40\n        /* \"#utility.yul\":4782:4800   */\n      dup3\n      add\n        /* \"#utility.yul\":4775:4837   */\n      mstore\n      shl(0xb1, 0x3990333ab731ba34b7b7)\n        /* \"#utility.yul\":4868:4870   */\n      0x60\n        /* \"#utility.yul\":4853:4871   */\n      dup3\n      add\n        /* \"#utility.yul\":4846:4886   */\n      mstore\n        /* \"#utility.yul\":4918:4921   */\n      0x80\n        /* \"#utility.yul\":4903:4922   */\n      add\n      swap1\n        /* \"#utility.yul\":4696:4928   */\n      jump\t// out\n        /* \"#utility.yul\":5690:6033   */\n    tag_232:\n        /* \"#utility.yul\":5892:5894   */\n      0x20\n        /* \"#utility.yul\":5874:5895   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5931:5933   */\n      0x13\n        /* \"#utility.yul\":5911:5929   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5904:5934   */\n      mstore\n      shl(0x69, 0x24b73b30b634b21032bb32b73a1037bbb732b9)\n        /* \"#utility.yul\":5965:5967   */\n      0x40\n        /* \"#utility.yul\":5950:5968   */\n      dup3\n      add\n        /* \"#utility.yul\":5943:5992   */\n      mstore\n        /* \"#utility.yul\":6024:6026   */\n      0x60\n        /* \"#utility.yul\":6009:6027   */\n      add\n      swap1\n        /* \"#utility.yul\":5864:6033   */\n      jump\t// out\n        /* \"#utility.yul\":7460:7588   */\n    tag_220:\n        /* \"#utility.yul\":7500:7503   */\n      0x00\n        /* \"#utility.yul\":7531:7532   */\n      dup3\n        /* \"#utility.yul\":7527:7533   */\n      not\n        /* \"#utility.yul\":7524:7525   */\n      dup3\n        /* \"#utility.yul\":7521:7534   */\n      gt\n        /* \"#utility.yul\":7518:7520   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":7537:7555   */\n      tag_377\n      tag_378\n      jump\t// in\n    tag_377:\n      pop\n        /* \"#utility.yul\":7573:7582   */\n      add\n      swap1\n        /* \"#utility.yul\":7508:7588   */\n      jump\t// out\n        /* \"#utility.yul\":7593:7810   */\n    tag_178:\n        /* \"#utility.yul\":7633:7634   */\n      0x00\n        /* \"#utility.yul\":7659:7660   */\n      dup3\n        /* \"#utility.yul\":7649:7651   */\n      tag_380\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7684:7715   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7738:7742   */\n      0x12\n        /* \"#utility.yul\":7735:7736   */\n      0x04\n        /* \"#utility.yul\":7728:7743   */\n      mstore\n        /* \"#utility.yul\":7766:7770   */\n      0x24\n        /* \"#utility.yul\":7691:7692   */\n      dup2\n        /* \"#utility.yul\":7756:7771   */\n      revert\n        /* \"#utility.yul\":7649:7651   */\n    tag_380:\n      pop\n        /* \"#utility.yul\":7795:7804   */\n      div\n      swap1\n        /* \"#utility.yul\":7639:7810   */\n      jump\t// out\n        /* \"#utility.yul\":7815:7983   */\n    tag_176:\n        /* \"#utility.yul\":7855:7862   */\n      0x00\n        /* \"#utility.yul\":7921:7922   */\n      dup2\n        /* \"#utility.yul\":7917:7918   */\n      0x00\n        /* \"#utility.yul\":7913:7919   */\n      not\n        /* \"#utility.yul\":7909:7923   */\n      div\n        /* \"#utility.yul\":7906:7907   */\n      dup4\n        /* \"#utility.yul\":7903:7924   */\n      gt\n        /* \"#utility.yul\":7898:7899   */\n      dup3\n        /* \"#utility.yul\":7891:7900   */\n      iszero\n        /* \"#utility.yul\":7884:7901   */\n      iszero\n        /* \"#utility.yul\":7880:7925   */\n      and\n        /* \"#utility.yul\":7877:7879   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7928:7946   */\n      tag_383\n      tag_378\n      jump\t// in\n    tag_383:\n      pop\n        /* \"#utility.yul\":7968:7977   */\n      mul\n      swap1\n        /* \"#utility.yul\":7867:7983   */\n      jump\t// out\n        /* \"#utility.yul\":7988:8123   */\n    tag_156:\n        /* \"#utility.yul\":8027:8030   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":8048:8065   */\n      dup3\n      eq\n        /* \"#utility.yul\":8045:8047   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":8068:8086   */\n      tag_386\n      tag_378\n      jump\t// in\n    tag_386:\n      pop\n        /* \"#utility.yul\":8115:8116   */\n      0x01\n        /* \"#utility.yul\":8104:8117   */\n      add\n      swap1\n        /* \"#utility.yul\":8035:8123   */\n      jump\t// out\n        /* \"#utility.yul\":8128:8255   */\n    tag_378:\n        /* \"#utility.yul\":8189:8199   */\n      0x4e487b71\n        /* \"#utility.yul\":8184:8187   */\n      0xe0\n        /* \"#utility.yul\":8180:8200   */\n      shl\n        /* \"#utility.yul\":8177:8178   */\n      0x00\n        /* \"#utility.yul\":8170:8201   */\n      mstore\n        /* \"#utility.yul\":8220:8224   */\n      0x11\n        /* \"#utility.yul\":8217:8218   */\n      0x04\n        /* \"#utility.yul\":8210:8225   */\n      mstore\n        /* \"#utility.yul\":8244:8248   */\n      0x24\n        /* \"#utility.yul\":8241:8242   */\n      0x00\n        /* \"#utility.yul\":8234:8249   */\n      revert\n\n    auxdata: 0xa26469706673582212208ebda3d275165ac436e2302484aa33266da1fed0f2f1cf8229007e87fe7ae92664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260326007819055600855600a600955600354601080546001600160a01b0319166001600160a01b0390921691909117905534801561004157600080fd5b50600080546001600160a01b03191633179055611539806100636000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063709ec8b411610104578063cb146622116100a2578063d6c1ca2611610071578063d6c1ca2614610423578063e3c0ed7814610436578063ed9f7eb914610449578063f2210b2c1461045c57600080fd5b8063cb146622146103d7578063ce606ee0146103ea578063d37e87fd146103fd578063d54948691461041057600080fd5b80639376b94c116100de5780639376b94c14610395578063992642e51461039e5780639b460aa9146103b1578063a94fabc5146103c457600080fd5b8063709ec8b41461033057806380036b341461034357806385d8349b1461036c57600080fd5b8063387440e61161017c5780634fb431991161014b5780634fb43199146102e457806364886880146102f7578063681ada8c1461030a5780636fdbd3f61461031d57600080fd5b8063387440e614610293578063429b62e5146102aa578063486d1e50146102d35780634d161324146102dc57600080fd5b80630da4ee50116101b85780630da4ee50146102355780632e1a961814610248578063332daccf1461025b578063363bf9641461027e57600080fd5b8063026c1a4d146101df57806306a5cb3a1461020f57806306ae709514610222575b600080fd5b6101f26101ed3660046113b3565b61046f565b6040516001600160a01b0390911681526020015b60405180910390f35b6002546101f2906001600160a01b031681565b6005546101f2906001600160a01b031681565b6001546101f2906001600160a01b031681565b6006546101f2906001600160a01b031681565b61026e610269366004611330565b610499565b6040519015158152602001610206565b61029161028c366004611351565b61053e565b005b61029c60095481565b604051908152602001610206565b6101f26102b8366004611330565b600d602052600090815260409020546001600160a01b031681565b61029c60075481565b6102916105c0565b61026e6102f2366004611330565b6108aa565b6102916103053660046113e3565b61093b565b610291610318366004611330565b610a96565b6004546101f2906001600160a01b031681565b6101f261033e3660046113b3565b610bd2565b6101f2610351366004611330565b600f602052600090815260409020546001600160a01b031681565b6101f261037a366004611330565b600e602052600090815260409020546001600160a01b031681565b61029c60085481565b6003546101f2906001600160a01b031681565b6102916103bf366004611330565b610be2565b6102916103d2366004611351565b610ce1565b61026e6103e5366004611330565b610d5a565b6000546101f2906001600160a01b031681565b6101f261040b3660046113b3565b610deb565b61029161041e366004611330565b610dfb565b6102916104313660046113b3565b610f06565b610291610444366004611330565b610fc6565b610291610457366004611330565b61110d565b61029161046a366004611330565b6111fe565b600a818154811061047f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038181166000908152600f602052604081205490911615610531576000805b600c5481101561052a57836001600160a01b0316600c82815481106104f457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610518576001915061052a565b80610522816114d2565b9150506104bf565b5092915050565b506000919050565b919050565b610547336108aa565b8061055c57506000546001600160a01b031633145b6105815760405162461bcd60e51b815260040161057890611404565b60405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560038054919093169116179055565b6010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561060457600080fd5b505afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c91906113cb565b90506000811161069a5760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610578565b60006064600754836106ac91906114b3565b6106b69190611493565b9050600081116107165760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610578565b600060646008548461072891906114b3565b6107329190611493565b9050600081116107935760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610578565b60105460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb90604401602060405180830381600087803b1580156107e357600080fd5b505af11580156107f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081b9190611393565b5060105460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a49190611393565b50505050565b6001600160a01b038181166000908152600d602052604081205490911615610531576000805b600a5481101561052a57836001600160a01b0316600a828154811061090557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610929576001915061052a565b80610933816114d2565b9150506108d0565b610944336108aa565b8061095957506000546001600160a01b031633145b6109755760405162461bcd60e51b815260040161057890611404565b60648211158015610987575060648111155b610a0c5760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a401610578565b610a16818361147b565b606414610a8b5760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f20313030000000000000006064820152608401610578565b600791909155600855565b610a9f336108aa565b80610ab457506000546001600160a01b031633145b610ad05760405162461bcd60e51b815260040161057890611404565b6001600160a01b038181166000908152600f602052604090205416610b075760405162461bcd60e51b81526004016105789061144e565b6001600160a01b0381166000908152600f6020526040812080546001600160a01b03191690555b600c54811015610bce57816001600160a01b0316600c8281548110610b6357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610bbc57600c8181548110610b9f57634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555050565b80610bc6816114d2565b915050610b2e565b5050565b600c818154811061047f57600080fd5b610beb336108aa565b80610c0057506000546001600160a01b031633145b610c1c5760405162461bcd60e51b815260040161057890611404565b6001600160a01b038082166000908152600f602052604090205482911615610c7d5760405162461bcd60e51b8152602060048201526014602482015273185b1c9958591e481a5b88189b1858dadb1a5cdd60621b6044820152606401610578565b50600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039092166001600160a01b031992831681179091556000818152600e602052604090208054909216179055565b610cea336108aa565b80610cff57506000546001600160a01b031633145b610d1b5760405162461bcd60e51b815260040161057890611404565b600480546001600160a01b039485166001600160a01b031991821617909155600580549385169382169390931790925560068054919093169116179055565b6001600160a01b038181166000908152600e602052604081205490911615610531576000805b600b5481101561052a57836001600160a01b0316600b8281548110610db557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610dd9576001915061052a565b80610de3816114d2565b915050610d80565b600b818154811061047f57600080fd5b6000546001600160a01b03163314610e255760405162461bcd60e51b815260040161057890611404565b6001600160a01b038181166000908152600d602052604090205416610e5c5760405162461bcd60e51b81526004016105789061144e565b6001600160a01b0381166000908152600d6020526040812080546001600160a01b03191690555b600a54811015610bce57816001600160a01b0316600a8281548110610eb857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610ef457600a8181548110610b9f57634e487b7160e01b600052603260045260246000fd5b80610efe816114d2565b915050610e83565b610f0f336108aa565b80610f2457506000546001600160a01b031633145b610f405760405162461bcd60e51b815260040161057890611404565b600a8110610fc15760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a401610578565b600955565b610fcf336108aa565b80610fe457506000546001600160a01b031633145b6110005760405162461bcd60e51b815260040161057890611404565b6001600160a01b038082166000908152600e6020526040902054829116156110635760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c9030b71032bb32b73a1030b236b4b760511b6044820152606401610578565b6001546001600160a01b0316158061108457506002546001600160a01b0316155b610c7d5760405162461bcd60e51b815260206004820152604e60248201527f796f75206d7573742073657420686f6c6465727320616e642065636f7379737460448201527f6d654164647265737320616464726573736573206265666f726520616464696e60648201526d67206576656e74206f776e65727360901b608482015260a401610578565b6000546001600160a01b031633146111375760405162461bcd60e51b815260040161057890611404565b6001600160a01b038082166000908152600d60205260409020548291161561119a5760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c90309039bcb9ba32b69030b236b4b760511b6044820152606401610578565b50600a8054600181019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b039092166001600160a01b031992831681179091556000818152600d602052604090208054909216179055565b611207336108aa565b8061121c57506000546001600160a01b031633145b6112385760405162461bcd60e51b815260040161057890611404565b6001600160a01b038181166000908152600e60205260409020541661126f5760405162461bcd60e51b81526004016105789061144e565b6001600160a01b0381166000908152600e6020526040812080546001600160a01b03191690555b600b54811015610bce57816001600160a01b0316600b82815481106112cb57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561130757600b8181548110610b9f57634e487b7160e01b600052603260045260246000fd5b80611311816114d2565b915050611296565b80356001600160a01b038116811461053957600080fd5b600060208284031215611341578081fd5b61134a82611319565b9392505050565b600080600060608486031215611365578182fd5b61136e84611319565b925061137c60208501611319565b915061138a60408501611319565b90509250925092565b6000602082840312156113a4578081fd5b8151801515811461134a578182fd5b6000602082840312156113c4578081fd5b5035919050565b6000602082840312156113dc578081fd5b5051919050565b600080604083850312156113f5578182fd5b50508035926020909101359150565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b60208082526013908201527224b73b30b634b21032bb32b73a1037bbb732b960691b604082015260600190565b6000821982111561148e5761148e6114ed565b500190565b6000826114ae57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114cd576114cd6114ed565b500290565b60006000198214156114e6576114e66114ed565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208ebda3d275165ac436e2302484aa33266da1fed0f2f1cf8229007e87fe7ae92664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0x9 SSTORE PUSH1 0x3 SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1539 DUP1 PUSH2 0x63 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x709EC8B4 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD6C1CA26 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xE3C0ED78 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xED9F7EB9 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xF2210B2C EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB146622 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xD37E87FD EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD5494869 EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9376B94C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x9B460AA9 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xA94FABC5 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x80036B34 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x85D8349B EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x4FB43199 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x681ADA8C EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x4D161324 EQ PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA4EE50 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x363BF964 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26C1A4D EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x206 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x206 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x291 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH2 0x291 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x291 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x291 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST PUSH2 0x291 PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x52A JUMP JUMPDEST DUP1 PUSH2 0x522 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4BF JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x547 CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0x55C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x880 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x905 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x929 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x52A JUMP JUMPDEST DUP1 PUSH2 0x933 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x944 CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0x959 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x578 JUMP JUMPDEST PUSH2 0xA16 DUP2 DUP4 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xA9F CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xAB4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBBC JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xBC6 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEB CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xC00 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x185B1C9958591E481A5B88189B1858DADB1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCEA CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xCFF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x52A JUMP JUMPDEST DUP1 PUSH2 0xDE3 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD80 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xEF4 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0xEFE DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE83 JUMP JUMPDEST PUSH2 0xF0F CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xF24 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0xFCF CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xFE4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C9030B71032BB32B73A1030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x1084 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206D7573742073657420686F6C6465727320616E642065636F73797374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D654164647265737320616464726573736573206265666F726520616464696E PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x67206576656E74206F776E657273 PUSH1 0x90 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x119A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C90309039BCB9BA32B69030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1207 CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0x121C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x126F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1307 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x1311 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1296 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1341 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x134A DUP3 PUSH2 0x1319 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1365 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x136E DUP5 PUSH2 0x1319 JUMP JUMPDEST SWAP3 POP PUSH2 0x137C PUSH1 0x20 DUP6 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP PUSH2 0x138A PUSH1 0x40 DUP6 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x134A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21032BB32B73A1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x14ED JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CD PUSH2 0x14ED JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x14E6 JUMPI PUSH2 0x14E6 PUSH2 0x14ED JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xBD LOG3 0xD2 PUSH22 0x165AC436E2302484AA33266DA1FED0F2F1CF8229007E DUP8 INVALID PUSH27 0xE92664736F6C634300080400330000000000000000000000000000 ",
							"sourceMap": "482:6700:1:-:0;;;857:2;820:39;;;;865:41;;952:2;912:42;;1254:10;;1211:54;;;-1:-1:-1;;;;;;1211:54:1;-1:-1:-1;;;;;1254:10:1;;;1211:54;;;;;;2053:57;;;;;;;;;-1:-1:-1;2077:13:1;:26;;-1:-1:-1;;;;;;2077:26:1;2093:10;2077:26;;;482:6700;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8257:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:3"
															},
															"nodeType": "YulIf",
															"src": "111:2:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "14:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:3"
															},
															"nodeType": "YulIf",
															"src": "272:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:3",
														"type": ""
													}
												],
												"src": "192:196:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:240:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "543:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "552:6:3"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "560:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "545:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "527:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "514:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "539:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:32:3"
															},
															"nodeType": "YulIf",
															"src": "507:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "578:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "607:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "588:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "578:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "626:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "659:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "670:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "655:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "655:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "636:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "683:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "727:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "693:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:38:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "447:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "458:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "470:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "478:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "486:6:3",
														"type": ""
													}
												],
												"src": "393:344:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "820:219:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "866:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "875:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "883:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "868:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "868:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "841:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "837:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "862:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:32:3"
															},
															"nodeType": "YulIf",
															"src": "830:2:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "901:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "914:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "905:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "983:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "992:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1000:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "985:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "985:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "952:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "973:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "966:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "966:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "959:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "959:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:40:3"
															},
															"nodeType": "YulIf",
															"src": "939:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1018:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1028:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1018:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "797:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "809:6:3",
														"type": ""
													}
												],
												"src": "742:297:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:120:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1177:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1162:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:3"
															},
															"nodeType": "YulIf",
															"src": "1124:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1195:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1205:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1195:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1080:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1091:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1103:6:3",
														"type": ""
													}
												],
												"src": "1044:190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1320:113:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1375:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1383:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1368:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1341:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:32:3"
															},
															"nodeType": "YulIf",
															"src": "1330:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1401:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1286:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1297:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1309:6:3",
														"type": ""
													}
												],
												"src": "1239:194:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1525:171:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1571:26:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1580:6:3"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1588:6:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1573:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1573:22:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1573:22:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1546:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1542:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:32:3"
															},
															"nodeType": "YulIf",
															"src": "1535:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1606:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1629:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1648:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1675:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1671:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1671:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1658:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1514:6:3",
														"type": ""
													}
												],
												"src": "1438:258:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1802:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1812:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1824:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1835:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1820:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1812:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1854:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1869:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1885:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1890:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1881:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1881:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1894:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1877:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1877:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1847:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1771:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1782:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1793:4:3",
														"type": ""
													}
												],
												"src": "1701:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2048:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2060:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2056:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2048:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2090:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2105:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2121:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2126:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2117:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2117:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2130:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2113:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2113:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2154:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2165:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2143:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1999:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2010:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2018:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2029:4:3",
														"type": ""
													}
												],
												"src": "1909:274:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2293:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2305:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2316:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2293:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2360:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2353:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2353:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2346:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2346:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2328:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2328:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2252:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2263:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2274:4:3",
														"type": ""
													}
												],
												"src": "2188:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2554:247:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2571:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2564:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:3",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2594:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2644:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2660:34:3",
																		"type": "",
																		"value": "The sum of all Vig percentage sh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2633:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2715:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2726:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2711:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2731:27:3",
																		"type": "",
																		"value": "ares must be equal to 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2704:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:55:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2704:55:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2768:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2780:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2791:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2768:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2531:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2545:4:3",
														"type": ""
													}
												],
												"src": "2380:421:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2980:304:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2997:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3008:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2990:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2990:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3031:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3042:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3027:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3027:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:2:3",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3020:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3070:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3081:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3066:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3086:34:3",
																		"type": "",
																		"value": "Vig percentages shares must be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3059:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3141:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3152:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3157:34:3",
																		"type": "",
																		"value": "xpressed in a  0 to 100 ratio. E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3130:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3212:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3223:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:19:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3229:12:3",
																		"type": "",
																		"value": "xample: 30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3201:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3201:41:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3251:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3263:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3274:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3251:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2957:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2971:4:3",
														"type": ""
													}
												],
												"src": "2806:478:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3463:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3480:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3473:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3514:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3525:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3553:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3564:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3569:34:3",
																		"type": "",
																		"value": "ecosystem share must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3542:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3624:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3635:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3620:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3640:8:3",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3658:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3670:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3681:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3666:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3658:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3454:4:3",
														"type": ""
													}
												],
												"src": "3289:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3870:172:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3887:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3960:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3971:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3956:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3956:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3976:24:3",
																		"type": "",
																		"value": "already an event admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3949:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3949:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4010:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4018:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4010:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3847:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3861:4:3",
														"type": ""
													}
												],
												"src": "3696:346:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4221:296:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4238:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4249:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4231:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4231:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4272:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4283:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4268:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:3",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4261:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4327:34:3",
																		"type": "",
																		"value": "Vig percentage must be expressed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4300:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4382:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4393:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4378:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4378:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4398:34:3",
																		"type": "",
																		"value": " in 0 to 10 percentage. Example:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4371:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4453:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4464:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4449:19:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4470:4:3",
																		"type": "",
																		"value": " 6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4507:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4484:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4198:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4212:4:3",
														"type": ""
													}
												],
												"src": "4047:470:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4696:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4713:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4724:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4758:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4763:2:3",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4736:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4736:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4736:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4786:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4797:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4782:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4782:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4802:34:3",
																		"type": "",
																		"value": "You have no privilege to run thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4857:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4868:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4853:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4853:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4873:12:3",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4846:40:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4895:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4907:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4895:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4673:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4687:4:3",
														"type": ""
													}
												],
												"src": "4522:406:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5107:172:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5124:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5117:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5117:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5117:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5158:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5169:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5154:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5174:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5197:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5208:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5193:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5193:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5213:24:3",
																		"type": "",
																		"value": "already a system admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5186:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5186:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5247:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5259:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5255:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5247:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5084:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5098:4:3",
														"type": ""
													}
												],
												"src": "4933:346:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:227:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5475:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5509:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5520:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5505:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5505:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:3",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5498:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5498:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5564:34:3",
																		"type": "",
																		"value": "holders' share must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5619:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5630:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5615:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5615:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5635:7:3",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5608:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5608:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5608:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5652:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5652:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5435:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5449:4:3",
														"type": ""
													}
												],
												"src": "5284:401:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5864:169:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5881:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5892:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5874:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5874:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5915:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5926:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5911:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5911:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5904:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5954:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5965:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5970:21:3",
																		"type": "",
																		"value": "Invalid event owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5943:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5943:49:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5943:49:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6001:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6013:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6001:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5841:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5855:4:3",
														"type": ""
													}
												],
												"src": "5690:343:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6212:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6229:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6222:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6263:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6274:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6259:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6259:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6279:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6252:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6302:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6313:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6298:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6298:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6318:22:3",
																		"type": "",
																		"value": "already in blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6291:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6291:50:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6291:50:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6350:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6362:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6358:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6350:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6189:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6203:4:3",
														"type": ""
													}
												],
												"src": "6038:344:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6561:225:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6578:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6589:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6571:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6623:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:3",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6651:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6662:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6647:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6647:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6667:34:3",
																		"type": "",
																		"value": "bet earnings must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6640:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6722:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6733:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6718:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6718:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6738:5:3",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6711:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6711:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6765:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6776:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6538:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6552:4:3",
														"type": ""
													}
												],
												"src": "6387:399:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6965:308:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6982:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6993:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6975:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6975:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7016:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7027:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7012:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7032:2:3",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7005:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7005:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7066:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7051:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7071:34:3",
																		"type": "",
																		"value": "you must set holders and ecosyst"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7044:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7044:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7126:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7122:18:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7142:34:3",
																		"type": "",
																		"value": "meAddress addresses before addin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7197:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7208:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7193:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7193:19:3"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7214:16:3",
																		"type": "",
																		"value": "g event owners"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7186:45:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7252:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7263:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7248:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7248:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7240:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6942:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6956:4:3",
														"type": ""
													}
												],
												"src": "6791:482:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7379:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7389:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7401:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7397:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7397:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7389:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7431:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7442:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7424:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7424:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7348:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7359:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7370:4:3",
														"type": ""
													}
												],
												"src": "7278:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7508:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7535:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7537:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7537:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7537:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7524:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7531:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7527:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7527:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7521:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:13:3"
															},
															"nodeType": "YulIf",
															"src": "7518:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7566:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7577:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7580:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7573:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7566:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7491:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7494:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7500:3:3",
														"type": ""
													}
												],
												"src": "7460:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7639:171:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7670:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7691:1:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7698:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7703:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7694:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7694:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7684:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7684:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7684:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7735:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7738:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7728:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7728:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7763:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7766:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7756:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7756:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7756:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7659:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7652:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7652:9:3"
															},
															"nodeType": "YulIf",
															"src": "7649:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7790:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7799:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7802:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7795:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7790:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7624:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7627:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7633:1:3",
														"type": ""
													}
												],
												"src": "7593:217:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7867:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7926:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7928:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7928:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7928:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7898:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7891:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7891:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7884:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7906:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7917:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7913:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7913:6:3"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7921:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7909:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7909:14:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7903:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:21:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:45:3"
															},
															"nodeType": "YulIf",
															"src": "7877:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7957:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7972:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7975:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7968:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7968:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7957:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7846:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7849:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7855:7:3",
														"type": ""
													}
												],
												"src": "7815:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8035:88:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8066:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8068:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8068:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8068:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8051:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8062:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8058:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8058:6:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8048:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:17:3"
															},
															"nodeType": "YulIf",
															"src": "8045:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8097:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8108:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8115:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8104:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8017:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8027:3:3",
														"type": ""
													}
												],
												"src": "7988:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8160:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8177:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8184:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8189:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8180:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8170:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8170:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8170:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8217:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8220:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8210:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8241:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8244:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8128:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"The sum of all Vig percentage sh\")\n        mstore(add(headStart, 96), \"ares must be equal to 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Vig percentages shares must be e\")\n        mstore(add(headStart, 96), \"xpressed in a  0 to 100 ratio. E\")\n        mstore(add(headStart, 128), \"xample: 30\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ecosystem share must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"already an event admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"Vig percentage must be expressed\")\n        mstore(add(headStart, 96), \" in 0 to 10 percentage. Example:\")\n        mstore(add(headStart, 128), \" 6\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"You have no privilege to run thi\")\n        mstore(add(headStart, 96), \"s function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"already a system admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"holders' share must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid event owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"already in blacklist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"bet earnings must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 78)\n        mstore(add(headStart, 64), \"you must set holders and ecosyst\")\n        mstore(add(headStart, 96), \"meAddress addresses before addin\")\n        mstore(add(headStart, 128), \"g event owners\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101da5760003560e01c8063709ec8b411610104578063cb146622116100a2578063d6c1ca2611610071578063d6c1ca2614610423578063e3c0ed7814610436578063ed9f7eb914610449578063f2210b2c1461045c57600080fd5b8063cb146622146103d7578063ce606ee0146103ea578063d37e87fd146103fd578063d54948691461041057600080fd5b80639376b94c116100de5780639376b94c14610395578063992642e51461039e5780639b460aa9146103b1578063a94fabc5146103c457600080fd5b8063709ec8b41461033057806380036b341461034357806385d8349b1461036c57600080fd5b8063387440e61161017c5780634fb431991161014b5780634fb43199146102e457806364886880146102f7578063681ada8c1461030a5780636fdbd3f61461031d57600080fd5b8063387440e614610293578063429b62e5146102aa578063486d1e50146102d35780634d161324146102dc57600080fd5b80630da4ee50116101b85780630da4ee50146102355780632e1a961814610248578063332daccf1461025b578063363bf9641461027e57600080fd5b8063026c1a4d146101df57806306a5cb3a1461020f57806306ae709514610222575b600080fd5b6101f26101ed3660046113b3565b61046f565b6040516001600160a01b0390911681526020015b60405180910390f35b6002546101f2906001600160a01b031681565b6005546101f2906001600160a01b031681565b6001546101f2906001600160a01b031681565b6006546101f2906001600160a01b031681565b61026e610269366004611330565b610499565b6040519015158152602001610206565b61029161028c366004611351565b61053e565b005b61029c60095481565b604051908152602001610206565b6101f26102b8366004611330565b600d602052600090815260409020546001600160a01b031681565b61029c60075481565b6102916105c0565b61026e6102f2366004611330565b6108aa565b6102916103053660046113e3565b61093b565b610291610318366004611330565b610a96565b6004546101f2906001600160a01b031681565b6101f261033e3660046113b3565b610bd2565b6101f2610351366004611330565b600f602052600090815260409020546001600160a01b031681565b6101f261037a366004611330565b600e602052600090815260409020546001600160a01b031681565b61029c60085481565b6003546101f2906001600160a01b031681565b6102916103bf366004611330565b610be2565b6102916103d2366004611351565b610ce1565b61026e6103e5366004611330565b610d5a565b6000546101f2906001600160a01b031681565b6101f261040b3660046113b3565b610deb565b61029161041e366004611330565b610dfb565b6102916104313660046113b3565b610f06565b610291610444366004611330565b610fc6565b610291610457366004611330565b61110d565b61029161046a366004611330565b6111fe565b600a818154811061047f57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038181166000908152600f602052604081205490911615610531576000805b600c5481101561052a57836001600160a01b0316600c82815481106104f457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610518576001915061052a565b80610522816114d2565b9150506104bf565b5092915050565b506000919050565b919050565b610547336108aa565b8061055c57506000546001600160a01b031633145b6105815760405162461bcd60e51b815260040161057890611404565b60405180910390fd5b600180546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560038054919093169116179055565b6010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561060457600080fd5b505afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c91906113cb565b90506000811161069a5760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610578565b60006064600754836106ac91906114b3565b6106b69190611493565b9050600081116107165760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610578565b600060646008548461072891906114b3565b6107329190611493565b9050600081116107935760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610578565b60105460025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb90604401602060405180830381600087803b1580156107e357600080fd5b505af11580156107f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081b9190611393565b5060105460015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a49190611393565b50505050565b6001600160a01b038181166000908152600d602052604081205490911615610531576000805b600a5481101561052a57836001600160a01b0316600a828154811061090557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610929576001915061052a565b80610933816114d2565b9150506108d0565b610944336108aa565b8061095957506000546001600160a01b031633145b6109755760405162461bcd60e51b815260040161057890611404565b60648211158015610987575060648111155b610a0c5760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a401610578565b610a16818361147b565b606414610a8b5760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f20313030000000000000006064820152608401610578565b600791909155600855565b610a9f336108aa565b80610ab457506000546001600160a01b031633145b610ad05760405162461bcd60e51b815260040161057890611404565b6001600160a01b038181166000908152600f602052604090205416610b075760405162461bcd60e51b81526004016105789061144e565b6001600160a01b0381166000908152600f6020526040812080546001600160a01b03191690555b600c54811015610bce57816001600160a01b0316600c8281548110610b6357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610bbc57600c8181548110610b9f57634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555050565b80610bc6816114d2565b915050610b2e565b5050565b600c818154811061047f57600080fd5b610beb336108aa565b80610c0057506000546001600160a01b031633145b610c1c5760405162461bcd60e51b815260040161057890611404565b6001600160a01b038082166000908152600f602052604090205482911615610c7d5760405162461bcd60e51b8152602060048201526014602482015273185b1c9958591e481a5b88189b1858dadb1a5cdd60621b6044820152606401610578565b50600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039092166001600160a01b031992831681179091556000818152600e602052604090208054909216179055565b610cea336108aa565b80610cff57506000546001600160a01b031633145b610d1b5760405162461bcd60e51b815260040161057890611404565b600480546001600160a01b039485166001600160a01b031991821617909155600580549385169382169390931790925560068054919093169116179055565b6001600160a01b038181166000908152600e602052604081205490911615610531576000805b600b5481101561052a57836001600160a01b0316600b8281548110610db557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610dd9576001915061052a565b80610de3816114d2565b915050610d80565b600b818154811061047f57600080fd5b6000546001600160a01b03163314610e255760405162461bcd60e51b815260040161057890611404565b6001600160a01b038181166000908152600d602052604090205416610e5c5760405162461bcd60e51b81526004016105789061144e565b6001600160a01b0381166000908152600d6020526040812080546001600160a01b03191690555b600a54811015610bce57816001600160a01b0316600a8281548110610eb857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610ef457600a8181548110610b9f57634e487b7160e01b600052603260045260246000fd5b80610efe816114d2565b915050610e83565b610f0f336108aa565b80610f2457506000546001600160a01b031633145b610f405760405162461bcd60e51b815260040161057890611404565b600a8110610fc15760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a401610578565b600955565b610fcf336108aa565b80610fe457506000546001600160a01b031633145b6110005760405162461bcd60e51b815260040161057890611404565b6001600160a01b038082166000908152600e6020526040902054829116156110635760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c9030b71032bb32b73a1030b236b4b760511b6044820152606401610578565b6001546001600160a01b0316158061108457506002546001600160a01b0316155b610c7d5760405162461bcd60e51b815260206004820152604e60248201527f796f75206d7573742073657420686f6c6465727320616e642065636f7379737460448201527f6d654164647265737320616464726573736573206265666f726520616464696e60648201526d67206576656e74206f776e65727360901b608482015260a401610578565b6000546001600160a01b031633146111375760405162461bcd60e51b815260040161057890611404565b6001600160a01b038082166000908152600d60205260409020548291161561119a5760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c90309039bcb9ba32b69030b236b4b760511b6044820152606401610578565b50600a8054600181019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b039092166001600160a01b031992831681179091556000818152600d602052604090208054909216179055565b611207336108aa565b8061121c57506000546001600160a01b031633145b6112385760405162461bcd60e51b815260040161057890611404565b6001600160a01b038181166000908152600e60205260409020541661126f5760405162461bcd60e51b81526004016105789061144e565b6001600160a01b0381166000908152600e6020526040812080546001600160a01b03191690555b600b54811015610bce57816001600160a01b0316600b82815481106112cb57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316141561130757600b8181548110610b9f57634e487b7160e01b600052603260045260246000fd5b80611311816114d2565b915050611296565b80356001600160a01b038116811461053957600080fd5b600060208284031215611341578081fd5b61134a82611319565b9392505050565b600080600060608486031215611365578182fd5b61136e84611319565b925061137c60208501611319565b915061138a60408501611319565b90509250925092565b6000602082840312156113a4578081fd5b8151801515811461134a578182fd5b6000602082840312156113c4578081fd5b5035919050565b6000602082840312156113dc578081fd5b5051919050565b600080604083850312156113f5578182fd5b50508035926020909101359150565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b60208082526013908201527224b73b30b634b21032bb32b73a1037bbb732b960691b604082015260600190565b6000821982111561148e5761148e6114ed565b500190565b6000826114ae57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114cd576114cd6114ed565b500290565b60006000198214156114e6576114e66114ed565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208ebda3d275165ac436e2302484aa33266da1fed0f2f1cf8229007e87fe7ae92664736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x709EC8B4 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD6C1CA26 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xE3C0ED78 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xED9F7EB9 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xF2210B2C EQ PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB146622 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xD37E87FD EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD5494869 EQ PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9376B94C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x9B460AA9 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xA94FABC5 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x80036B34 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x85D8349B EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x4FB43199 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x681ADA8C EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x4D161324 EQ PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDA4EE50 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x363BF964 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26C1A4D EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x222 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x206 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x206 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST PUSH2 0x291 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH2 0x291 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1351 JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F2 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xDEB JUMP JUMPDEST PUSH2 0x291 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x291 PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B3 JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST PUSH2 0x291 PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0x11FE JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x518 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x52A JUMP JUMPDEST DUP1 PUSH2 0x522 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4BF JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x547 CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0x55C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x581 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x618 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0x732 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x880 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x905 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x929 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x52A JUMP JUMPDEST DUP1 PUSH2 0x933 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x944 CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0x959 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0xA0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x578 JUMP JUMPDEST PUSH2 0xA16 DUP2 DUP4 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xA9F CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xAB4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xB07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB63 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBBC JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xBC6 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEB CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xC00 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xC1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x185B1C9958591E481A5B88189B1858DADB1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCEA CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xCFF JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x52A JUMP JUMPDEST DUP1 PUSH2 0xDE3 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD80 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xEF4 JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0xEFE DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE83 JUMP JUMPDEST PUSH2 0xF0F CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xF24 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0xFCF CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0xFE4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C9030B71032BB32B73A1030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x1084 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x796F75206D7573742073657420686F6C6465727320616E642065636F73797374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D654164647265737320616464726573736573206265666F726520616464696E PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x67206576656E74206F776E657273 PUSH1 0x90 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x578 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x119A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C90309039BCB9BA32B69030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x578 JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1207 CALLER PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH2 0x121C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1238 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x126F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP1 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xBCE JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1307 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x1311 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1296 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1341 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x134A DUP3 PUSH2 0x1319 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1365 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x136E DUP5 PUSH2 0x1319 JUMP JUMPDEST SWAP3 POP PUSH2 0x137C PUSH1 0x20 DUP6 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP2 POP PUSH2 0x138A PUSH1 0x40 DUP6 ADD PUSH2 0x1319 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x134A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DC JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21032BB32B73A1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x14ED JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14CD JUMPI PUSH2 0x14CD PUSH2 0x14ED JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x14E6 JUMPI PUSH2 0x14E6 PUSH2 0x14ED JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xBD LOG3 0xD2 PUSH22 0x165AC436E2302484AA33266DA1FED0F2F1CF8229007E DUP8 INVALID PUSH27 0xE92664736F6C634300080400330000000000000000000000000000 ",
							"sourceMap": "482:6700:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;961:29;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1865:32:3;;;1847:51;;1835:2;1820:18;961:29:1;;;;;;;;607:40;;;;;-1:-1:-1;;;;;607:40:1;;;736:37;;;;;-1:-1:-1;;;;;736:37:1;;;563:38;;;;;-1:-1:-1;;;;;563:38:1;;;779:34;;;;;-1:-1:-1;;;;;779:34:1;;;6745:434;;;;;;:::i;:::-;;:::i;:::-;;;2353:14:3;;2346:22;2328:41;;2316:2;2301:18;6745:434:1;2283:92:3;2120:204:1;;;;;;:::i;:::-;;:::i;:::-;;912:42;;;;;;;;;7424:25:3;;;7412:2;7397:18;912:42:1;7379:76:3;1063:41:1;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1063:41:1;;;820:39;;;;;;3252:626;;;:::i;5841:445::-;;;;;;:::i;:::-;;:::i;2785:461::-;;;;;;:::i;:::-;;:::i;5447:388::-;;;;;;:::i;:::-;;:::i;694:36::-;;;;;-1:-1:-1;;;;;694:36:1;;;1030:26;;;;;;:::i;:::-;;:::i;1162:42::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1162:42:1;;;1110:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1110:46:1;;;865:41;;;;;;653:34;;;;;-1:-1:-1;;;;;653:34:1;;;5258:183;;;;;;:::i;:::-;;:::i;2330:188::-;;;;;;:::i;:::-;;:::i;6292:447::-;;;;;;:::i;:::-;;:::i;524:28::-;;;;;-1:-1:-1;;;;;524:28:1;;;996;;;;;;:::i;:::-;;:::i;4076:396::-;;;;;;:::i;:::-;;:::i;2524:255::-;;;;;;:::i;:::-;;:::i;4482:355::-;;;;;;:::i;:::-;;:::i;3888:182::-;;;;;;:::i;:::-;;:::i;4843:405::-;;;;;;:::i;:::-;;:::i;961:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;961:29:1;;-1:-1:-1;961:29:1;:::o;6745:434::-;-1:-1:-1;;;;;6826:14:1;;;6807:4;6826:14;;;:7;:14;;;;;;6807:4;;6826:14;:28;6823:350;;6869:10;6906:9;6901:186;6925:9;:16;6921:20;;6901:186;;;6986:5;-1:-1:-1;;;;;6970:21:1;:9;6980:1;6970:12;;;;;;-1:-1:-1;;;6970:12:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6970:12:1;:21;6966:107;;;7023:4;7015:12;;7049:5;;6966:107;6943:3;;;;:::i;:::-;;;;6901:186;;;-1:-1:-1;7107:5:1;6745:434;-1:-1:-1;;6745:434:1:o;6823:350::-;-1:-1:-1;7157:5:1;;6745:434;-1:-1:-1;6745:434:1:o;6823:350::-;6745:434;;;:::o;2120:204::-;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;;;;;;;;;2227:14:::1;:25:::0;;-1:-1:-1;;;;;2227:25:1;;::::1;-1:-1:-1::0;;;;;;2227:25:1;;::::1;;::::0;;;2262:16:::1;:26:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2298:10:::1;:19:::0;;;;;::::1;::::0;::::1;;::::0;;2120:204::o;3252:626::-;3329:18;;:43;;-1:-1:-1;;;3329:43:1;;3366:4;3329:43;;;1847:51:3;3308:18:1;;-1:-1:-1;;;;;3329:18:1;;:28;;1820:18:3;;3329:43:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3308:64;;3403:1;3390:10;:14;3382:62;;;;-1:-1:-1;;;3382:62:1;;6589:2:3;3382:62:1;;;6571:21:3;6628:2;6608:18;;;6601:30;6667:34;6647:18;;;6640:62;-1:-1:-1;;;6718:18:3;;;6711:33;6761:19;;3382:62:1;6561:225:3;3382:62:1;3454:20;3505:3;3491:10;;3478;:23;;;;:::i;:::-;3477:31;;;;:::i;:::-;3454:54;;3541:1;3526:12;:16;3518:66;;;;-1:-1:-1;;;3518:66:1;;5486:2:3;3518:66:1;;;5468:21:3;5525:2;5505:18;;;5498:30;5564:34;5544:18;;;5537:62;-1:-1:-1;;;5615:18:3;;;5608:35;5660:19;;3518:66:1;5458:227:3;3518:66:1;3594:22;3649:3;3633:12;;3620:10;:25;;;;:::i;:::-;3619:33;;;;:::i;:::-;3594:58;;3687:1;3670:14;:18;3662:69;;;;-1:-1:-1;;;3662:69:1;;3491:2:3;3662:69:1;;;3473:21:3;3530:2;3510:18;;;3503:30;3569:34;3549:18;;;3542:62;-1:-1:-1;;;3620:18:3;;;3613:36;3666:19;;3662:69:1;3463:228:3;3662:69:1;3742:18;;3770:16;;3742:61;;-1:-1:-1;;;3742:61:1;;-1:-1:-1;;;;;3770:16:1;;;3742:61;;;2083:51:3;2150:18;;;2143:34;;;3742:18:1;;;:27;;2056:18:3;;3742:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3814:18:1;;;3842:14;3814:57;;-1:-1:-1;;;3814:57:1;;-1:-1:-1;;;;;3842:14:1;;;3814:57;;;2083:51:3;2150:18;;;2143:34;;;3814:18:1;;;:27;;2056:18:3;;3814:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3252:626;;;:::o;5841:445::-;-1:-1:-1;;;;;5928:13:1;;;5909:4;5928:13;;;:6;:13;;;;;;5909:4;;5928:13;:27;5925:355;;5970:10;6007:9;6002:192;6026:12;:19;6022:23;;6002:192;;;6093:5;-1:-1:-1;;;;;6074:24:1;:12;6087:1;6074:15;;;;;;-1:-1:-1;;;6074:15:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6074:15:1;:24;6070:110;;;6130:4;6122:12;;6156:5;;6070:110;6047:3;;;;:::i;:::-;;;;6002:192;;2785:461;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;2931:3:::1;2923:4;:11;;:26;;;;;2946:3;2938:4;:11;;2923:26;2902:147;;;::::0;-1:-1:-1;;;2902:147:1;;3008:2:3;2902:147:1::1;::::0;::::1;2990:21:3::0;3047:2;3027:18;;;3020:30;3086:34;3066:18;;;3059:62;3157:34;3137:18;;;3130:62;-1:-1:-1;;;3208:19:3;;;3201:41;3259:19;;2902:147:1::1;2980:304:3::0;2902:147:1::1;3080:11;3087:4:::0;3080;:11:::1;:::i;:::-;3096:3;3080:19;3059:123;;;::::0;-1:-1:-1;;;3059:123:1;;2582:2:3;3059:123:1::1;::::0;::::1;2564:21:3::0;2621:2;2601:18;;;2594:30;2660:34;2640:18;;;2633:62;2731:27;2711:18;;;2704:55;2776:19;;3059:123:1::1;2554:247:3::0;3059:123:1::1;3193:10;:17:::0;;;;3220:12:::1;:19:::0;2785:461::o;5447:388::-;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5535:20:1;;::::1;5567:1;5535:20:::0;;;:7:::1;:20;::::0;;;;;::::1;5526:67;;;;-1:-1:-1::0;;;5526:67:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5619:20:1;::::1;;::::0;;;:7:::1;:20;::::0;;;;5612:27;;-1:-1:-1;;;;;;5612:27:1::1;::::0;;5650:179:::1;5674:9;:16:::0;5670:20;::::1;5650:179;;;5731:11;-1:-1:-1::0;;;;;5715:27:1::1;:9;5725:1;5715:12;;;;;;-1:-1:-1::0;;;5715:12:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5715:12:1::1;:27;5711:108;;;5769:9;5779:1;5769:12;;;;;;-1:-1:-1::0;;;5769:12:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;5762:19:::0;;-1:-1:-1;;;;;;5762:19:1::1;::::0;;5650:179:::1;5447:388:::0;:::o;5711:108::-:1;5692:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5650:179;;;;5447:388:::0;:::o;1030:26::-;;;;;;;;;;;;5258:183;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1976:14:1;;::::1;2002:1;1976:14:::0;;;:7:::1;:14;::::0;;;;;5354:5;;1976:14:::1;:28:::0;1968:61:::1;;;::::0;-1:-1:-1;;;1968:61:1;;6240:2:3;1968:61:1::1;::::0;::::1;6222:21:3::0;6279:2;6259:18;;;6252:30;-1:-1:-1;;;6298:18:3;;;6291:50;6358:18;;1968:61:1::1;6212:170:3::0;1968:61:1::1;-1:-1:-1::0;5375:11:1::2;:23:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;5375:23:1;;::::2;-1:-1:-1::0;;;;;;5375:23:1;;::::2;::::0;::::2;::::0;;;-1:-1:-1;5408:18:1;;;:11:::2;5375:23;5408:18:::0;;;;:26;;;;::::2;;::::0;;5258:183::o;2330:188::-;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;2430:12:::1;:21:::0;;-1:-1:-1;;;;;2430:21:1;;::::1;-1:-1:-1::0;;;;;;2430:21:1;;::::1;;::::0;;;2461:13:::1;:23:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2494:10:::1;:17:::0;;;;;::::1;::::0;::::1;;::::0;;2330:188::o;6292:447::-;-1:-1:-1;;;;;6378:18:1;;;6359:4;6378:18;;;:11;:18;;;;;;6359:4;;6378:18;:32;6375:358;;6425:10;6462:9;6457:190;6481:11;:18;6477:22;;6457:190;;;6546:5;-1:-1:-1;;;;;6528:23:1;:11;6540:1;6528:14;;;;;;-1:-1:-1;;;6528:14:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6528:14:1;:23;6524:109;;;6583:4;6575:12;;6609:5;;6524:109;6501:3;;;;:::i;:::-;;;;6457:190;;996:28;;;;;;;;;;;;4076:396;1337:13;;-1:-1:-1;;;;;1337:13:1;1323:10;:27;1302:116;;;;-1:-1:-1;;;1302:116:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4162:20:1;;::::1;4194:1;4162:20:::0;;;:6:::1;:20;::::0;;;;;::::1;4153:67;;;;-1:-1:-1::0;;;4153:67:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4246:20:1;::::1;;::::0;;;:6:::1;:20;::::0;;;;4239:27;;-1:-1:-1;;;;;;4239:27:1::1;::::0;;4277:189:::1;4301:12;:19:::0;4297:23;::::1;4277:189;;;4364:12;-1:-1:-1::0;;;;;4345:31:1::1;:12;4358:1;4345:15;;;;;;-1:-1:-1::0;;;4345:15:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4345:15:1::1;:31;4341:115;;;4403:12;4416:1;4403:15;;;;;;-1:-1:-1::0;;;4403:15:1::1;;;;;;;;4341:115;4322:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4277:189;;2524:255:::0;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;2641:2:::1;2627:11;:16;2606:129;;;::::0;-1:-1:-1;;;2606:129:1;;4249:2:3;2606:129:1::1;::::0;::::1;4231:21:3::0;4288:2;4268:18;;;4261:30;4327:34;4307:18;;;4300:62;4398:34;4378:18;;;4371:62;-1:-1:-1;;;4449:19:3;;;4442:33;4492:19;;2606:129:1::1;4221:296:3::0;2606:129:1::1;2745:13;:27:::0;2524:255::o;4482:355::-;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1840:18:1;;::::1;1870:1;1840:18:::0;;;:11:::1;:18;::::0;;;;;4586:5;;1840:18:::1;:32:::0;1832:67:::1;;;::::0;-1:-1:-1;;;1832:67:1;;3898:2:3;1832:67:1::1;::::0;::::1;3880:21:3::0;3937:2;3917:18;;;3910:30;-1:-1:-1;;;3956:18:3;;;3949:52;4018:18;;1832:67:1::1;3870:172:3::0;1832:67:1::1;4615:14:::2;::::0;-1:-1:-1;;;;;4615:14:1::2;:28:::0;;:62:::2;;-1:-1:-1::0;4647:16:1::2;::::0;-1:-1:-1;;;;;4647:16:1::2;:30:::0;4615:62:::2;4607:153;;;::::0;-1:-1:-1;;;4607:153:1;;6993:2:3;4607:153:1::2;::::0;::::2;6975:21:3::0;7032:2;7012:18;;;7005:30;7071:34;7051:18;;;7044:62;7142:34;7122:18;;;7115:62;-1:-1:-1;;;7193:19:3;;;7186:45;7248:19;;4607:153:1::2;6965:308:3::0;3888:182:1;1337:13;;-1:-1:-1;;;;;1337:13:1;1323:10;:27;1302:116;;;;-1:-1:-1;;;1302:116:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1704:13:1;;::::1;1729:1;1704:13:::0;;;:6:::1;:13;::::0;;;;;3987:5;;1704:13:::1;:27:::0;1696:62:::1;;;::::0;-1:-1:-1;;;1696:62:1;;5135:2:3;1696:62:1::1;::::0;::::1;5117:21:3::0;5174:2;5154:18;;;5147:30;-1:-1:-1;;;5193:18:3;;;5186:52;5255:18;;1696:62:1::1;5107:172:3::0;1696:62:1::1;-1:-1:-1::0;4008:12:1::2;:24:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;4008:24:1;;::::2;-1:-1:-1::0;;;;;;4008:24:1;;::::2;::::0;::::2;::::0;;;-1:-1:-1;4042:13:1;;;:6:::2;4008:24;4042:13:::0;;;;:21;;;;::::2;;::::0;;3888:182::o;4843:405::-;1497:25;1511:10;1497:13;:25::i;:::-;:56;;;-1:-1:-1;1540:13:1;;-1:-1:-1;;;;;1540:13:1;1526:10;:27;1497:56;1476:145;;;;-1:-1:-1;;;1476:145:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;4934:24:1;;::::1;4970:1;4934:24:::0;;;:11:::1;:24;::::0;;;;;::::1;4925:71;;;;-1:-1:-1::0;;;4925:71:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5022:24:1;::::1;;::::0;;;:11:::1;:24;::::0;;;;5015:31;;-1:-1:-1;;;;;;5015:31:1::1;::::0;;5057:185:::1;5081:11;:18:::0;5077:22;::::1;5057:185;;;5142:11;-1:-1:-1::0;;;;;5124:29:1::1;:11;5136:1;5124:14;;;;;;-1:-1:-1::0;;;5124:14:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5124:14:1::1;:29;5120:112;;;5180:11;5192:1;5180:14;;;;;;-1:-1:-1::0;;;5180:14:1::1;;;;;;;;5120:112;5101:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5057:185;;14:173:3::0;82:20;;-1:-1:-1;;;;;131:31:3;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:3:o;393:344::-;470:6;478;486;539:2;527:9;518:7;514:23;510:32;507:2;;;560:6;552;545:22;507:2;588:29;607:9;588:29;:::i;:::-;578:39;;636:38;670:2;659:9;655:18;636:38;:::i;:::-;626:48;;693:38;727:2;716:9;712:18;693:38;:::i;:::-;683:48;;497:240;;;;;:::o;742:297::-;809:6;862:2;850:9;841:7;837:23;833:32;830:2;;;883:6;875;868:22;830:2;920:9;914:16;973:5;966:13;959:21;952:5;949:32;939:2;;1000:6;992;985:22;1044:190;1103:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:2;;;1177:6;1169;1162:22;1124:2;-1:-1:-1;1205:23:3;;1114:120;-1:-1:-1;1114:120:3:o;1239:194::-;1309:6;1362:2;1350:9;1341:7;1337:23;1333:32;1330:2;;;1383:6;1375;1368:22;1330:2;-1:-1:-1;1411:16:3;;1320:113;-1:-1:-1;1320:113:3:o;1438:258::-;1506:6;1514;1567:2;1555:9;1546:7;1542:23;1538:32;1535:2;;;1588:6;1580;1573:22;1535:2;-1:-1:-1;;1616:23:3;;;1686:2;1671:18;;;1658:32;;-1:-1:-1;1525:171:3:o;4522:406::-;4724:2;4706:21;;;4763:2;4743:18;;;4736:30;4802:34;4797:2;4782:18;;4775:62;-1:-1:-1;;;4868:2:3;4853:18;;4846:40;4918:3;4903:19;;4696:232::o;5690:343::-;5892:2;5874:21;;;5931:2;5911:18;;;5904:30;-1:-1:-1;;;5965:2:3;5950:18;;5943:49;6024:2;6009:18;;5864:169::o;7460:128::-;7500:3;7531:1;7527:6;7524:1;7521:13;7518:2;;;7537:18;;:::i;:::-;-1:-1:-1;7573:9:3;;7508:80::o;7593:217::-;7633:1;7659;7649:2;;-1:-1:-1;;;7684:31:3;;7738:4;7735:1;7728:15;7766:4;7691:1;7756:15;7649:2;-1:-1:-1;7795:9:3;;7639:171::o;7815:168::-;7855:7;7921:1;7917;7913:6;7909:14;7906:1;7903:21;7898:1;7891:9;7884:17;7880:45;7877:2;;;7928:18;;:::i;:::-;-1:-1:-1;7968:9:3;;7867:116::o;7988:135::-;8027:3;-1:-1:-1;;8048:17:3;;8045:2;;;8068:18;;:::i;:::-;-1:-1:-1;8115:1:3;8104:13;;8035:88::o;8128:127::-;8189:10;8184:3;8180:20;8177:1;8170:31;8220:4;8217:1;8210:15;8244:4;8241:1;8234:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1086600",
								"executionCost": "103652",
								"totalCost": "1190252"
							},
							"external": {
								"addBlacked(address)": "infinite",
								"addEventAdmin(address)": "infinite",
								"addSystemAdmin(address)": "64731",
								"admins(address)": "1315",
								"betFactory()": "1094",
								"blackList(uint256)": "2049",
								"blacked(address)": "1315",
								"contractOwner()": "1093",
								"deleteEventAdmin(address)": "infinite",
								"deleteSystemAdmin(address)": "infinite",
								"ecosystemAddress()": "1095",
								"ecosystemVig()": "1040",
								"eventAdmins(uint256)": "2092",
								"eventFactory()": "1137",
								"eventOwners(address)": "1337",
								"holdersAddress()": "1072",
								"holdersVig()": "1085",
								"isBlack(address)": "infinite",
								"isEventAdmin(address)": "infinite",
								"isSystemAdmin(address)": "infinite",
								"marketFactory()": "1117",
								"removeBlacked(address)": "infinite",
								"setAddresses(address,address,address)": "infinite",
								"setFactory(address,address,address)": "infinite",
								"setVigPercentage(uint256)": "infinite",
								"setVigPercentageShares(uint256,uint256)": "infinite",
								"shareBetEarnings()": "infinite",
								"stableCoin()": "1093",
								"systemAdmins(uint256)": "2050",
								"vigPercentage()": "1041"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 859,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 820,
									"end": 859,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 820,
									"end": 859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 820,
									"end": 859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 820,
									"end": 859,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 906,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 865,
									"end": 906,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 952,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 912,
									"end": 954,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 912,
									"end": 954,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1264,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1211,
									"end": 1265,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2053,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2077,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2103,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2103,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2077,
									"end": 2103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2103,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2103,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2103,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2077,
									"end": 2103,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 7182,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ebda3d275165ac436e2302484aa33266da1fed0f2f1cf8229007e87fe7ae92664736f6c63430008040033",
									".code": [
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "709EC8B4"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "CB146622"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "D6C1CA26"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "D6C1CA26"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "E3C0ED78"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "ED9F7EB9"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "F2210B2C"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "CB146622"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "CE606EE0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "D37E87FD"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "D5494869"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "9376B94C"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "9376B94C"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "992642E5"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "9B460AA9"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "A94FABC5"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "709EC8B4"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "80036B34"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "85D8349B"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "387440E6"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "4FB43199"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "4FB43199"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "64886880"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "681ADA8C"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "6FDBD3F6"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "387440E6"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "429B62E5"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "486D1E50"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "4D161324"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "DA4EE50"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "DA4EE50"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "2E1A9618"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "332DACCF"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "363BF964"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "26C1A4D"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "6A5CB3A"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "6AE7095"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 7182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 961,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 607,
											"end": 647,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 647,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 607,
											"end": 647,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 607,
											"end": 647,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 607,
											"end": 647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 773,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 736,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 736,
											"end": 773,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 736,
											"end": 773,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 563,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 563,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 563,
											"end": 601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 563,
											"end": 601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 563,
											"end": 601,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 813,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 779,
											"end": 813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 779,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 779,
											"end": 813,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 779,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 779,
											"end": 813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 779,
											"end": 813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 779,
											"end": 813,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2328,
											"end": 2369,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2283,
											"end": 2375,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 912,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 912,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 912,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 912,
											"end": 954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 912,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 912,
											"end": 954,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 912,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 912,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7424,
											"end": 7449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 912,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7379,
											"end": 7455,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 820,
											"end": 859,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 820,
											"end": 859,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 820,
											"end": 859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 859,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 694,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 694,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 730,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 694,
											"end": 730,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 694,
											"end": 730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 694,
											"end": 730,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1204,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 865,
											"end": 906,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 865,
											"end": 906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 865,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 865,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 865,
											"end": 906,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 906,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 653,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 653,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 653,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 653,
											"end": 687,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 653,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 653,
											"end": 687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 687,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 524,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 524,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 524,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 524,
											"end": 552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 524,
											"end": 552,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6833,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6854,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6823,
											"end": 7173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6869,
											"end": 6879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6925,
											"end": 6941,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6941,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 6991,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 7073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6966,
											"end": 7073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7027,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7015,
											"end": 7027,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 7073,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6966,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6901,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7107,
											"end": 7112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6823,
											"end": 7173,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6823,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7157,
											"end": 7162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6823,
											"end": 7173,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6823,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2241,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2252,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2288,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2317,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3370,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1898,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1820,
											"end": 1838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3329,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3400,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3404,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6601,
											"end": 6631,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6701,
											"name": "PUSH",
											"source": 3,
											"value": "626574206561726E696E6773206D757374206265206772656174657220746861"
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6640,
											"end": 6702,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6711,
											"end": 6744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6561,
											"end": 6786,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3382,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3488,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3477,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3542,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5564,
											"end": 5598,
											"name": "PUSH",
											"source": 3,
											"value": "686F6C6465727327207368617265206D75737420626520677265617465722074"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5537,
											"end": 5599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5608,
											"end": 5643,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5458,
											"end": 5685,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3518,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3630,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3620,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3619,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3688,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3569,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "65636F73797374656D207368617265206D757374206265206772656174657220"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3666,
											"end": 3685,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3463,
											"end": 3691,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 3662,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3786,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3770,
											"end": 3786,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2177,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3769,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 3742,
											"end": 3769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3742,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3842,
											"end": 3856,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2168,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2177,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3878,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5841,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5934,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5941,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5955,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5925,
											"end": 6280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6026,
											"end": 6045,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6045,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 6087,
											"end": 6088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6098,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6070,
											"end": 6180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6180,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6070,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6002,
											"end": 6194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2934,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2949,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2938,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2949,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2923,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 3,
											"value": "4A"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "5669672070657263656E746167657320736861726573206D7573742062652065"
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "787072657373656420696E206120203020746F2031303020726174696F2E2045"
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78616D706C653A20333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3278,
											"name": "PUSH",
											"source": 3,
											"value": "A4"
										},
										{
											"begin": 3259,
											"end": 3278,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2980,
											"end": 3284,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2902,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3087,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3080,
											"end": 3091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3080,
											"end": 3091,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3080,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3099,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2584,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2624,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2694,
											"name": "PUSH",
											"source": 3,
											"value": "5468652073756D206F6620616C6C205669672070657263656E74616765207368"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2695,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "61726573206D75737420626520657175616C20746F2031303000000000000000"
										},
										{
											"begin": 2711,
											"end": 2729,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2711,
											"end": 2729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2554,
											"end": 2801,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3059,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3220,
											"end": 3239,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 3246,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5542,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5526,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5639,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5612,
											"end": 5639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5639,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 5674,
											"end": 5690,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5715,
											"end": 5742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5724,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5819,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5711,
											"end": 5819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5778,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5781,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5762,
											"end": 5781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5781,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5711,
											"end": 5819,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5711,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6222,
											"end": 6243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6281,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6259,
											"end": 6277,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6259,
											"end": 6277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B1C9958591E481A5B88189B1858DADB1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6298,
											"end": 6316,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6291,
											"end": 6341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6212,
											"end": 6382,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1968,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5386,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5419,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5375,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5434,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2442,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2451,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2474,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2484,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2511,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2518,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6292,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6389,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6396,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6410,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6375,
											"end": 6733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6481,
											"end": 6492,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6551,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6540,
											"end": 6541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6542,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6551,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6633,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6524,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6583,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6575,
											"end": 6587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6609,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6524,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6501,
											"end": 6504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6457,
											"end": 6647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4076,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4153,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4266,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 4266,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4266,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4313,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4301,
											"end": 4320,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4320,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4376,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4345,
											"end": 4360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4376,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4341,
											"end": 4456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4418,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4456,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4341,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4277,
											"end": 4466,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2643,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2643,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4252,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4261,
											"end": 4291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4361,
											"name": "PUSH",
											"source": 3,
											"value": "5669672070657263656E74616765206D75737420626520657870726573736564"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4432,
											"name": "PUSH",
											"source": 3,
											"value": "20696E203020746F2031302070657263656E746167652E204578616D706C653A"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4371,
											"end": 4433,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "101B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4449,
											"end": 4468,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4449,
											"end": 4468,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4449,
											"end": 4468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4511,
											"name": "PUSH",
											"source": 3,
											"value": "A4"
										},
										{
											"begin": 4492,
											"end": 4511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4221,
											"end": 4517,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2606,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2745,
											"end": 2772,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2779,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4482,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3901,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3937,
											"end": 3939,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C9030B71032BB32B73A1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3949,
											"end": 4001,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3870,
											"end": 4042,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1832,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4629,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4615,
											"end": 4629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4615,
											"end": 4629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 4663,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4647,
											"end": 4663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 4663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4615,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6975,
											"end": 6996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7032,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "4E"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7005,
											"end": 7035,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7071,
											"end": 7105,
											"name": "PUSH",
											"source": 3,
											"value": "796F75206D7573742073657420686F6C6465727320616E642065636F73797374"
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7044,
											"end": 7106,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7142,
											"end": 7176,
											"name": "PUSH",
											"source": 3,
											"value": "6D654164647265737320616464726573736573206265666F726520616464696E"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67206576656E74206F776E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7186,
											"end": 7231,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7267,
											"name": "PUSH",
											"source": 3,
											"value": "A4"
										},
										{
											"begin": 7248,
											"end": 7267,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6965,
											"end": 7273,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1350,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1302,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 3992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 3992,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5138,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5174,
											"end": 5176,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5154,
											"end": 5172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5147,
											"end": 5177,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C90309039BCB9BA32B69030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5193,
											"end": 5211,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5193,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5193,
											"end": 5211,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5238,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5107,
											"end": 5279,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1696,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4048,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4055,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4070,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4843,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1511,
											"end": 1521,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1497,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1540,
											"end": 1553,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1536,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1553,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1497,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 1476,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4945,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4925,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5046,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5046,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5092,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 5081,
											"end": 5099,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5099,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5124,
											"end": 5153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5135,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 5136,
											"end": 5137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5124,
											"end": 5138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5153,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5120,
											"end": 5232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5191,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 5192,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5120,
											"end": 5232,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5120,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5057,
											"end": 5242,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 737,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 393,
											"end": 737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 541,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 527,
											"end": 536,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 518,
											"end": 525,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 514,
											"end": 537,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 507,
											"end": 509,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 507,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 507,
											"end": 509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 567,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 507,
											"end": 509,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 507,
											"end": 509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 588,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 607,
											"end": 616,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 588,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 617,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 578,
											"end": 617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 636,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 655,
											"end": 673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 636,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 626,
											"end": 674,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 626,
											"end": 674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 693,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 693,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 693,
											"end": 731,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 731,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 693,
											"end": 731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 683,
											"end": 731,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 683,
											"end": 731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 737,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 497,
											"end": 737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 737,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 497,
											"end": 737,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 737,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 497,
											"end": 737,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 742,
											"end": 1039,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 742,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 809,
											"end": 815,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 848,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 837,
											"end": 860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 833,
											"end": 865,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 830,
											"end": 832,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 830,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 830,
											"end": 832,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 868,
											"end": 890,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 830,
											"end": 832,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 830,
											"end": 832,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 914,
											"end": 930,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 966,
											"end": 979,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 959,
											"end": 980,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 952,
											"end": 957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 939,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 939,
											"end": 941,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 992,
											"end": 998,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1007,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1234,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1044,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1103,
											"end": 1109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1175,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1228,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1234,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1433,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1239,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1365,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1320,
											"end": 1433,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1438,
											"end": 1696,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1438,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1569,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1525,
											"end": 1696,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4522,
											"end": 4928,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4522,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4706,
											"end": 4727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4706,
											"end": 4727,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4763,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4736,
											"end": 4766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4836,
											"name": "PUSH",
											"source": 3,
											"value": "596F752068617665206E6F2070726976696C65676520746F2072756E20746869"
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4775,
											"end": 4837,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4868,
											"end": 4870,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4846,
											"end": 4886,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4918,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4696,
											"end": 4928,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5690,
											"end": 6033,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 5690,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5892,
											"end": 5894,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 5934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21032BB32B73A1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5992,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6009,
											"end": 6027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6009,
											"end": 6027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5864,
											"end": 6033,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7460,
											"end": 7588,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7460,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7532,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7527,
											"end": 7533,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7534,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 7537,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7588,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7593,
											"end": 7810,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7593,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7684,
											"end": 7715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7684,
											"end": 7715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7738,
											"end": 7742,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7728,
											"end": 7743,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7770,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7771,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 7649,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7639,
											"end": 7810,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7815,
											"end": 7983,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7815,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7855,
											"end": 7862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 7918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7909,
											"end": 7923,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7924,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7891,
											"end": 7900,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7901,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7880,
											"end": 7925,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 7877,
											"end": 7879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 7928,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7983,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7988,
											"end": 8123,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 7988,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8045,
											"end": 8047,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8045,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8045,
											"end": 8047,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8068,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8115,
											"end": 8116,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8104,
											"end": 8117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8104,
											"end": 8117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8123,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8128,
											"end": 8255,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 8128,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8189,
											"end": 8199,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 8184,
											"end": 8187,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8180,
											"end": 8200,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8170,
											"end": 8201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8217,
											"end": 8218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8210,
											"end": 8225,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8244,
											"end": 8248,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8249,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBlacked(address)": "9b460aa9",
							"addEventAdmin(address)": "e3c0ed78",
							"addSystemAdmin(address)": "ed9f7eb9",
							"admins(address)": "429b62e5",
							"betFactory()": "2e1a9618",
							"blackList(uint256)": "709ec8b4",
							"blacked(address)": "80036b34",
							"contractOwner()": "ce606ee0",
							"deleteEventAdmin(address)": "f2210b2c",
							"deleteSystemAdmin(address)": "d5494869",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventAdmins(uint256)": "d37e87fd",
							"eventFactory()": "6fdbd3f6",
							"eventOwners(address)": "85d8349b",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"removeBlacked(address)": "681ada8c",
							"setAddresses(address,address,address)": "363bf964",
							"setFactory(address,address,address)": "a94fabc5",
							"setVigPercentage(uint256)": "d6c1ca26",
							"setVigPercentageShares(uint256,uint256)": "64886880",
							"shareBetEarnings()": "4d161324",
							"stableCoin()": "992642e5",
							"systemAdmins(uint256)": "026c1a4d",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addBlacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addEventAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addSystemAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacked\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"}],\"name\":\"deleteEventAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_systemAdmin\",\"type\":\"address\"}],\"name\":\"deleteSystemAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"eventOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"}],\"name\":\"removeBlacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holdAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ecoAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"scAddr\",\"type\":\"address\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_event\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bet\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setVigPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hVig\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eVig\",\"type\":\"uint256\"}],\"name\":\"setVigPercentageShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"systemAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Okoro\",\"custom:security\":\"contact okoro.victor@web3bets.io\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Web3Bets Contract for FixedOdds decentralized betting exchange\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains Web3Bets ecosystem's variables and functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3BetsFO.sol\":\"Web3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/Web3BetsFO.sol\":{\"keccak256\":\"0x0ab2af21cce86e2ac7b4af5a494cdf77c2dcea6a8915602364c2af50729b500a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://205a2f9cd2ccc40eebcb770b3fccbd890f0edab1842be0f3da8ad1c1ce37924a\",\"dweb:/ipfs/QmZipM46WpktkN6u4zvzk75UzLXZDvYjQTQwXpioVcJ2cA\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0xaf87c66a9d2d79e426033f45ffcc292eb85edbab6e452091cc06e51c5d8d2566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f139dfe3f8787c37b6b4ad51c80b88df863d16faf52fe362fbe84b505fcda7d1\",\"dweb:/ipfs/QmSm6X2LA51E6A8UtaCkc6VdNMt1bAiGWTCohDgsbhoTLx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 86,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "contractOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 89,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 92,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 95,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "stableCoin",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 98,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventFactory",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 101,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "marketFactory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 104,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "betFactory",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 108,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersVig",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 112,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemVig",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 116,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "vigPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 119,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "systemAdmins",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 122,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventAdmins",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 125,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "blackList",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 129,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "admins",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 133,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventOwners",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 137,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "blacked",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 143,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "_stableCoinWrapper",
								"offset": 0,
								"slot": "16",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains Web3Bets ecosystem's variables and functions",
						"version": 1
					}
				}
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"IWeb3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"betFactory()": "2e1a9618",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventFactory()": "6fdbd3f6",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"shareBetEarnings()": "4d161324",
							"stableCoin()": "992642e5",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IWeb3BetsFO.sol\":\"IWeb3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0xaf87c66a9d2d79e426033f45ffcc292eb85edbab6e452091cc06e51c5d8d2566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f139dfe3f8787c37b6b4ad51c80b88df863d16faf52fe362fbe84b505fcda7d1\",\"dweb:/ipfs/QmSm6X2LA51E6A8UtaCkc6VdNMt1bAiGWTCohDgsbhoTLx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/Web3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/Web3BetsFO.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IWeb3BetsFO": [
							879
						],
						"Web3BetsFO": [
							807
						]
					},
					"id": 808,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
							"file": "./interface/IWeb3BetsFO.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 880,
							"src": "58:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 78,
							"src": "96:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "IWeb3BetsFO",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 879,
										"src": "505:11:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "505:11:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "154:219:1",
								"text": "@author Victor Okoro\n @title Web3Bets Contract for FixedOdds decentralized betting exchange\n @notice Contains Web3Bets ecosystem's variables and functions\n @custom:security contact okoro.victor@web3bets.io"
							},
							"fullyImplemented": true,
							"id": 807,
							"linearizedBaseContracts": [
								807,
								879
							],
							"name": "Web3BetsFO",
							"nameLocation": "491:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ce606ee0",
									"id": 86,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "539:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "524:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "524:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										819
									],
									"constant": false,
									"functionSelector": "0da4ee50",
									"id": 89,
									"mutability": "mutable",
									"name": "holdersAddress",
									"nameLocation": "587:14:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 88,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "578:8:1"
									},
									"scope": 807,
									"src": "563:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 87,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "563:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										814
									],
									"constant": false,
									"functionSelector": "06a5cb3a",
									"id": 92,
									"mutability": "mutable",
									"name": "ecosystemAddress",
									"nameLocation": "631:16:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "622:8:1"
									},
									"scope": 807,
									"src": "607:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 90,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										824
									],
									"constant": false,
									"functionSelector": "992642e5",
									"id": 95,
									"mutability": "mutable",
									"name": "stableCoin",
									"nameLocation": "677:10:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "668:8:1"
									},
									"scope": 807,
									"src": "653:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 93,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "653:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										829
									],
									"constant": false,
									"functionSelector": "6fdbd3f6",
									"id": 98,
									"mutability": "mutable",
									"name": "eventFactory",
									"nameLocation": "718:12:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "709:8:1"
									},
									"scope": 807,
									"src": "694:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 96,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "694:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"constant": false,
									"functionSelector": "06ae7095",
									"id": 101,
									"mutability": "mutable",
									"name": "marketFactory",
									"nameLocation": "760:13:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "751:8:1"
									},
									"scope": 807,
									"src": "736:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 99,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "736:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										839
									],
									"constant": false,
									"functionSelector": "2e1a9618",
									"id": 104,
									"mutability": "mutable",
									"name": "betFactory",
									"nameLocation": "803:10:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "794:8:1"
									},
									"scope": 807,
									"src": "779:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 102,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "779:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"constant": false,
									"functionSelector": "486d1e50",
									"id": 108,
									"mutability": "mutable",
									"name": "holdersVig",
									"nameLocation": "844:10:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 106,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "835:8:1"
									},
									"scope": 807,
									"src": "820:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "820:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 107,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "857:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										849
									],
									"constant": false,
									"functionSelector": "9376b94c",
									"id": 112,
									"mutability": "mutable",
									"name": "ecosystemVig",
									"nameLocation": "889:12:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "880:8:1"
									},
									"scope": 807,
									"src": "865:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 109,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "865:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "904:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"constant": false,
									"functionSelector": "387440e6",
									"id": 116,
									"mutability": "mutable",
									"name": "vigPercentage",
									"nameLocation": "936:13:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 114,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "927:8:1"
									},
									"scope": 807,
									"src": "912:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "912:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 115,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "952:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "026c1a4d",
									"id": 119,
									"mutability": "mutable",
									"name": "systemAdmins",
									"nameLocation": "978:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "961:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 118,
										"nodeType": "ArrayTypeName",
										"src": "961:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d37e87fd",
									"id": 122,
									"mutability": "mutable",
									"name": "eventAdmins",
									"nameLocation": "1013:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "996:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "996:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 121,
										"nodeType": "ArrayTypeName",
										"src": "996:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "709ec8b4",
									"id": 125,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "1047:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1030:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 123,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1030:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 124,
										"nodeType": "ArrayTypeName",
										"src": "1030:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "429b62e5",
									"id": 129,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1098:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1063:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 128,
										"keyType": {
											"id": 126,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1071:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1063:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85d8349b",
									"id": 133,
									"mutability": "mutable",
									"name": "eventOwners",
									"nameLocation": "1145:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1110:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 132,
										"keyType": {
											"id": 130,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1118:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1110:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1129:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80036b34",
									"id": 137,
									"mutability": "mutable",
									"name": "blacked",
									"nameLocation": "1197:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1162:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 136,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1170:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1162:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 135,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1181:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "_stableCoinWrapper",
									"nameLocation": "1226:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1211:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 139,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 138,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1211:6:1"
										},
										"referencedDeclaration": 77,
										"src": "1211:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 141,
												"name": "stableCoin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 95,
												"src": "1254:10:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 140,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "1247:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 142,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1247:18:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1292:144:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 146,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1323:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1323:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 148,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1337:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1364:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1302:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1302:116:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1302:116:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1428:1:1"
											}
										]
									},
									"id": 155,
									"name": "onlyUser",
									"nameLocation": "1281:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:2:1"
									},
									"src": "1272:164:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1466:173:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 159,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1511:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1511:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "isSystemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "1497:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1497:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 162,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1526:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1526:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 164,
																	"name": "contractOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "1540:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1526:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1497:56:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1567:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1476:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:145:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1476:145:1"
											},
											{
												"id": 170,
												"nodeType": "PlaceholderStatement",
												"src": "1631:1:1"
											}
										]
									},
									"id": 172,
									"name": "onlySystemAdmin",
									"nameLocation": "1450:15:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1466:0:1"
									},
									"src": "1441:198:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1686:90:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 177,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1704:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 179,
																"indexExpression": {
																	"id": 178,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "1711:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1704:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1729:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 180,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1721:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1721:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1704:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920612073797374656d2061646d696e",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1733:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511",
																"typeString": "literal_string \"already a system admin\""
															},
															"value": "already a system admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511",
																"typeString": "literal_string \"already a system admin\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1696:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1696:62:1"
											},
											{
												"id": 188,
												"nodeType": "PlaceholderStatement",
												"src": "1768:1:1"
											}
										]
									},
									"id": 190,
									"name": "uniqueSystemAdmin",
									"nameLocation": "1653:17:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1679:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1671:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1670:15:1"
									},
									"src": "1644:132:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1822:95:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 195,
																	"name": "eventOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "1840:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 197,
																"indexExpression": {
																	"id": 196,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1852:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1840:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1870:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1862:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 198,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1862:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1862:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1840:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920616e206576656e742061646d696e",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1874:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc",
																"typeString": "literal_string \"already an event admin\""
															},
															"value": "already an event admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc",
																"typeString": "literal_string \"already an event admin\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1832:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1832:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1832:67:1"
											},
											{
												"id": 206,
												"nodeType": "PlaceholderStatement",
												"src": "1909:1:1"
											}
										]
									},
									"id": 208,
									"name": "uniqueEventAdmin",
									"nameLocation": "1790:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1815:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1807:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:15:1"
									},
									"src": "1781:136:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1958:89:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 213,
																	"name": "blacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1976:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 215,
																"indexExpression": {
																	"id": 214,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1984:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1976:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2002:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1994:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1994:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1994:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1976:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920696e20626c61636b6c697374",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355",
																"typeString": "literal_string \"already in blacklist\""
															},
															"value": "already in blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355",
																"typeString": "literal_string \"already in blacklist\""
															}
														],
														"id": 212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1968:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1968:61:1"
											},
											{
												"id": 224,
												"nodeType": "PlaceholderStatement",
												"src": "2039:1:1"
											}
										]
									},
									"id": 226,
									"name": "uniqueBlack",
									"nameLocation": "1931:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1951:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1943:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:15:1"
									},
									"src": "1922:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "2067:43:1",
										"statements": [
											{
												"expression": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2077:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 230,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2093:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2093:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2077:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2077:26:1"
											}
										]
									},
									"id": 235,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:2:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:0:1"
									},
									"scope": 807,
									"src": "2053:57:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2217:107:1",
										"statements": [
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 246,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "2227:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 247,
														"name": "holdAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2244:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2227:25:1"
											},
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 250,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2262:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 251,
														"name": "ecoAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2281:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2262:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "2262:26:1"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2298:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 255,
														"name": "scAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2311:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2298:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2298:19:1"
											}
										]
									},
									"functionSelector": "363bf964",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 243,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "2201:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2201:15:1"
										}
									],
									"name": "setAddresses",
									"nameLocation": "2129:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "holdAddr",
												"nameLocation": "2150:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2142:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2142:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "ecoAddr",
												"nameLocation": "2168:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2160:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "scAddr",
												"nameLocation": "2184:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2176:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2141:50:1"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2217:0:1"
									},
									"scope": 807,
									"src": "2120:204:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "2420:98:1",
										"statements": [
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 270,
														"name": "eventFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2430:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 271,
														"name": "_event",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2445:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2430:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "2430:21:1"
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "marketFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2461:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 275,
														"name": "_market",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2461:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "2461:23:1"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "betFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2494:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 279,
														"name": "_bet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2507:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2494:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "2494:17:1"
											}
										]
									},
									"functionSelector": "a94fabc5",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "2404:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2404:15:1"
										}
									],
									"name": "setFactory",
									"nameLocation": "2339:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "_event",
												"nameLocation": "2358:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2350:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_market",
												"nameLocation": "2373:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2365:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_bet",
												"nameLocation": "2389:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "2381:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:45:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:1"
									},
									"scope": 807,
									"src": "2330:188:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2596:183:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "_percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "2627:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "2627:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e74616765206d7573742062652065787072657373656420696e203020746f2031302070657263656e746167652e204578616d706c653a2036",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2657:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															},
															"value": "Vig percentage must be expressed in 0 to 10 percentage. Example: 6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2606:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2606:129:1"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "vigPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "2745:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "2761:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2745:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "2745:27:1"
											}
										]
									},
									"functionSelector": "d6c1ca26",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 287,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "2580:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2580:15:1"
										}
									],
									"name": "setVigPercentage",
									"nameLocation": "2533:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "2558:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2550:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:21:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:1"
									},
									"scope": 807,
									"src": "2524:255:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "2892:354:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 312,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "2923:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2931:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2923:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "2938:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2946:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2938:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2923:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e746167657320736861726573206d7573742062652065787072657373656420696e206120203020746f2031303020726174696f2e204578616d706c653a203330",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2963:76:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															},
															"value": "Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2902:147:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "2902:147:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 323,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "3080:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 324,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3087:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3080:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313030",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3096:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3080:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652073756d206f6620616c6c205669672070657263656e7461676520736861726573206d75737420626520657175616c20746f20313030",
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3113:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															},
															"value": "The sum of all Vig percentage shares must be equal to 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3059:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:123:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "3059:123:1"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "holdersVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "3193:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "hVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "3206:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3193:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3193:17:1"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 335,
														"name": "ecosystemVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3220:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 336,
														"name": "eVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "3235:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3220:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "3220:19:1"
											}
										]
									},
									"functionSelector": "64886880",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 309,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 308,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "2876:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2876:15:1"
										}
									],
									"name": "setVigPercentageShares",
									"nameLocation": "2794:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "hVig",
												"nameLocation": "2834:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2826:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "eVig",
												"nameLocation": "2856:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2848:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:50:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:0:1"
									},
									"scope": 807,
									"src": "2785:461:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										857
									],
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "3298:580:1",
										"statements": [
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "_vigAmount",
														"nameLocation": "3316:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "3308:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3308:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 350,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3366:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Web3BetsFO_$807",
																		"typeString": "contract Web3BetsFO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Web3BetsFO_$807",
																		"typeString": "contract Web3BetsFO"
																	}
																],
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3358:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3358:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3358:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 346,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3329:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3329:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3329:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3308:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "_vigAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "3390:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3403:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3390:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626574206561726e696e6773206d7573742062652067726561746572207468616e2030",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3406:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															},
															"value": "bet earnings must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "3382:62:1"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "holdersShare",
														"nameLocation": "3462:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "3454:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 363,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "3478:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 364,
																	"name": "holdersVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "3491:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3478:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 366,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3477:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3505:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3477:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3454:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "holdersShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "3526:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3541:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3526:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686f6c6465727327207368617265206d7573742062652067726561746572207468616e2030",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3544:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															},
															"value": "holders' share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "3518:66:1"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "ecosystemShare",
														"nameLocation": "3602:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "3594:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3594:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 379,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "3620:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 380,
																	"name": "ecosystemVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "3633:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3620:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 382,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3619:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3649:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3619:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3594:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 387,
																"name": "ecosystemShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "3670:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3687:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3670:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "65636f73797374656d207368617265206d7573742062652067726561746572207468616e2030",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3690:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															},
															"value": "ecosystem share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3662:69:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "ecosystemAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "3770:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "ecosystemShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3788:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 393,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3742:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3742:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3742:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "3742:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "holdersAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "3842:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "holdersShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3858:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 400,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "3814:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3814:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3814:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "3814:57:1"
											}
										]
									},
									"functionSelector": "4d161324",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "3261:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 342,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3289:8:1"
									},
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:2:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3298:0:1"
									},
									"scope": 807,
									"src": "3252:626:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3998:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4026:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 418,
															"name": "systemAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4008:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4008:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4008:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "4008:24:1"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 424,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4042:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 426,
														"indexExpression": {
															"id": 425,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4049:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4042:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4058:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4042:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "4042:21:1"
											}
										]
									},
									"functionSelector": "ed9f7eb9",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 412,
												"name": "onlyUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "3952:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3952:8:1"
										},
										{
											"arguments": [
												{
													"id": 415,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 410,
													"src": "3987:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 414,
												"name": "uniqueSystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 190,
												"src": "3969:17:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3969:24:1"
										}
									],
									"name": "addSystemAdmin",
									"nameLocation": "3897:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "3920:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3912:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3912:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3911:15:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3998:0:1"
									},
									"scope": 807,
									"src": "3888:182:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4143:329:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 439,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "4162:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "_systemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "4169:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4162:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4194:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4186:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 442,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4186:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4186:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4162:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4198:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4153:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4153:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "4153:67:1"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4239:27:1",
													"subExpression": {
														"baseExpression": {
															"id": 450,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4246:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 452,
														"indexExpression": {
															"id": 451,
															"name": "_systemAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "4253:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4246:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "4239:27:1"
											},
											{
												"body": {
													"id": 479,
													"nodeType": "Block",
													"src": "4327:139:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 466,
																		"name": "systemAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "4345:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 468,
																	"indexExpression": {
																		"id": 467,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "4358:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4345:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 469,
																	"name": "_systemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "4364:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4345:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 478,
															"nodeType": "IfStatement",
															"src": "4341:115:1",
															"trueBody": {
																"id": 477,
																"nodeType": "Block",
																"src": "4378:78:1",
																"statements": [
																	{
																		"expression": {
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "4396:22:1",
																			"subExpression": {
																				"baseExpression": {
																					"id": 471,
																					"name": "systemAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "4403:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 473,
																				"indexExpression": {
																					"id": 472,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 456,
																					"src": "4416:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4403:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 475,
																		"nodeType": "ExpressionStatement",
																		"src": "4396:22:1"
																	},
																	{
																		"id": 476,
																		"nodeType": "Break",
																		"src": "4436:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "4297:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 460,
															"name": "systemAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4301:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4301:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4297:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"initializationExpression": {
													"assignments": [
														456
													],
													"declarations": [
														{
															"constant": false,
															"id": 456,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4290:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 480,
															"src": "4282:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 455,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4282:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 458,
													"initialValue": {
														"hexValue": "30",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4294:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4282:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4322:3:1",
														"subExpression": {
															"id": 463,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4322:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 465,
													"nodeType": "ExpressionStatement",
													"src": "4322:3:1"
												},
												"nodeType": "ForStatement",
												"src": "4277:189:1"
											}
										]
									},
									"functionSelector": "d5494869",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 436,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 435,
												"name": "onlyUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "4134:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4134:8:1"
										}
									],
									"name": "deleteSystemAdmin",
									"nameLocation": "4085:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "_systemAdmin",
												"nameLocation": "4111:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4103:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:22:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:0:1"
									},
									"scope": 807,
									"src": "4076:396:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "4597:240:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 493,
																	"name": "holdersAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "4615:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4641:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 494,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4633:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4633:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4615:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 499,
																	"name": "ecosystemAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "4647:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4675:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4667:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4667:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4667:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4647:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4615:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206d7573742073657420686f6c6465727320616e642065636f737973746d654164647265737320616464726573736573206265666f726520616464696e67206576656e74206f776e657273",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4679:80:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															},
															"value": "you must set holders and ecosystmeAddress addresses before adding event owners"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4607:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:153:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "4607:153:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "4788:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 509,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "4771:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4771:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4771:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "4771:23:1"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 515,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4804:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 517,
														"indexExpression": {
															"id": 516,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "4816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4804:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 518,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "4825:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4804:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "4804:26:1"
											}
										]
									},
									"functionSelector": "e3c0ed78",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 487,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 486,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "4545:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4545:15:1"
										},
										{
											"arguments": [
												{
													"id": 489,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 484,
													"src": "4586:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 488,
												"name": "uniqueEventAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 208,
												"src": "4569:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4569:23:1"
										}
									],
									"name": "addEventAdmin",
									"nameLocation": "4491:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "4513:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "4505:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4504:15:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4597:0:1"
									},
									"scope": 807,
									"src": "4482:355:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4915:333:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 530,
																	"name": "eventOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "4934:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 532,
																"indexExpression": {
																	"id": 531,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "4946:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4934:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4970:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4962:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4962:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4962:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4934:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4974:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4925:71:1"
											},
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5015:31:1",
													"subExpression": {
														"baseExpression": {
															"id": 541,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "5022:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 543,
														"indexExpression": {
															"id": 542,
															"name": "_eventOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5034:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5022:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "5015:31:1"
											},
											{
												"body": {
													"id": 570,
													"nodeType": "Block",
													"src": "5106:136:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 557,
																		"name": "eventAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "5124:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 559,
																	"indexExpression": {
																		"id": 558,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "5136:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5124:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 560,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5124:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 569,
															"nodeType": "IfStatement",
															"src": "5120:112:1",
															"trueBody": {
																"id": 568,
																"nodeType": "Block",
																"src": "5155:77:1",
																"statements": [
																	{
																		"expression": {
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "5173:21:1",
																			"subExpression": {
																				"baseExpression": {
																					"id": 562,
																					"name": "eventAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 122,
																					"src": "5180:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 564,
																				"indexExpression": {
																					"id": 563,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 547,
																					"src": "5192:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5180:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 566,
																		"nodeType": "ExpressionStatement",
																		"src": "5173:21:1"
																	},
																	{
																		"id": 567,
																		"nodeType": "Break",
																		"src": "5212:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "5077:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 551,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "5081:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5077:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"initializationExpression": {
													"assignments": [
														547
													],
													"declarations": [
														{
															"constant": false,
															"id": 547,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5070:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 571,
															"src": "5062:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 546,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5062:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 549,
													"initialValue": {
														"hexValue": "30",
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5074:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5062:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5101:3:1",
														"subExpression": {
															"id": 554,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "5101:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 556,
													"nodeType": "ExpressionStatement",
													"src": "5101:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5057:185:1"
											}
										]
									},
									"functionSelector": "f2210b2c",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 527,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 526,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "4899:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4899:15:1"
										}
									],
									"name": "deleteEventAdmin",
									"nameLocation": "4852:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_eventOwner",
												"nameLocation": "4877:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4869:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:21:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4915:0:1"
									},
									"scope": 807,
									"src": "4843:405:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "5365:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 586,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5392:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 583,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "5375:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5375:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "5375:23:1"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 589,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "5408:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 591,
														"indexExpression": {
															"id": 590,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5420:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5408:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 592,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5429:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5408:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "5408:26:1"
											}
										]
									},
									"functionSelector": "9b460aa9",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 577,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "5318:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5318:15:1"
										},
										{
											"arguments": [
												{
													"id": 580,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 575,
													"src": "5354:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "uniqueBlack",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 226,
												"src": "5342:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5342:18:1"
										}
									],
									"name": "addBlacked",
									"nameLocation": "5267:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5286:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "5278:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:15:1"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5365:0:1"
									},
									"scope": 807,
									"src": "5258:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "5516:319:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 604,
																	"name": "blacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "5535:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "5543:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5535:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5567:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5559:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 607,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5559:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5559:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5535:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5571:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5526:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "5526:67:1"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5612:27:1",
													"subExpression": {
														"baseExpression": {
															"id": 615,
															"name": "blacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5619:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 617,
														"indexExpression": {
															"id": 616,
															"name": "_eventOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5627:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5619:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "5612:27:1"
											},
											{
												"body": {
													"id": 644,
													"nodeType": "Block",
													"src": "5697:132:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 631,
																		"name": "blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "5715:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 633,
																	"indexExpression": {
																		"id": 632,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "5725:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5715:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 634,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "5731:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5715:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 643,
															"nodeType": "IfStatement",
															"src": "5711:108:1",
															"trueBody": {
																"id": 642,
																"nodeType": "Block",
																"src": "5744:75:1",
																"statements": [
																	{
																		"expression": {
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "5762:19:1",
																			"subExpression": {
																				"baseExpression": {
																					"id": 636,
																					"name": "blackList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 125,
																					"src": "5769:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 638,
																				"indexExpression": {
																					"id": 637,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 621,
																					"src": "5779:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5769:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 640,
																		"nodeType": "ExpressionStatement",
																		"src": "5762:19:1"
																	},
																	{
																		"id": 641,
																		"nodeType": "Break",
																		"src": "5799:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "5670:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 625,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "5674:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5670:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 645,
												"initializationExpression": {
													"assignments": [
														621
													],
													"declarations": [
														{
															"constant": false,
															"id": 621,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5663:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 645,
															"src": "5655:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 620,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5655:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 623,
													"initialValue": {
														"hexValue": "30",
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5667:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5655:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5692:3:1",
														"subExpression": {
															"id": 628,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "5692:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 630,
													"nodeType": "ExpressionStatement",
													"src": "5692:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5650:179:1"
											}
										]
									},
									"functionSelector": "681ada8c",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 600,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 172,
												"src": "5500:15:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5500:15:1"
										}
									],
									"name": "removeBlacked",
									"nameLocation": "5456:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "_eventOwner",
												"nameLocation": "5478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "5470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5469:21:1"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5516:0:1"
									},
									"scope": 807,
									"src": "5447:388:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "5915:371:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 655,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "5928:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5935:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5928:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5953:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5945:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 658,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5945:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5945:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5928:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6243:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6264:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 654,
															"id": 696,
															"nodeType": "Return",
															"src": "6257:12:1"
														}
													]
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "5925:355:1",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "5956:274:1",
													"statements": [
														{
															"assignments": [
																664
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 664,
																	"mutability": "mutable",
																	"name": "found",
																	"nameLocation": "5975:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 694,
																	"src": "5970:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 663,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5970:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 666,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5983:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5970:18:1"
														},
														{
															"body": {
																"id": 690,
																"nodeType": "Block",
																"src": "6052:142:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 678,
																					"name": "systemAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "6074:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 680,
																				"indexExpression": {
																					"id": 679,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "6087:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6074:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 681,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6093:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6074:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 689,
																		"nodeType": "IfStatement",
																		"src": "6070:110:1",
																		"trueBody": {
																			"id": 688,
																			"nodeType": "Block",
																			"src": "6100:80:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 685,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 683,
																							"name": "found",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 664,
																							"src": "6122:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 684,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6130:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "6122:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 686,
																					"nodeType": "ExpressionStatement",
																					"src": "6122:12:1"
																				},
																				{
																					"id": 687,
																					"nodeType": "Break",
																					"src": "6156:5:1"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 671,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "6022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 672,
																		"name": "systemAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "6026:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6026:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6022:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 691,
															"initializationExpression": {
																"assignments": [
																	668
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 668,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6015:1:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 691,
																		"src": "6007:9:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 667,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6007:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 670,
																"initialValue": {
																	"hexValue": "30",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6019:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6007:13:1"
															},
															"loopExpression": {
																"expression": {
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6047:3:1",
																	"subExpression": {
																		"id": 675,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "6047:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 677,
																"nodeType": "ExpressionStatement",
																"src": "6047:3:1"
															},
															"nodeType": "ForStatement",
															"src": "6002:192:1"
														},
														{
															"expression": {
																"id": 692,
																"name": "found",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "6214:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 654,
															"id": 693,
															"nodeType": "Return",
															"src": "6207:12:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4fb43199",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "5850:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 651,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5891:8:1"
									},
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "5864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:15:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "5909:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5909:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5908:6:1"
									},
									"scope": 807,
									"src": "5841:445:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										871
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "6365:374:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 708,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6378:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 710,
														"indexExpression": {
															"id": 709,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "6390:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6378:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6408:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6400:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6400:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6400:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6378:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 750,
													"nodeType": "Block",
													"src": "6696:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6717:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 707,
															"id": 749,
															"nodeType": "Return",
															"src": "6710:12:1"
														}
													]
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "6375:358:1",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6411:272:1",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "found",
																	"nameLocation": "6430:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 747,
																	"src": "6425:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6425:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 719,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6438:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6425:18:1"
														},
														{
															"body": {
																"id": 743,
																"nodeType": "Block",
																"src": "6506:141:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 731,
																					"name": "eventAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 122,
																					"src": "6528:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 733,
																				"indexExpression": {
																					"id": 732,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "6540:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6528:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 734,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 702,
																				"src": "6546:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6528:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 742,
																		"nodeType": "IfStatement",
																		"src": "6524:109:1",
																		"trueBody": {
																			"id": 741,
																			"nodeType": "Block",
																			"src": "6553:80:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 738,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 736,
																							"name": "found",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 717,
																							"src": "6575:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 737,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6583:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "6575:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 739,
																					"nodeType": "ExpressionStatement",
																					"src": "6575:12:1"
																				},
																				{
																					"id": 740,
																					"nodeType": "Break",
																					"src": "6609:5:1"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 724,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "6477:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 725,
																		"name": "eventAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 122,
																		"src": "6481:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6481:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6477:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 744,
															"initializationExpression": {
																"assignments": [
																	721
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 721,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6470:1:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 744,
																		"src": "6462:9:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 720,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6462:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 723,
																"initialValue": {
																	"hexValue": "30",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6474:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6462:13:1"
															},
															"loopExpression": {
																"expression": {
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6501:3:1",
																	"subExpression": {
																		"id": 728,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "6501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 730,
																"nodeType": "ExpressionStatement",
																"src": "6501:3:1"
															},
															"nodeType": "ForStatement",
															"src": "6457:190:1"
														},
														{
															"expression": {
																"id": 745,
																"name": "found",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "6667:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 707,
															"id": 746,
															"nodeType": "Return",
															"src": "6660:12:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cb146622",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "6301:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 704,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6341:8:1"
									},
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6313:15:1"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "6359:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6359:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:6:1"
									},
									"scope": 807,
									"src": "6292:447:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										878
									],
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "6813:366:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 761,
															"name": "blacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "6826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 763,
														"indexExpression": {
															"id": 762,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "6834:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6826:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6852:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6844:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 764,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6844:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6844:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6826:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 803,
													"nodeType": "Block",
													"src": "7136:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 760,
															"id": 802,
															"nodeType": "Return",
															"src": "7150:12:1"
														}
													]
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "6823:350:1",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6855:268:1",
													"statements": [
														{
															"assignments": [
																770
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 770,
																	"mutability": "mutable",
																	"name": "found",
																	"nameLocation": "6874:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 800,
																	"src": "6869:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6869:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 772,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6882:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6869:18:1"
														},
														{
															"body": {
																"id": 796,
																"nodeType": "Block",
																"src": "6948:139:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 784,
																					"name": "blackList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 125,
																					"src": "6970:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 786,
																				"indexExpression": {
																					"id": 785,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "6980:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6970:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 787,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6986:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6970:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 795,
																		"nodeType": "IfStatement",
																		"src": "6966:107:1",
																		"trueBody": {
																			"id": 794,
																			"nodeType": "Block",
																			"src": "6993:80:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 789,
																							"name": "found",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 770,
																							"src": "7015:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 790,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7023:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "7015:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 792,
																					"nodeType": "ExpressionStatement",
																					"src": "7015:12:1"
																				},
																				{
																					"id": 793,
																					"nodeType": "Break",
																					"src": "7049:5:1"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 777,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6921:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 778,
																		"name": "blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "6925:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6925:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6921:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"initializationExpression": {
																"assignments": [
																	774
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 774,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6914:1:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 797,
																		"src": "6906:9:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 773,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6906:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 776,
																"initialValue": {
																	"hexValue": "30",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6918:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6906:13:1"
															},
															"loopExpression": {
																"expression": {
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6943:3:1",
																	"subExpression": {
																		"id": 781,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "6943:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 783,
																"nodeType": "ExpressionStatement",
																"src": "6943:3:1"
															},
															"nodeType": "ForStatement",
															"src": "6901:186:1"
														},
														{
															"expression": {
																"id": 798,
																"name": "found",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "7107:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 760,
															"id": 799,
															"nodeType": "Return",
															"src": "7100:12:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "332daccf",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "6754:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 757,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6789:8:1"
									},
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6770:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "6762:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6761:15:1"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "6807:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6807:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6806:6:1"
									},
									"scope": 807,
									"src": "6745:434:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 808,
							"src": "482:6700:1",
							"usedErrors": []
						}
					],
					"src": "33:7149:1"
				},
				"id": 1
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
					"exportedSymbols": {
						"IWeb3BetsFO": [
							879
						]
					},
					"id": 880,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 879,
							"linearizedBaseContracts": [
								879
							],
							"name": "IWeb3BetsFO",
							"nameLocation": "68:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06a5cb3a",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemAddress",
									"nameLocation": "95:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:2"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "136:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:9:2"
									},
									"scope": 879,
									"src": "86:59:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0da4ee50",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersAddress",
									"nameLocation": "160:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:2"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "199:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:9:2"
									},
									"scope": 879,
									"src": "151:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992642e5",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableCoin",
									"nameLocation": "223:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:2"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "258:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:9:2"
									},
									"scope": 879,
									"src": "214:53:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6fdbd3f6",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eventFactory",
									"nameLocation": "282:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:2"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "319:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:9:2"
									},
									"scope": 879,
									"src": "273:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06ae7095",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketFactory",
									"nameLocation": "343:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:2:2"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "381:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:9:2"
									},
									"scope": 879,
									"src": "334:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a9618",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "betFactory",
									"nameLocation": "405:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:2"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "440:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:9:2"
									},
									"scope": 879,
									"src": "396:53:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "486d1e50",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersVig",
									"nameLocation": "464:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:2"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "499:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:6:2"
									},
									"scope": 879,
									"src": "455:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9376b94c",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemVig",
									"nameLocation": "520:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:2"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "557:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "557:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:6:2"
									},
									"scope": 879,
									"src": "511:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "387440e6",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vigPercentage",
									"nameLocation": "578:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:2"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "611:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "611:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:6:2"
									},
									"scope": 879,
									"src": "569:48:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4d161324",
									"id": 857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "632:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:2"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:0:2"
									},
									"scope": 879,
									"src": "623:37:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fb43199",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "675:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "697:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "689:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:18:2"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "725:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "725:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:6:2"
									},
									"scope": 879,
									"src": "666:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb146622",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "746:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "767:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "759:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:18:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "795:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:6:2"
									},
									"scope": 879,
									"src": "737:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "332daccf",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "816:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "832:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "824:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:18:2"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "860:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:2"
									},
									"scope": 879,
									"src": "807:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 880,
							"src": "58:810:2",
							"usedErrors": []
						}
					],
					"src": "33:835:2"
				},
				"id": 2
			}
		}
	}
}