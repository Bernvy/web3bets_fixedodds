{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_cat",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_sub",
						"type": "string"
					}
				],
				"name": "createEvent",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getEvents",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFactory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_event",
						"type": "address"
					}
				],
				"name": "getString",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "eventName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "eventCat",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "eventSub",
								"type": "string"
							}
						],
						"internalType": "struct IEventFactory.EventString",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_event",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_cat",
						"type": "string"
					}
				],
				"name": "setCategory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_event",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "setName",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_event",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_sub",
						"type": "string"
					}
				],
				"name": "setSubcategory",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/interface/IEventFactory.sol": "IEventFactory"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/interface/IEventFactory.sol": {
			"keccak256": "0x762ed9d3b77be18ccb6444d0ac2f9f8b29006867db18dabe0783454acdbbae30",
			"license": "MIT",
			"urls": [
				"bzz-raw://0687b006a546d71acaf4a3b93548d10ef025c3f518dd66a0f5155fb9710d3a75",
				"dweb:/ipfs/QmP74CjsPXB638mYtWCskxotNzXXLTxu1CNeeWvjo7mzLp"
			]
		}
	},
	"version": 1
}