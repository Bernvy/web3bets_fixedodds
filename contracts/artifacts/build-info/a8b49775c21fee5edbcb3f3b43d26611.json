{
	"id": "a8b49775c21fee5edbcb3f3b43d26611",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Web3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./interface/IWeb3BetsFO.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @author Victor Okoro\n/// @title Web3Bets Contract for FixedOdds decentralized betting exchange\n/// @notice Contains Web3Bets ecosystem's variables and functions\n/// @custom:security contact okoro.victor@web3bets.io\n\n/* \ncopied and modified code logic from github Repo: https://github.com/wizardoma/web3_bets_contract.git\n*/\ncontract Web3BetsFO is IWeb3BetsFO {\n    using SafeERC20 for IERC20;\n\n    address public contractOwner;\n    \n    address public override ecosystemAddress;\n    address public override holdersAddress;\n    address public override stableCoin;\n\n    address public override eventFactory;\n    address public override marketFactory;\n    address public override betFactory;\n\n    uint256 public override holdersVig = 50;\n    uint256 public override ecosystemVig = 50;\n    uint256 public override vigPercentage = 10;\n\n    address[] public systemAdmins;\n    address[] public eventAdmins;\n    address[] public blackList;\n\n    mapping(address => address) public admins;\n    mapping(address => address) public eventOwners;\n    mapping(address => address) public blacked;\n\n    IERC20 private _stableCoinWrapper = IERC20(stableCoin);\n\n    modifier onlyUser() {\n        require(\n            msg.sender == contractOwner,\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n    modifier onlySystemAdmin {\n        require(\n            isSystemAdmin(msg.sender),\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n    modifier uniqueSystemAdmin(address _addr) {\n        require(admins[_addr] == address(0), \"already a system admin\");\n        _;\n    }\n    modifier uniqueEventAdmin(address _addr) {\n        require(eventOwners[_addr] == address(0), \"already an event admin\");\n        _;\n    }\n    modifier uniqueBlack(address _addr) {\n        require(blacked[_addr] == address(0), \"already in blacklist\");\n        _;\n    }\n\n    constructor() {\n        contractOwner = msg.sender;\n    }\n    \n    function setSystemAddresses(address holdersAddr, address ecoAddr,address holder) external onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEcosystemAddress(address holder) external onlySystemAdmin {\n        ecosystemAddress = holder;\n    }\n\n    function setStableCoin(address holder) external onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEventFactory(address _factory) external onlySystemAdmin {\n        eventFactory = _factory;\n    }\n\n    function setMarketFactory(address _factory) external onlySystemAdmin {\n        marketFactory = _factory;\n    }\n\n    function setBetFactory(address _factory) external onlySystemAdmin {\n        betFactory = _factory;\n    }\n\n    function setVigPercentage(uint256 _percentage) external onlySystemAdmin {\n        require(\n            _percentage < 10,\n            \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\"\n        );\n        vigPercentage = _percentage;\n    }\n\n    function setVigPercentageShares(\n        uint256 hVig,\n        uint256 eVig\n    ) external onlySystemAdmin {\n        require(\n            hVig <= 100 && eVig <= 100,\n            \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\"\n        );\n        require(\n            hVig + eVig  == 100,\n            \"The sum of all Vig percentage shares must be equal to 100\"\n        );\n\n        holdersVig = hVig;\n        ecosystemVig = eVig;\n    }\n\n    function shareBetEarnings() external override {\n        uint256 _vigAmount = _stableCoinWrapper.balanceOf(address(this));\n        require(_vigAmount > 0, \"bet earnings must be greater than 0\");\n        uint256 holdersShare = (_vigAmount * holdersVig )/ 100;\n        require(holdersShare > 0, \"holders' share must be greater than 0\");\n        uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100;\n        require(ecosystemShare > 0, \"ecosystem share must be greater than 0\");\n\n        _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare);\n\n        _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare);\n    }\n    \n    function addSystemAdmin(address _addr)\n        external\n        onlyUser\n        uniqueSystemAdmin(_addr)\n    {\n        require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\");\n\n        systemAdmins.push(_addr);\n        admins[_addr] = _addr;\n    }\n\n    function deleteSystemAdmin(address _systemAdmin) external onlyUser {\n        require (admins[_systemAdmin] != address(0), \"Invalid event owner\");\n        \n        delete admins[_systemAdmin];\n\n        for (uint256 i = 0; i < systemAdmins.length; i++) {\n            if (systemAdmins[i] == _systemAdmin) {\n                delete systemAdmins[i];\n                break;\n            }\n        }\n    }\n    \n    function addEventAdmin(address _addr)\n        external\n        onlySystemAdmin\n        uniqueEventAdmin(_addr)\n    {\n        require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\");\n\n        eventAdmins.push(_addr);\n        eventOwners[_addr] = _addr;\n    }\n\n    function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {\n        require (eventOwners[_eventOwner] != address(0), \"Invalid event owner\");\n        \n        delete eventOwners[_eventOwner];\n\n        for (uint256 i = 0; i < eventAdmins.length; i++) {\n            if (eventAdmins[i] == _eventOwner) {\n                delete eventAdmins[i];\n                break;\n            }\n        }\n    }\n    \n    function addBlacked(address _addr)\n        external\n        onlySystemAdmin\n        uniqueBlack(_addr)\n    {\n        eventAdmins.push(_addr);\n        eventOwners[_addr] = _addr;\n    }\n\n    function removeBlacked(address _eventOwner) external onlySystemAdmin {\n        require (blacked[_eventOwner] != address(0), \"Invalid event owner\");\n        \n        delete blacked[_eventOwner];\n\n        for (uint256 i = 0; i < blackList.length; i++) {\n            if (blackList[i] == _eventOwner) {\n                delete blackList[i];\n                break;\n            }\n        }\n    }\n\n    function isSystemAdmin(address _addr) public view override returns (bool) {\n        if(admins[_addr] != address(0)){\n            bool found = false;\n            for (uint256 i = 0; i < systemAdmins.length; i++) {\n                if (systemAdmins[i] == _addr) {\n                    found = true;\n                    break;\n                }\n            }\n            return found;\n        }\n        else{\n            return false;\n        }\n    }\n\n    function isEventAdmin(address _addr) public view override returns (bool) {\n        if(eventOwners[_addr] != address(0)){\n            bool found = false;\n            for (uint256 i = 0; i < eventAdmins.length; i++) {\n                if (eventAdmins[i] == _addr) {\n                    found = true;\n                    break;\n                }\n            }\n            return found;\n        }\n        else{\n            return false;\n        }\n    }\n\n    function isBlack(address _addr) public view override returns (bool) {\n        if(blacked[_addr] != address(0)){\n            bool found = false;\n            for (uint256 i = 0; i < blackList.length; i++) {\n                if (blackList[i] == _addr) {\n                    found = true;\n                    break;\n                }\n            }\n            return found;\n        }\n        else{\n            return false;\n        }\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IWeb3BetsFO{\n\n    function ecosystemAddress() external view returns(address);\n\n    function holdersAddress() external view returns(address);\n\n    function stableCoin() external view returns(address);\n\n    function eventFactory() external view returns(address);\n\n    function marketFactory() external view returns(address);\n\n    function betFactory() external view returns(address);\n\n    function holdersVig() external view returns(uint);\n\n    function ecosystemVig() external view returns(uint);\n\n    function vigPercentage() external returns(uint);\n\n    function shareBetEarnings() external;\n\n    function isSystemAdmin(address _account) external returns (bool);\n\n    function isEventAdmin(address _account) external returns (bool);\n\n    function isBlack(address _account) external returns (bool);\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Web3BetsFO.sol": {
				"Web3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addBlacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addEventAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addSystemAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "admins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "blackList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacked",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventOwner",
									"type": "address"
								}
							],
							"name": "deleteEventAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_systemAdmin",
									"type": "address"
								}
							],
							"name": "deleteSystemAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "eventAdmins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "eventOwners",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_eventOwner",
									"type": "address"
								}
							],
							"name": "removeBlacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setBetFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setEventFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setMarketFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holdersAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ecoAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setSystemAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								}
							],
							"name": "setVigPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "hVig",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "eVig",
									"type": "uint256"
								}
							],
							"name": "setVigPercentageShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "systemAdmins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Victor Okoro",
						"custom:security": "contact okoro.victor@web3bets.io",
						"kind": "dev",
						"methods": {},
						"title": "Web3Bets Contract for FixedOdds decentralized betting exchange",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Web3BetsFO.sol\":548:7737  contract Web3BetsFO is IWeb3BetsFO {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Web3BetsFO.sol\":955:957  50 */\n  0x32\n    /* \"contracts/Web3BetsFO.sol\":918:957  uint256 public override holdersVig = 50 */\n  0x07\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":963:1004  uint256 public override ecosystemVig = 50 */\n  0x08\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":1050:1052  10 */\n  0x0a\n    /* \"contracts/Web3BetsFO.sol\":1010:1052  uint256 public override vigPercentage = 10 */\n  0x09\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":1352:1362  stableCoin */\n  sload(0x03)\n    /* \"contracts/Web3BetsFO.sol\":1309:1363  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  0x10\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Web3BetsFO.sol\":1352:1362  stableCoin */\n  swap1\n  swap3\n  and\n    /* \"contracts/Web3BetsFO.sol\":1309:1363  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":2120:2177  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Web3BetsFO.sol\":2144:2157  contractOwner */\n  0x00\n    /* \"contracts/Web3BetsFO.sol\":2144:2170  contractOwner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Web3BetsFO.sol\":2160:2170  msg.sender */\n  caller\n    /* \"contracts/Web3BetsFO.sol\":2144:2170  contractOwner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":548:7737  contract Web3BetsFO is IWeb3BetsFO {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Web3BetsFO.sol\":548:7737  contract Web3BetsFO is IWeb3BetsFO {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x709ec8b4\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xcb146622\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd5494869\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd5494869\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd6c1ca26\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe3c0ed78\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xed9f7eb9\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2210b2c\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xcb146622\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd37e87fd\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd43cbb15\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x9376b94c\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x9376b94c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9b460aa9\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa8e01b28\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x709ec8b4\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x80036b34\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x85d8349b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x89fefbe1\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x387440e6\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x4dcc434a\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x4dcc434a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4fb43199\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x64886880\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x681ada8c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6fdbd3f6\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x387440e6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x429b62e5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x486d1e50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4d161324\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x23af4e17\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x23af4e17\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x273fea39\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a9618\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x332daccf\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x026c1a4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06a5cb3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06ae7095\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0da4ee50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":1059:1088  address[] public systemAdmins */\n    tag_3:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2144:2176   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2126:2177   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2114:2116   */\n      0x20\n        /* \"#utility.yul\":2099:2117   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":1059:1088  address[] public systemAdmins */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Web3BetsFO.sol\":661:701  address public override ecosystemAddress */\n    tag_4:\n      sload(0x01)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":834:871  address public override marketFactory */\n    tag_5:\n      sload(0x05)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":707:745  address public override holdersAddress */\n    tag_6:\n      sload(0x02)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2457:2561  function setStableCoin(address holder) external onlySystemAdmin {... */\n    tag_7:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/Web3BetsFO.sol\":2187:2333  function setSystemAddresses(address holdersAddr, address ecoAddr,address holder) external onlySystemAdmin {... */\n    tag_8:\n      tag_59\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":877:911  address public override betFactory */\n    tag_9:\n      sload(0x06)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":7300:7734  function isBlack(address _addr) public view override returns (bool) {... */\n    tag_10:\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n        /* \"#utility.yul\":2632:2646   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2625:2647   */\n      iszero\n        /* \"#utility.yul\":2607:2648   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2595:2597   */\n      0x20\n        /* \"#utility.yul\":2580:2598   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":7300:7734  function isBlack(address _addr) public view override returns (bool) {... */\n      tag_48\n        /* \"#utility.yul\":2562:2654   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1010:1052  uint256 public override vigPercentage = 10 */\n    tag_11:\n      tag_75\n      sload(0x09)\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n        /* \"#utility.yul\":9267:9292   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9255:9257   */\n      0x20\n        /* \"#utility.yul\":9240:9258   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":1010:1052  uint256 public override vigPercentage = 10 */\n      tag_48\n        /* \"#utility.yul\":9222:9298   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1161:1202  mapping(address => address) public admins */\n    tag_12:\n      tag_44\n      tag_80\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_80:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":918:957  uint256 public override holdersVig = 50 */\n    tag_13:\n      tag_75\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3635:4269  function shareBetEarnings() external override {... */\n    tag_14:\n      tag_59\n      tag_87\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2681:2791  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n    tag_15:\n      tag_59\n      tag_89\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":6396:6841  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n    tag_16:\n      tag_70\n      tag_92\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3168:3629  function setVigPercentageShares(... */\n    tag_17:\n      tag_59\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":6002:6390  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n    tag_18:\n      tag_59\n      tag_100\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":792:828  address public override eventFactory */\n    tag_19:\n      sload(0x04)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1128:1154  address[] public blackList */\n    tag_20:\n      tag_44\n      tag_106\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1260:1302  mapping(address => address) public blacked */\n    tag_21:\n      tag_44\n      tag_110\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_110:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1208:1254  mapping(address => address) public eventOwners */\n    tag_22:\n      tag_44\n      tag_114\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_114:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2797:2901  function setBetFactory(address _factory) external onlySystemAdmin {... */\n    tag_23:\n      tag_59\n      tag_118\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":963:1004  uint256 public override ecosystemVig = 50 */\n    tag_24:\n      tag_75\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":751:785  address public override stableCoin */\n    tag_25:\n      sload(0x03)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":5813:5996  function addBlacked(address _addr)... */\n    tag_26:\n      tag_59\n      tag_127\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2339:2451  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n    tag_27:\n      tag_59\n      tag_130\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":6847:7294  function isEventAdmin(address _addr) public view override returns (bool) {... */\n    tag_28:\n      tag_70\n      tag_133\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":622:650  address public contractOwner */\n    tag_29:\n      sload(0x00)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1094:1122  address[] public eventAdmins */\n    tag_30:\n      tag_44\n      tag_140\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2567:2675  function setEventFactory(address _factory) external onlySystemAdmin {... */\n    tag_31:\n      tag_59\n      tag_144\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4631:5027  function deleteSystemAdmin(address _systemAdmin) external onlyUser {... */\n    tag_32:\n      tag_59\n      tag_147\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2907:3162  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_33:\n      tag_59\n      tag_150\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":5037:5392  function addEventAdmin(address _addr)... */\n    tag_34:\n      tag_59\n      tag_153\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4279:4625  function addSystemAdmin(address _addr)... */\n    tag_35:\n      tag_59\n      tag_156\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":5398:5803  function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {... */\n    tag_36:\n      tag_59\n      tag_159\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1059:1088  address[] public systemAdmins */\n    tag_47:\n      0x0a\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2457:2561  function setStableCoin(address holder) external onlySystemAdmin {... */\n    tag_62:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_164\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/Web3BetsFO.sol\":2531:2545  holdersAddress */\n      0x02\n        /* \"contracts/Web3BetsFO.sol\":2531:2554  holdersAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2457:2561  function setStableCoin(address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2187:2333  function setSystemAddresses(address holdersAddr, address ecoAddr,address holder) external onlySystemAdmin {... */\n    tag_66:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_170\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_171:\n        /* \"contracts/Web3BetsFO.sol\":2303:2317  holdersAddress */\n      0x02\n        /* \"contracts/Web3BetsFO.sol\":2303:2326  holdersAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":2187:2333  function setSystemAddresses(address holdersAddr, address ecoAddr,address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":7300:7734  function isBlack(address _addr) public view override returns (bool) {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":7381:7395  blacked[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":7362:7366  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":7381:7395  blacked[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":7381:7388  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":7381:7395  blacked[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":7362:7366  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":7381:7395  blacked[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":7381:7409  blacked[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":7378:7728  if(blacked[_addr] != address(0)){... */\n      tag_175\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":7424:7434  bool found */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":7461:7470  uint256 i */\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":7456:7642  for (uint256 i = 0; i < blackList.length; i++) {... */\n    tag_176:\n        /* \"contracts/Web3BetsFO.sol\":7480:7489  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":7480:7496  blackList.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":7476:7496  i < blackList.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":7456:7642  for (uint256 i = 0; i < blackList.length; i++) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":7541:7546  _addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":7525:7546  blackList[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":7525:7534  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":7535:7536  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":7525:7537  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_179\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_179:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":7525:7546  blackList[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":7521:7628  if (blackList[i] == _addr) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":7578:7582  true */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":7570:7582  found = true */\n      swap2\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7604:7609  break */\n      jump(tag_177)\n        /* \"contracts/Web3BetsFO.sol\":7521:7628  if (blackList[i] == _addr) {... */\n    tag_181:\n        /* \"contracts/Web3BetsFO.sol\":7498:7501  i++ */\n      dup1\n      tag_182\n      dup2\n      tag_183\n      jump\t// in\n    tag_182:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7456:7642  for (uint256 i = 0; i < blackList.length; i++) {... */\n      jump(tag_176)\n    tag_177:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7662:7667  found */\n      swap3\n        /* \"contracts/Web3BetsFO.sol\":7300:7734  function isBlack(address _addr) public view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":7378:7728  if(blacked[_addr] != address(0)){... */\n    tag_175:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7712:7717  false */\n      0x00\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":7300:7734  function isBlack(address _addr) public view override returns (bool) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":7378:7728  if(blacked[_addr] != address(0)){... */\n    tag_184:\n        /* \"contracts/Web3BetsFO.sol\":7300:7734  function isBlack(address _addr) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":3635:4269  function shareBetEarnings() external override {... */\n    tag_87:\n        /* \"contracts/Web3BetsFO.sol\":3712:3730  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":3712:3755  _stableCoinWrapper.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3749:3753  this */\n      address\n        /* \"contracts/Web3BetsFO.sol\":3712:3755  _stableCoinWrapper.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2126:2177   */\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3691:3709  uint256 _vigAmount */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":3712:3730  _stableCoinWrapper */\n      and\n      swap1\n        /* \"contracts/Web3BetsFO.sol\":3712:3740  _stableCoinWrapper.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2099:2117   */\n      0x24\n      add\n        /* \"contracts/Web3BetsFO.sol\":3712:3755  _stableCoinWrapper.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/Web3BetsFO.sol\":3691:3755  uint256 _vigAmount = _stableCoinWrapper.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3786:3787  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3773:3783  _vigAmount */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3773:3787  _vigAmount > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3765:3827  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8432:8434   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3765:3827  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8414:8435   */\n      mstore\n        /* \"#utility.yul\":8471:8473   */\n      0x23\n        /* \"#utility.yul\":8451:8469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8444:8474   */\n      mstore\n        /* \"#utility.yul\":8510:8544   */\n      0x626574206561726e696e6773206d757374206265206772656174657220746861\n        /* \"#utility.yul\":8490:8508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8483:8545   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":8561:8579   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8554:8587   */\n      mstore\n        /* \"#utility.yul\":8604:8623   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3765:3827  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_166\n        /* \"#utility.yul\":8404:8629   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3765:3827  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n    tag_192:\n        /* \"contracts/Web3BetsFO.sol\":3837:3857  uint256 holdersShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3888:3891  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3874:3884  holdersVig */\n      sload(0x07)\n        /* \"contracts/Web3BetsFO.sol\":3861:3871  _vigAmount */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3861:3884  _vigAmount * holdersVig */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/Web3BetsFO.sol\":3860:3891  (_vigAmount * holdersVig )/ 100 */\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"contracts/Web3BetsFO.sol\":3837:3891  uint256 holdersShare = (_vigAmount * holdersVig )/ 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3924:3925  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3909:3921  holdersShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3909:3925  holdersShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3901:3967  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6560:6562   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3901:3967  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6542:6563   */\n      mstore\n        /* \"#utility.yul\":6599:6601   */\n      0x25\n        /* \"#utility.yul\":6579:6597   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6572:6602   */\n      mstore\n        /* \"#utility.yul\":6638:6672   */\n      0x686f6c6465727327207368617265206d75737420626520677265617465722074\n        /* \"#utility.yul\":6618:6636   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6611:6673   */\n      mstore\n      shl(0xdc, 0x068616e203)\n        /* \"#utility.yul\":6689:6707   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6682:6717   */\n      mstore\n        /* \"#utility.yul\":6734:6753   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3901:3967  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_166\n        /* \"#utility.yul\":6532:6759   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3901:3967  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n    tag_199:\n        /* \"contracts/Web3BetsFO.sol\":3977:3999  uint256 ecosystemShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4032:4035  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":4016:4028  ecosystemVig */\n      sload(0x08)\n        /* \"contracts/Web3BetsFO.sol\":4003:4013  _vigAmount */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":4003:4028  _vigAmount * ecosystemVig */\n      tag_202\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_202:\n        /* \"contracts/Web3BetsFO.sol\":4002:4035  (_vigAmount * ecosystemVig) / 100 */\n      tag_203\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_203:\n        /* \"contracts/Web3BetsFO.sol\":3977:4035  uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4070:4071  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4053:4067  ecosystemShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":4053:4071  ecosystemShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":4045:4114  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4565:4567   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":4045:4114  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4547:4568   */\n      mstore\n        /* \"#utility.yul\":4604:4606   */\n      0x26\n        /* \"#utility.yul\":4584:4602   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4577:4607   */\n      mstore\n        /* \"#utility.yul\":4643:4677   */\n      0x65636f73797374656d207368617265206d757374206265206772656174657220\n        /* \"#utility.yul\":4623:4641   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4616:4678   */\n      mstore\n      shl(0xd4, 0x07468616e203)\n        /* \"#utility.yul\":4694:4712   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4687:4723   */\n      mstore\n        /* \"#utility.yul\":4740:4759   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":4045:4114  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_166\n        /* \"#utility.yul\":4537:4765   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":4045:4114  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n    tag_204:\n        /* \"contracts/Web3BetsFO.sol\":4157:4173  ecosystemAddress */\n      sload(0x01)\n        /* \"contracts/Web3BetsFO.sol\":4125:4143  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":4125:4190  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      tag_207\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4125:4143  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":4157:4173  ecosystemAddress */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4175:4189  ecosystemShare */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":4125:4156  _stableCoinWrapper.safeTransfer */\n      tag_208\n        /* \"contracts/Web3BetsFO.sol\":4125:4190  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/Web3BetsFO.sol\":4233:4247  holdersAddress */\n      sload(0x02)\n        /* \"contracts/Web3BetsFO.sol\":4201:4219  _stableCoinWrapper */\n      sload(0x10)\n        /* \"contracts/Web3BetsFO.sol\":4201:4262  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      tag_209\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4201:4219  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":4233:4247  holdersAddress */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4249:4261  holdersShare */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":4201:4232  _stableCoinWrapper.safeTransfer */\n      tag_208\n        /* \"contracts/Web3BetsFO.sol\":4201:4262  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/Web3BetsFO.sol\":3635:4269  function shareBetEarnings() external override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2681:2791  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n    tag_90:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_211\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_212:\n        /* \"contracts/Web3BetsFO.sol\":2760:2773  marketFactory */\n      0x05\n        /* \"contracts/Web3BetsFO.sol\":2760:2784  marketFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2681:2791  function setMarketFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6396:6841  function isSystemAdmin(address _addr) public view override returns (bool) {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6483:6496  admins[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6464:6468  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6483:6496  admins[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6483:6489  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":6483:6496  admins[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6464:6468  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6483:6496  admins[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6483:6510  admins[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":6480:6835  if(admins[_addr] != address(0)){... */\n      tag_175\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6525:6535  bool found */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6562:6571  uint256 i */\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":6557:6749  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n    tag_217:\n        /* \"contracts/Web3BetsFO.sol\":6581:6593  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":6581:6600  systemAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6577:6600  i < systemAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6557:6749  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6648:6653  _addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6629:6653  systemAdmins[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6629:6641  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":6642:6643  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6629:6644  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_220\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_220:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6629:6653  systemAdmins[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6625:6735  if (systemAdmins[i] == _addr) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6685:6689  true */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":6677:6689  found = true */\n      swap2\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6711:6716  break */\n      jump(tag_177)\n        /* \"contracts/Web3BetsFO.sol\":6625:6735  if (systemAdmins[i] == _addr) {... */\n    tag_222:\n        /* \"contracts/Web3BetsFO.sol\":6602:6605  i++ */\n      dup1\n      tag_223\n      dup2\n      tag_183\n      jump\t// in\n    tag_223:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6557:6749  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      jump(tag_217)\n        /* \"contracts/Web3BetsFO.sol\":3168:3629  function setVigPercentageShares(... */\n    tag_98:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_226\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_227:\n        /* \"contracts/Web3BetsFO.sol\":3314:3317  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3306:3310  hVig */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":3306:3317  hVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":3306:3332  hVig <= 100 && eVig <= 100 */\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3329:3332  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3321:3325  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3321:3332  eVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":3306:3332  hVig <= 100 && eVig <= 100 */\n    tag_230:\n        /* \"contracts/Web3BetsFO.sol\":3285:3432  require(... */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3675:3677   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3285:3432  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3657:3678   */\n      mstore\n        /* \"#utility.yul\":3714:3716   */\n      0x4a\n        /* \"#utility.yul\":3694:3712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3687:3717   */\n      mstore\n        /* \"#utility.yul\":3753:3787   */\n      0x5669672070657263656e746167657320736861726573206d7573742062652065\n        /* \"#utility.yul\":3733:3751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3726:3788   */\n      mstore\n        /* \"#utility.yul\":3824:3858   */\n      0x787072657373656420696e206120203020746f2031303020726174696f2e2045\n        /* \"#utility.yul\":3804:3822   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3797:3859   */\n      mstore\n      shl(0xb4, 0x078616d706c653a20333)\n        /* \"#utility.yul\":3875:3894   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3868:3909   */\n      mstore\n        /* \"#utility.yul\":3926:3945   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":3285:3432  require(... */\n      tag_166\n        /* \"#utility.yul\":3647:3951   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3285:3432  require(... */\n    tag_231:\n        /* \"contracts/Web3BetsFO.sol\":3463:3474  hVig + eVig */\n      tag_234\n        /* \"contracts/Web3BetsFO.sol\":3470:3474  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3463:3467  hVig */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3463:3474  hVig + eVig */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"contracts/Web3BetsFO.sol\":3479:3482  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3463:3482  hVig + eVig  == 100 */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":3442:3565  require(... */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3249:3251   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3442:3565  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3231:3252   */\n      mstore\n        /* \"#utility.yul\":3288:3290   */\n      0x39\n        /* \"#utility.yul\":3268:3286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3261:3291   */\n      mstore\n        /* \"#utility.yul\":3327:3361   */\n      0x5468652073756d206f6620616c6c205669672070657263656e74616765207368\n        /* \"#utility.yul\":3307:3325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3300:3362   */\n      mstore\n        /* \"#utility.yul\":3398:3425   */\n      0x61726573206d75737420626520657175616c20746f2031303000000000000000\n        /* \"#utility.yul\":3378:3396   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3371:3426   */\n      mstore\n        /* \"#utility.yul\":3443:3462   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3442:3565  require(... */\n      tag_166\n        /* \"#utility.yul\":3221:3468   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3442:3565  require(... */\n    tag_236:\n        /* \"contracts/Web3BetsFO.sol\":3576:3586  holdersVig */\n      0x07\n        /* \"contracts/Web3BetsFO.sol\":3576:3593  holdersVig = hVig */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":3603:3615  ecosystemVig */\n      0x08\n        /* \"contracts/Web3BetsFO.sol\":3603:3622  ecosystemVig = eVig */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":3168:3629  function setVigPercentageShares(... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6002:6390  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n    tag_101:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_240\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6090:6110  blacked[_eventOwner] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6122:6123  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6090:6110  blacked[_eventOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6090:6097  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":6090:6110  blacked[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":6081:6148  require (blacked[_eventOwner] != address(0), \"Invalid event owner\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_246\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6174:6194  blacked[_eventOwner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6174:6181  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":6174:6194  blacked[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":6167:6194  delete blacked[_eventOwner] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":6205:6384  for (uint256 i = 0; i < blackList.length; i++) {... */\n    tag_247:\n        /* \"contracts/Web3BetsFO.sol\":6229:6238  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6229:6245  blackList.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6225:6245  i < blackList.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":6205:6384  for (uint256 i = 0; i < blackList.length; i++) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6286:6297  _eventOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6270:6297  blackList[i] == _eventOwner */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6270:6279  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6280:6281  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":6270:6282  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_250\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_250:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":6270:6297  blackList[i] == _eventOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":6266:6374  if (blackList[i] == _eventOwner) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6324:6333  blackList */\n      0x0c\n        /* \"contracts/Web3BetsFO.sol\":6334:6335  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":6324:6336  blackList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_253\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_253:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/Web3BetsFO.sol\":6317:6336  delete blackList[i] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":6205:6384  for (uint256 i = 0; i < blackList.length; i++) {... */\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6002:6390  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6266:6374  if (blackList[i] == _eventOwner) {... */\n    tag_252:\n        /* \"contracts/Web3BetsFO.sol\":6247:6250  i++ */\n      dup1\n      tag_255\n      dup2\n      tag_183\n      jump\t// in\n    tag_255:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6205:6384  for (uint256 i = 0; i < blackList.length; i++) {... */\n      jump(tag_247)\n    tag_248:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":6002:6390  function removeBlacked(address _eventOwner) external onlySystemAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":1128:1154  address[] public blackList */\n    tag_107:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":2797:2901  function setBetFactory(address _factory) external onlySystemAdmin {... */\n    tag_119:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_259\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_260:\n        /* \"contracts/Web3BetsFO.sol\":2873:2883  betFactory */\n      0x06\n        /* \"contracts/Web3BetsFO.sol\":2873:2894  betFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2797:2901  function setBetFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5813:5996  function addBlacked(address _addr)... */\n    tag_128:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_264\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":2069:2070  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":2043:2050  blacked */\n      0x0f\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5909:5914  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":2043:2057  blacked[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":2043:2071  blacked[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7672:7674   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7654:7675   */\n      mstore\n        /* \"#utility.yul\":7711:7713   */\n      0x14\n        /* \"#utility.yul\":7691:7709   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7684:7714   */\n      mstore\n      shl(0x62, 0x185b1c9958591e481a5b88189b1858dadb1a5cdd)\n        /* \"#utility.yul\":7730:7748   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7723:7773   */\n      mstore\n        /* \"#utility.yul\":7790:7808   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n      tag_166\n        /* \"#utility.yul\":7644:7814   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2035:2096  require(blacked[_addr] == address(0), \"already in blacklist\") */\n    tag_268:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5930:5941  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5930:5953  eventAdmins.push(_addr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0x0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5963:5981  eventOwners[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5963:5974  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5930:5953  eventAdmins.push(_addr) */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":5963:5981  eventOwners[_addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5963:5989  eventOwners[_addr] = _addr */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5813:5996  function addBlacked(address _addr)... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2339:2451  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n    tag_131:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_274\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_275:\n        /* \"contracts/Web3BetsFO.sol\":2419:2435  ecosystemAddress */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":2419:2444  ecosystemAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2339:2451  function setEcosystemAddress(address holder) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":6847:7294  function isEventAdmin(address _addr) public view override returns (bool) {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":6933:6951  eventOwners[_addr] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":6914:6918  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":6933:6951  eventOwners[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":6933:6944  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":6933:6951  eventOwners[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":6914:6918  bool */\n      swap1\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":6933:6951  eventOwners[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":6933:6965  eventOwners[_addr] != address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":6930:7288  if(eventOwners[_addr] != address(0)){... */\n      tag_175\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":6980:6990  bool found */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":7017:7026  uint256 i */\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":7012:7202  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n    tag_280:\n        /* \"contracts/Web3BetsFO.sol\":7036:7047  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":7036:7054  eventAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":7032:7054  i < eventAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":7012:7202  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":7101:7106  _addr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":7083:7106  eventAdmins[i] == _addr */\n      and\n        /* \"contracts/Web3BetsFO.sol\":7083:7094  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":7095:7096  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":7083:7097  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_283\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_283:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":7083:7106  eventAdmins[i] == _addr */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":7079:7188  if (eventAdmins[i] == _addr) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":7138:7142  true */\n      0x01\n        /* \"contracts/Web3BetsFO.sol\":7130:7142  found = true */\n      swap2\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7164:7169  break */\n      jump(tag_177)\n        /* \"contracts/Web3BetsFO.sol\":7079:7188  if (eventAdmins[i] == _addr) {... */\n    tag_285:\n        /* \"contracts/Web3BetsFO.sol\":7056:7059  i++ */\n      dup1\n      tag_286\n      dup2\n      tag_183\n      jump\t// in\n    tag_286:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":7012:7202  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      jump(tag_280)\n        /* \"contracts/Web3BetsFO.sol\":1094:1122  address[] public eventAdmins */\n    tag_141:\n      0x0b\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/Web3BetsFO.sol\":2567:2675  function setEventFactory(address _factory) external onlySystemAdmin {... */\n    tag_145:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_291\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_292:\n        /* \"contracts/Web3BetsFO.sol\":2645:2657  eventFactory */\n      0x04\n        /* \"contracts/Web3BetsFO.sol\":2645:2668  eventFactory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2567:2675  function setEventFactory(address _factory) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":4631:5027  function deleteSystemAdmin(address _systemAdmin) external onlyUser {... */\n    tag_148:\n        /* \"contracts/Web3BetsFO.sol\":1435:1448  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1421:1431  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1421:1448  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1400:1516  require(... */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4717:4737  admins[_systemAdmin] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":4749:4750  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4717:4737  admins[_systemAdmin] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4717:4723  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4717:4737  admins[_systemAdmin] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":4708:4775  require (admins[_systemAdmin] != address(0), \"Invalid event owner\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_246\n      jump\t// in\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4801:4821  admins[_systemAdmin] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4801:4807  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4801:4821  admins[_systemAdmin] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":4794:4821  delete admins[_systemAdmin] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":4832:5021  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n    tag_301:\n        /* \"contracts/Web3BetsFO.sol\":4856:4868  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4856:4875  systemAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":4852:4875  i < systemAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":4832:5021  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":4919:4931  _systemAdmin */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":4900:4931  systemAdmins[i] == _systemAdmin */\n      and\n        /* \"contracts/Web3BetsFO.sol\":4900:4912  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4913:4914  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":4900:4915  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_304\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_304:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":4900:4931  systemAdmins[i] == _systemAdmin */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":4896:5011  if (systemAdmins[i] == _systemAdmin) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":4958:4970  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4971:4972  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":4958:4973  systemAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_253\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/Web3BetsFO.sol\":4896:5011  if (systemAdmins[i] == _systemAdmin) {... */\n    tag_306:\n        /* \"contracts/Web3BetsFO.sol\":4877:4880  i++ */\n      dup1\n      tag_309\n      dup2\n      tag_183\n      jump\t// in\n    tag_309:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4832:5021  for (uint256 i = 0; i < systemAdmins.length; i++) {... */\n      jump(tag_301)\n        /* \"contracts/Web3BetsFO.sol\":2907:3162  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n    tag_151:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_311\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_312:\n        /* \"contracts/Web3BetsFO.sol\":3024:3026  10 */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":3010:3021  _percentage */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3010:3026  _percentage < 10 */\n      lt\n        /* \"contracts/Web3BetsFO.sol\":2989:3118  require(... */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5323:5325   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2989:3118  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5305:5326   */\n      mstore\n        /* \"#utility.yul\":5362:5364   */\n      0x42\n        /* \"#utility.yul\":5342:5360   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5335:5365   */\n      mstore\n        /* \"#utility.yul\":5401:5435   */\n      0x5669672070657263656e74616765206d75737420626520657870726573736564\n        /* \"#utility.yul\":5381:5399   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5374:5436   */\n      mstore\n        /* \"#utility.yul\":5472:5506   */\n      0x20696e203020746f2031302070657263656e746167652e204578616d706c653a\n        /* \"#utility.yul\":5452:5470   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5445:5507   */\n      mstore\n      shl(0xf1, 0x101b)\n        /* \"#utility.yul\":5523:5542   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5516:5549   */\n      mstore\n        /* \"#utility.yul\":5566:5585   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":2989:3118  require(... */\n      tag_166\n        /* \"#utility.yul\":5295:5591   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2989:3118  require(... */\n    tag_315:\n        /* \"contracts/Web3BetsFO.sol\":3128:3141  vigPercentage */\n      0x09\n        /* \"contracts/Web3BetsFO.sol\":3128:3155  vigPercentage = _percentage */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2907:3162  function setVigPercentage(uint256 _percentage) external onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5037:5392  function addEventAdmin(address _addr)... */\n    tag_154:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_319\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":1937:1938  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1907:1918  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5141:5146  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1907:1925  eventOwners[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1907:1939  eventOwners[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4972:4974   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4954:4975   */\n      mstore\n        /* \"#utility.yul\":5011:5013   */\n      0x16\n        /* \"#utility.yul\":4991:5009   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4984:5014   */\n      mstore\n      shl(0x51, 0x30b63932b0b23c9030b71032bb32b73a1030b236b4b7)\n        /* \"#utility.yul\":5030:5048   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5023:5075   */\n      mstore\n        /* \"#utility.yul\":5092:5110   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n      tag_166\n        /* \"#utility.yul\":4944:5116   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1899:1966  require(eventOwners[_addr] == address(0), \"already an event admin\") */\n    tag_323:\n        /* \"contracts/Web3BetsFO.sol\":5170:5184  holdersAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Web3BetsFO.sol\":5170:5198  holdersAddress == address(0) */\n      iszero\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":5170:5232  holdersAddress == address(0) || ecosystemAddress == address(0) */\n      tag_327\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5202:5218  ecosystemAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Web3BetsFO.sol\":5202:5232  ecosystemAddress == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":5170:5232  holdersAddress == address(0) || ecosystemAddress == address(0) */\n    tag_327:\n        /* \"contracts/Web3BetsFO.sol\":5162:5315  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_330\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":4279:4625  function addSystemAdmin(address _addr)... */\n    tag_157:\n        /* \"contracts/Web3BetsFO.sol\":1435:1448  contractOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/Web3BetsFO.sol\":1421:1431  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1421:1448  msg.sender == contractOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":1400:1516  require(... */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Web3BetsFO.sol\":1796:1797  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1771:1777  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Web3BetsFO.sol\":4378:4383  _addr */\n      dup3\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":1771:1784  admins[_addr] */\n      and\n        /* \"contracts/Web3BetsFO.sol\":1771:1798  admins[_addr] == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6209:6211   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6191:6212   */\n      mstore\n        /* \"#utility.yul\":6248:6250   */\n      0x16\n        /* \"#utility.yul\":6228:6246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6221:6251   */\n      mstore\n      shl(0x51, 0x30b63932b0b23c90309039bcb9ba32b69030b236b4b7)\n        /* \"#utility.yul\":6267:6285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6260:6312   */\n      mstore\n        /* \"#utility.yul\":6329:6347   */\n      0x64\n      add\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n      tag_166\n        /* \"#utility.yul\":6181:6353   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1763:1825  require(admins[_addr] == address(0), \"already a system admin\") */\n    tag_336:\n        /* \"contracts/Web3BetsFO.sol\":4407:4421  holdersAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/Web3BetsFO.sol\":4407:4435  holdersAddress == address(0) */\n      iszero\n      dup1\n        /* \"contracts/Web3BetsFO.sol\":4407:4469  holdersAddress == address(0) || ecosystemAddress == address(0) */\n      tag_340\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4439:4455  ecosystemAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Web3BetsFO.sol\":4439:4469  ecosystemAddress == address(0) */\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":4407:4469  holdersAddress == address(0) || ecosystemAddress == address(0) */\n    tag_340:\n        /* \"contracts/Web3BetsFO.sol\":4399:4552  require(holdersAddress == address(0) || ecosystemAddress == address(0), \"you must set holders and ecosystmeAddress addresses before adding event owners\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_330\n      jump\t// in\n    tag_341:\n      pop\n        /* \"contracts/Web3BetsFO.sol\":4563:4575  systemAdmins */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":4563:4587  systemAdmins.push(_addr) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":4597:4610  admins[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":4597:4603  admins */\n      0x0d\n        /* \"contracts/Web3BetsFO.sol\":4563:4587  systemAdmins.push(_addr) */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":4597:4610  admins[_addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":4597:4618  admins[_addr] = _addr */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":4279:4625  function addSystemAdmin(address _addr)... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":5398:5803  function deleteEventAdmin(address _eventOwner) external onlySystemAdmin {... */\n    tag_160:\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      tag_345\n        /* \"contracts/Web3BetsFO.sol\":1609:1619  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1595:1608  isSystemAdmin */\n      tag_93\n        /* \"contracts/Web3BetsFO.sol\":1595:1620  isSystemAdmin(msg.sender) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/Web3BetsFO.sol\":1574:1688  require(... */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5489:5513  eventOwners[_eventOwner] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Web3BetsFO.sol\":5525:5526  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":5489:5513  eventOwners[_eventOwner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5489:5500  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5489:5513  eventOwners[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Web3BetsFO.sol\":5480:5551  require (eventOwners[_eventOwner] != address(0), \"Invalid event owner\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_246\n      jump\t// in\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5577:5601  eventOwners[_eventOwner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":5577:5588  eventOwners */\n      0x0e\n        /* \"contracts/Web3BetsFO.sol\":5577:5601  eventOwners[_eventOwner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Web3BetsFO.sol\":5570:5601  delete eventOwners[_eventOwner] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":5612:5797  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n    tag_351:\n        /* \"contracts/Web3BetsFO.sol\":5636:5647  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5636:5654  eventAdmins.length */\n      sload\n        /* \"contracts/Web3BetsFO.sol\":5632:5654  i < eventAdmins.length */\n      dup2\n      lt\n        /* \"contracts/Web3BetsFO.sol\":5612:5797  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5697:5708  _eventOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":5679:5708  eventAdmins[i] == _eventOwner */\n      and\n        /* \"contracts/Web3BetsFO.sol\":5679:5690  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5691:5692  i */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":5679:5693  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_354:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Web3BetsFO.sol\":5679:5708  eventAdmins[i] == _eventOwner */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":5675:5787  if (eventAdmins[i] == _eventOwner) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"contracts/Web3BetsFO.sol\":5735:5746  eventAdmins */\n      0x0b\n        /* \"contracts/Web3BetsFO.sol\":5747:5748  i */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":5735:5749  eventAdmins[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_253\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"contracts/Web3BetsFO.sol\":5675:5787  if (eventAdmins[i] == _eventOwner) {... */\n    tag_356:\n        /* \"contracts/Web3BetsFO.sol\":5656:5659  i++ */\n      dup1\n      tag_359\n      dup2\n      tag_183\n      jump\t// in\n    tag_359:\n      swap2\n      pop\n      pop\n        /* \"contracts/Web3BetsFO.sol\":5612:5797  for (uint256 i = 0; i < eventAdmins.length; i++) {... */\n      jump(tag_351)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2380:2412   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2362:2413   */\n      mstore\n        /* \"#utility.yul\":2429:2447   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2422:2456   */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":2335:2353   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup4\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      swap1\n      dup5\n      add\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_209\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup7\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap2\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_366\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      dup6\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      tag_367\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_369\n      swap2\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8021:8023   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8003:8024   */\n      mstore\n        /* \"#utility.yul\":8060:8062   */\n      0x2a\n        /* \"#utility.yul\":8040:8058   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8033:8063   */\n      mstore\n        /* \"#utility.yul\":8099:8133   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8079:8097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8072:8134   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":8150:8168   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8143:8183   */\n      mstore\n        /* \"#utility.yul\":8200:8219   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_166\n        /* \"#utility.yul\":7993:8225   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_375\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_376\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_374:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_376:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4158:4160   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4140:4161   */\n      mstore\n        /* \"#utility.yul\":4197:4199   */\n      0x26\n        /* \"#utility.yul\":4177:4195   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4170:4200   */\n      mstore\n        /* \"#utility.yul\":4236:4270   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":4216:4234   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4209:4271   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":4287:4305   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4280:4316   */\n      mstore\n        /* \"#utility.yul\":4333:4352   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_166\n        /* \"#utility.yul\":4130:4358   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_378:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6966:6968   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6948:6969   */\n      mstore\n        /* \"#utility.yul\":7005:7007   */\n      0x1d\n        /* \"#utility.yul\":6985:7003   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6978:7008   */\n      mstore\n        /* \"#utility.yul\":7044:7075   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":7024:7042   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7017:7076   */\n      mstore\n        /* \"#utility.yul\":7093:7111   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_166\n        /* \"#utility.yul\":6938:7117   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_383:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_386\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_386:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_390\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_389)\n    tag_390:\n      0x60\n      swap2\n      pop\n    tag_389:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_391\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_392\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_392:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_395\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_374)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8069:8214  {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_400\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_402:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_61:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_406:\n        /* \"#utility.yul\":353:382   */\n      tag_374\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":393:737   */\n    tag_65:\n        /* \"#utility.yul\":470:476   */\n      0x00\n        /* \"#utility.yul\":478:484   */\n      dup1\n        /* \"#utility.yul\":486:492   */\n      0x00\n        /* \"#utility.yul\":539:541   */\n      0x60\n        /* \"#utility.yul\":527:536   */\n      dup5\n        /* \"#utility.yul\":518:525   */\n      dup7\n        /* \"#utility.yul\":514:537   */\n      sub\n        /* \"#utility.yul\":510:542   */\n      slt\n        /* \"#utility.yul\":507:509   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":560:566   */\n      dup2\n        /* \"#utility.yul\":552:558   */\n      dup3\n        /* \"#utility.yul\":545:567   */\n      revert\n        /* \"#utility.yul\":507:509   */\n    tag_409:\n        /* \"#utility.yul\":588:617   */\n      tag_410\n        /* \"#utility.yul\":607:616   */\n      dup5\n        /* \"#utility.yul\":588:617   */\n      tag_402\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":578:617   */\n      swap3\n      pop\n        /* \"#utility.yul\":636:674   */\n      tag_411\n        /* \"#utility.yul\":670:672   */\n      0x20\n        /* \"#utility.yul\":659:668   */\n      dup6\n        /* \"#utility.yul\":655:673   */\n      add\n        /* \"#utility.yul\":636:674   */\n      tag_402\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":626:674   */\n      swap2\n      pop\n        /* \"#utility.yul\":693:731   */\n      tag_412\n        /* \"#utility.yul\":727:729   */\n      0x40\n        /* \"#utility.yul\":716:725   */\n      dup6\n        /* \"#utility.yul\":712:730   */\n      add\n        /* \"#utility.yul\":693:731   */\n      tag_402\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":683:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":497:737   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":742:1039   */\n    tag_370:\n        /* \"#utility.yul\":809:815   */\n      0x00\n        /* \"#utility.yul\":862:864   */\n      0x20\n        /* \"#utility.yul\":850:859   */\n      dup3\n        /* \"#utility.yul\":841:848   */\n      dup5\n        /* \"#utility.yul\":837:860   */\n      sub\n        /* \"#utility.yul\":833:865   */\n      slt\n        /* \"#utility.yul\":830:832   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":883:889   */\n      dup1\n        /* \"#utility.yul\":875:881   */\n      dup2\n        /* \"#utility.yul\":868:890   */\n      revert\n        /* \"#utility.yul\":830:832   */\n    tag_414:\n        /* \"#utility.yul\":920:929   */\n      dup2\n        /* \"#utility.yul\":914:930   */\n      mload\n        /* \"#utility.yul\":973:978   */\n      dup1\n        /* \"#utility.yul\":966:979   */\n      iszero\n        /* \"#utility.yul\":959:980   */\n      iszero\n        /* \"#utility.yul\":952:957   */\n      dup2\n        /* \"#utility.yul\":949:981   */\n      eq\n        /* \"#utility.yul\":939:941   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1000:1006   */\n      dup2\n        /* \"#utility.yul\":992:998   */\n      dup3\n        /* \"#utility.yul\":985:1007   */\n      revert\n        /* \"#utility.yul\":1044:1234   */\n    tag_46:\n        /* \"#utility.yul\":1103:1109   */\n      0x00\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1144:1153   */\n      dup3\n        /* \"#utility.yul\":1135:1142   */\n      dup5\n        /* \"#utility.yul\":1131:1154   */\n      sub\n        /* \"#utility.yul\":1127:1159   */\n      slt\n        /* \"#utility.yul\":1124:1126   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":1177:1183   */\n      dup1\n        /* \"#utility.yul\":1169:1175   */\n      dup2\n        /* \"#utility.yul\":1162:1184   */\n      revert\n        /* \"#utility.yul\":1124:1126   */\n    tag_417:\n      pop\n        /* \"#utility.yul\":1205:1228   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1114:1234   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1433   */\n    tag_191:\n        /* \"#utility.yul\":1309:1315   */\n      0x00\n        /* \"#utility.yul\":1362:1364   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1341:1348   */\n      dup5\n        /* \"#utility.yul\":1337:1360   */\n      sub\n        /* \"#utility.yul\":1333:1365   */\n      slt\n        /* \"#utility.yul\":1330:1332   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":1383:1389   */\n      dup1\n        /* \"#utility.yul\":1375:1381   */\n      dup2\n        /* \"#utility.yul\":1368:1390   */\n      revert\n        /* \"#utility.yul\":1330:1332   */\n    tag_419:\n      pop\n        /* \"#utility.yul\":1411:1427   */\n      mload\n      swap2\n        /* \"#utility.yul\":1320:1433   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1438:1696   */\n    tag_97:\n        /* \"#utility.yul\":1506:1512   */\n      0x00\n        /* \"#utility.yul\":1514:1520   */\n      dup1\n        /* \"#utility.yul\":1567:1569   */\n      0x40\n        /* \"#utility.yul\":1555:1564   */\n      dup4\n        /* \"#utility.yul\":1546:1553   */\n      dup6\n        /* \"#utility.yul\":1542:1565   */\n      sub\n        /* \"#utility.yul\":1538:1570   */\n      slt\n        /* \"#utility.yul\":1535:1537   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":1588:1594   */\n      dup2\n        /* \"#utility.yul\":1580:1586   */\n      dup3\n        /* \"#utility.yul\":1573:1595   */\n      revert\n        /* \"#utility.yul\":1535:1537   */\n    tag_421:\n      pop\n      pop\n        /* \"#utility.yul\":1616:1639   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1686:1688   */\n      0x20\n        /* \"#utility.yul\":1671:1689   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1658:1690   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1525:1696   */\n      jump\t// out\n        /* \"#utility.yul\":1701:1975   */\n    tag_387:\n        /* \"#utility.yul\":1830:1833   */\n      0x00\n        /* \"#utility.yul\":1868:1874   */\n      dup3\n        /* \"#utility.yul\":1862:1875   */\n      mload\n        /* \"#utility.yul\":1884:1937   */\n      tag_423\n        /* \"#utility.yul\":1930:1936   */\n      dup2\n        /* \"#utility.yul\":1925:1928   */\n      dup5\n        /* \"#utility.yul\":1918:1922   */\n      0x20\n        /* \"#utility.yul\":1910:1916   */\n      dup8\n        /* \"#utility.yul\":1906:1923   */\n      add\n        /* \"#utility.yul\":1884:1937   */\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1953:1969   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1838:1975   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2659:3042   */\n    tag_400:\n        /* \"#utility.yul\":2808:2810   */\n      0x20\n        /* \"#utility.yul\":2797:2806   */\n      dup2\n        /* \"#utility.yul\":2790:2811   */\n      mstore\n        /* \"#utility.yul\":2771:2775   */\n      0x00\n        /* \"#utility.yul\":2840:2846   */\n      dup3\n        /* \"#utility.yul\":2834:2847   */\n      mload\n        /* \"#utility.yul\":2883:2889   */\n      dup1\n        /* \"#utility.yul\":2878:2880   */\n      0x20\n        /* \"#utility.yul\":2867:2876   */\n      dup5\n        /* \"#utility.yul\":2863:2881   */\n      add\n        /* \"#utility.yul\":2856:2890   */\n      mstore\n        /* \"#utility.yul\":2899:2965   */\n      tag_429\n        /* \"#utility.yul\":2958:2964   */\n      dup2\n        /* \"#utility.yul\":2953:2955   */\n      0x40\n        /* \"#utility.yul\":2942:2951   */\n      dup6\n        /* \"#utility.yul\":2938:2956   */\n      add\n        /* \"#utility.yul\":2933:2935   */\n      0x20\n        /* \"#utility.yul\":2925:2931   */\n      dup8\n        /* \"#utility.yul\":2921:2936   */\n      add\n        /* \"#utility.yul\":2899:2965   */\n      tag_424\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3026:3028   */\n      0x1f\n        /* \"#utility.yul\":3005:3020   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3001:3030   */\n      and\n        /* \"#utility.yul\":2986:3031   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3033:3035   */\n      0x40\n        /* \"#utility.yul\":2982:3036   */\n      add\n      swap3\n        /* \"#utility.yul\":2780:3042   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:6002   */\n    tag_167:\n        /* \"#utility.yul\":5798:5800   */\n      0x20\n        /* \"#utility.yul\":5780:5801   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5837:5839   */\n      0x2a\n        /* \"#utility.yul\":5817:5835   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5810:5840   */\n      mstore\n        /* \"#utility.yul\":5876:5910   */\n      0x596f752068617665206e6f2070726976696c65676520746f2072756e20746869\n        /* \"#utility.yul\":5871:5873   */\n      0x40\n        /* \"#utility.yul\":5856:5874   */\n      dup3\n      add\n        /* \"#utility.yul\":5849:5911   */\n      mstore\n      shl(0xb1, 0x3990333ab731ba34b7b7)\n        /* \"#utility.yul\":5942:5944   */\n      0x60\n        /* \"#utility.yul\":5927:5945   */\n      dup3\n      add\n        /* \"#utility.yul\":5920:5960   */\n      mstore\n        /* \"#utility.yul\":5992:5995   */\n      0x80\n        /* \"#utility.yul\":5977:5996   */\n      add\n      swap1\n        /* \"#utility.yul\":5770:6002   */\n      jump\t// out\n        /* \"#utility.yul\":7122:7465   */\n    tag_246:\n        /* \"#utility.yul\":7324:7326   */\n      0x20\n        /* \"#utility.yul\":7306:7327   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7363:7365   */\n      0x13\n        /* \"#utility.yul\":7343:7361   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7336:7366   */\n      mstore\n      shl(0x69, 0x24b73b30b634b21032bb32b73a1037bbb732b9)\n        /* \"#utility.yul\":7397:7399   */\n      0x40\n        /* \"#utility.yul\":7382:7400   */\n      dup3\n      add\n        /* \"#utility.yul\":7375:7424   */\n      mstore\n        /* \"#utility.yul\":7456:7458   */\n      0x60\n        /* \"#utility.yul\":7441:7459   */\n      add\n      swap1\n        /* \"#utility.yul\":7296:7465   */\n      jump\t// out\n        /* \"#utility.yul\":8634:9116   */\n    tag_330:\n        /* \"#utility.yul\":8836:8838   */\n      0x20\n        /* \"#utility.yul\":8818:8839   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8875:8877   */\n      0x4e\n        /* \"#utility.yul\":8855:8873   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8848:8878   */\n      mstore\n        /* \"#utility.yul\":8914:8948   */\n      0x796f75206d7573742073657420686f6c6465727320616e642065636f73797374\n        /* \"#utility.yul\":8909:8911   */\n      0x40\n        /* \"#utility.yul\":8894:8912   */\n      dup3\n      add\n        /* \"#utility.yul\":8887:8949   */\n      mstore\n        /* \"#utility.yul\":8985:9019   */\n      0x6d654164647265737320616464726573736573206265666f726520616464696e\n        /* \"#utility.yul\":8980:8982   */\n      0x60\n        /* \"#utility.yul\":8965:8983   */\n      dup3\n      add\n        /* \"#utility.yul\":8958:9020   */\n      mstore\n      shl(0x90, 0x67206576656e74206f776e657273)\n        /* \"#utility.yul\":9051:9054   */\n      0x80\n        /* \"#utility.yul\":9036:9055   */\n      dup3\n      add\n        /* \"#utility.yul\":9029:9074   */\n      mstore\n        /* \"#utility.yul\":9106:9109   */\n      0xa0\n        /* \"#utility.yul\":9091:9110   */\n      add\n      swap1\n        /* \"#utility.yul\":8808:9116   */\n      jump\t// out\n        /* \"#utility.yul\":9303:9431   */\n    tag_235:\n        /* \"#utility.yul\":9343:9346   */\n      0x00\n        /* \"#utility.yul\":9374:9375   */\n      dup3\n        /* \"#utility.yul\":9370:9376   */\n      not\n        /* \"#utility.yul\":9367:9368   */\n      dup3\n        /* \"#utility.yul\":9364:9377   */\n      gt\n        /* \"#utility.yul\":9361:9363   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":9380:9398   */\n      tag_448\n      tag_449\n      jump\t// in\n    tag_448:\n      pop\n        /* \"#utility.yul\":9416:9425   */\n      add\n      swap1\n        /* \"#utility.yul\":9351:9431   */\n      jump\t// out\n        /* \"#utility.yul\":9436:9653   */\n    tag_198:\n        /* \"#utility.yul\":9476:9477   */\n      0x00\n        /* \"#utility.yul\":9502:9503   */\n      dup3\n        /* \"#utility.yul\":9492:9494   */\n      tag_451\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":9527:9558   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9581:9585   */\n      0x12\n        /* \"#utility.yul\":9578:9579   */\n      0x04\n        /* \"#utility.yul\":9571:9586   */\n      mstore\n        /* \"#utility.yul\":9609:9613   */\n      0x24\n        /* \"#utility.yul\":9534:9535   */\n      dup2\n        /* \"#utility.yul\":9599:9614   */\n      revert\n        /* \"#utility.yul\":9492:9494   */\n    tag_451:\n      pop\n        /* \"#utility.yul\":9638:9647   */\n      div\n      swap1\n        /* \"#utility.yul\":9482:9653   */\n      jump\t// out\n        /* \"#utility.yul\":9658:9826   */\n    tag_196:\n        /* \"#utility.yul\":9698:9705   */\n      0x00\n        /* \"#utility.yul\":9764:9765   */\n      dup2\n        /* \"#utility.yul\":9760:9761   */\n      0x00\n        /* \"#utility.yul\":9756:9762   */\n      not\n        /* \"#utility.yul\":9752:9766   */\n      div\n        /* \"#utility.yul\":9749:9750   */\n      dup4\n        /* \"#utility.yul\":9746:9767   */\n      gt\n        /* \"#utility.yul\":9741:9742   */\n      dup3\n        /* \"#utility.yul\":9734:9743   */\n      iszero\n        /* \"#utility.yul\":9727:9744   */\n      iszero\n        /* \"#utility.yul\":9723:9768   */\n      and\n        /* \"#utility.yul\":9720:9722   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":9771:9789   */\n      tag_454\n      tag_449\n      jump\t// in\n    tag_454:\n      pop\n        /* \"#utility.yul\":9811:9820   */\n      mul\n      swap1\n        /* \"#utility.yul\":9710:9826   */\n      jump\t// out\n        /* \"#utility.yul\":9831:10089   */\n    tag_424:\n        /* \"#utility.yul\":9903:9904   */\n      0x00\n        /* \"#utility.yul\":9913:10026   */\n    tag_456:\n        /* \"#utility.yul\":9927:9933   */\n      dup4\n        /* \"#utility.yul\":9924:9925   */\n      dup2\n        /* \"#utility.yul\":9921:9934   */\n      lt\n        /* \"#utility.yul\":9913:10026   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":10003:10014   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9997:10015   */\n      mload\n        /* \"#utility.yul\":9984:9995   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9977:10016   */\n      mstore\n        /* \"#utility.yul\":9949:9951   */\n      0x20\n        /* \"#utility.yul\":9942:9952   */\n      add\n        /* \"#utility.yul\":9913:10026   */\n      jump(tag_456)\n    tag_458:\n        /* \"#utility.yul\":10044:10050   */\n      dup4\n        /* \"#utility.yul\":10041:10042   */\n      dup2\n        /* \"#utility.yul\":10038:10051   */\n      gt\n        /* \"#utility.yul\":10035:10037   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":10079:10080   */\n      0x00\n        /* \"#utility.yul\":10070:10076   */\n      dup5\n        /* \"#utility.yul\":10065:10068   */\n      dup5\n        /* \"#utility.yul\":10061:10077   */\n      add\n        /* \"#utility.yul\":10054:10081   */\n      mstore\n        /* \"#utility.yul\":10035:10037   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":9884:10089   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10094:10229   */\n    tag_183:\n        /* \"#utility.yul\":10133:10136   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":10154:10171   */\n      dup3\n      eq\n        /* \"#utility.yul\":10151:10153   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":10174:10192   */\n      tag_462\n      tag_449\n      jump\t// in\n    tag_462:\n      pop\n        /* \"#utility.yul\":10221:10222   */\n      0x01\n        /* \"#utility.yul\":10210:10223   */\n      add\n      swap1\n        /* \"#utility.yul\":10141:10229   */\n      jump\t// out\n        /* \"#utility.yul\":10234:10361   */\n    tag_449:\n        /* \"#utility.yul\":10295:10305   */\n      0x4e487b71\n        /* \"#utility.yul\":10290:10293   */\n      0xe0\n        /* \"#utility.yul\":10286:10306   */\n      shl\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10276:10307   */\n      mstore\n        /* \"#utility.yul\":10326:10330   */\n      0x11\n        /* \"#utility.yul\":10323:10324   */\n      0x04\n        /* \"#utility.yul\":10316:10331   */\n      mstore\n        /* \"#utility.yul\":10350:10354   */\n      0x24\n        /* \"#utility.yul\":10347:10348   */\n      0x00\n        /* \"#utility.yul\":10340:10355   */\n      revert\n\n    auxdata: 0xa2646970667358221220ba1511aab2d991cbf569ee2b2696f3e136f22ec1a77071352c7929bf1650266c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260326007819055600855600a600955600354601080546001600160a01b0319166001600160a01b0390921691909117905534801561004157600080fd5b50600080546001600160a01b03191633179055611861806100636000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063709ec8b41161011a578063cb146622116100ad578063d54948691161007c578063d549486914610488578063d6c1ca261461049b578063e3c0ed78146104ae578063ed9f7eb9146104c1578063f2210b2c146104d457600080fd5b8063cb1466221461043c578063ce606ee01461044f578063d37e87fd14610462578063d43cbb151461047557600080fd5b80639376b94c116100e95780639376b94c146103fa578063992642e5146104035780639b460aa914610416578063a8e01b281461042957600080fd5b8063709ec8b41461038257806380036b341461039557806385d8349b146103be57806389fefbe1146103e757600080fd5b8063387440e61161019d5780634dcc434a1161016c5780634dcc434a146103235780634fb43199146103365780636488688014610349578063681ada8c1461035c5780636fdbd3f61461036f57600080fd5b8063387440e6146102d2578063429b62e5146102e9578063486d1e50146103125780634d1613241461031b57600080fd5b806323af4e17116101d957806323af4e1714610274578063273fea39146102895780632e1a96181461029c578063332daccf146102af57600080fd5b8063026c1a4d1461020b57806306a5cb3a1461023b57806306ae70951461024e5780630da4ee5014610261575b600080fd5b61021e6102193660046115e8565b6104e7565b6040516001600160a01b0390911681526020015b60405180910390f35b60015461021e906001600160a01b031681565b60055461021e906001600160a01b031681565b60025461021e906001600160a01b031681565b61028761028236600461156c565b610511565b005b610287610297366004611586565b610561565b60065461021e906001600160a01b031681565b6102c26102bd36600461156c565b6105aa565b6040519015158152602001610232565b6102db60095481565b604051908152602001610232565b61021e6102f736600461156c565b600d602052600090815260409020546001600160a01b031681565b6102db60075481565b61028761064f565b61028761033136600461156c565b610861565b6102c261034436600461156c565b6108a8565b610287610357366004611618565b610939565b61028761036a36600461156c565b610a7f565b60045461021e906001600160a01b031681565b61021e6103903660046115e8565b610ba6565b61021e6103a336600461156c565b600f602052600090815260409020546001600160a01b031681565b61021e6103cc36600461156c565b600e602052600090815260409020546001600160a01b031681565b6102876103f536600461156c565b610bb6565b6102db60085481565b60035461021e906001600160a01b031681565b61028761042436600461156c565b610bfd565b61028761043736600461156c565b610ce7565b6102c261044a36600461156c565b610d2e565b60005461021e906001600160a01b031681565b61021e6104703660046115e8565b610dbf565b61028761048336600461156c565b610dcf565b61028761049636600461156c565b610e16565b6102876104a93660046115e8565b610f21565b6102876104bc36600461156c565b610fcc565b6102876104cf36600461156c565b611091565b6102876104e236600461156c565b6111bf565b600a81815481106104f757600080fd5b6000918252602090912001546001600160a01b0316905081565b61051a336108a8565b61053f5760405162461bcd60e51b815260040161053690611688565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61056a336108a8565b6105865760405162461bcd60e51b815260040161053690611688565b600280546001600160a01b0319166001600160a01b03929092169190911790555050565b6001600160a01b038181166000908152600f602052604081205490911615610642576000805b600c5481101561063b57836001600160a01b0316600c828154811061060557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610629576001915061063b565b80610633816117fa565b9150506105d0565b5092915050565b506000919050565b919050565b6010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190611600565b9050600081116107295760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610536565b600060646007548361073b91906117ab565b610745919061178b565b9050600081116107a55760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610536565b60006064600854846107b791906117ab565b6107c1919061178b565b9050600081116108225760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610536565b60015460105461083f916001600160a01b039182169116836112c5565b60025460105461085c916001600160a01b039182169116846112c5565b505050565b61086a336108a8565b6108865760405162461bcd60e51b815260040161053690611688565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038181166000908152600d602052604081205490911615610642576000805b600a5481101561063b57836001600160a01b0316600a828154811061090357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610927576001915061063b565b80610931816117fa565b9150506108ce565b610942336108a8565b61095e5760405162461bcd60e51b815260040161053690611688565b60648211158015610970575060648111155b6109f55760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a401610536565b6109ff8183611773565b606414610a745760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f20313030000000000000006064820152608401610536565b600791909155600855565b610a88336108a8565b610aa45760405162461bcd60e51b815260040161053690611688565b6001600160a01b038181166000908152600f602052604090205416610adb5760405162461bcd60e51b8152600401610536906116d2565b6001600160a01b0381166000908152600f6020526040812080546001600160a01b03191690555b600c54811015610ba257816001600160a01b0316600c8281548110610b3757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610b9057600c8181548110610b7357634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555050565b80610b9a816117fa565b915050610b02565b5050565b600c81815481106104f757600080fd5b610bbf336108a8565b610bdb5760405162461bcd60e51b815260040161053690611688565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b610c06336108a8565b610c225760405162461bcd60e51b815260040161053690611688565b6001600160a01b038082166000908152600f602052604090205482911615610c835760405162461bcd60e51b8152602060048201526014602482015273185b1c9958591e481a5b88189b1858dadb1a5cdd60621b6044820152606401610536565b50600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039092166001600160a01b031992831681179091556000818152600e602052604090208054909216179055565b610cf0336108a8565b610d0c5760405162461bcd60e51b815260040161053690611688565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038181166000908152600e602052604081205490911615610642576000805b600b5481101561063b57836001600160a01b0316600b8281548110610d8957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610dad576001915061063b565b80610db7816117fa565b915050610d54565b600b81815481106104f757600080fd5b610dd8336108a8565b610df45760405162461bcd60e51b815260040161053690611688565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e405760405162461bcd60e51b815260040161053690611688565b6001600160a01b038181166000908152600d602052604090205416610e775760405162461bcd60e51b8152600401610536906116d2565b6001600160a01b0381166000908152600d6020526040812080546001600160a01b03191690555b600a54811015610ba257816001600160a01b0316600a8281548110610ed357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610f0f57600a8181548110610b7357634e487b7160e01b600052603260045260246000fd5b80610f19816117fa565b915050610e9e565b610f2a336108a8565b610f465760405162461bcd60e51b815260040161053690611688565b600a8110610fc75760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a401610536565b600955565b610fd5336108a8565b610ff15760405162461bcd60e51b815260040161053690611688565b6001600160a01b038082166000908152600e6020526040902054829116156110545760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c9030b71032bb32b73a1030b236b4b760511b6044820152606401610536565b6002546001600160a01b0316158061107557506001546001600160a01b0316155b610c835760405162461bcd60e51b8152600401610536906116ff565b6000546001600160a01b031633146110bb5760405162461bcd60e51b815260040161053690611688565b6001600160a01b038082166000908152600d60205260409020548291161561111e5760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c90309039bcb9ba32b69030b236b4b760511b6044820152606401610536565b6002546001600160a01b0316158061113f57506001546001600160a01b0316155b61115b5760405162461bcd60e51b8152600401610536906116ff565b50600a8054600181019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b039092166001600160a01b031992831681179091556000818152600d602052604090208054909216179055565b6111c8336108a8565b6111e45760405162461bcd60e51b815260040161053690611688565b6001600160a01b038181166000908152600e60205260409020541661121b5760405162461bcd60e51b8152600401610536906116d2565b6001600160a01b0381166000908152600e6020526040812080546001600160a01b03191690555b600b54811015610ba257816001600160a01b0316600b828154811061127757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156112b357600b8181548110610b7357634e487b7160e01b600052603260045260246000fd5b806112bd816117fa565b915050611242565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261085c928692916000916113559185169084906113d2565b80519091501561085c578080602001905181019061137391906115c8565b61085c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610536565b60606113e184846000856113eb565b90505b9392505050565b60608247101561144c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610536565b6001600160a01b0385163b6114a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610536565b600080866001600160a01b031685876040516114bf9190611639565b60006040518083038185875af1925050503d80600081146114fc576040519150601f19603f3d011682016040523d82523d6000602084013e611501565b606091505b509150915061151182828661151c565b979650505050505050565b6060831561152b5750816113e4565b82511561153b5782518084602001fd5b8160405162461bcd60e51b81526004016105369190611655565b80356001600160a01b038116811461064a57600080fd5b60006020828403121561157d578081fd5b6113e482611555565b60008060006060848603121561159a578182fd5b6115a384611555565b92506115b160208501611555565b91506115bf60408501611555565b90509250925092565b6000602082840312156115d9578081fd5b815180151581146113e4578182fd5b6000602082840312156115f9578081fd5b5035919050565b600060208284031215611611578081fd5b5051919050565b6000806040838503121561162a578182fd5b50508035926020909101359150565b6000825161164b8184602087016117ca565b9190910192915050565b60208152600082518060208401526116748160408501602087016117ca565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b60208082526013908201527224b73b30b634b21032bb32b73a1037bbb732b960691b604082015260600190565b6020808252604e908201527f796f75206d7573742073657420686f6c6465727320616e642065636f7379737460408201527f6d654164647265737320616464726573736573206265666f726520616464696e60608201526d67206576656e74206f776e65727360901b608082015260a00190565b6000821982111561178657611786611815565b500190565b6000826117a657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156117c5576117c5611815565b500290565b60005b838110156117e55781810151838201526020016117cd565b838111156117f4576000848401525b50505050565b600060001982141561180e5761180e611815565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ba1511aab2d991cbf569ee2b2696f3e136f22ec1a77071352c7929bf1650266c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0x9 SSTORE PUSH1 0x3 SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1861 DUP1 PUSH2 0x63 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x709EC8B4 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5494869 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5494869 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xE3C0ED78 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xED9F7EB9 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xF2210B2C EQ PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB146622 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xD37E87FD EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xD43CBB15 EQ PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9376B94C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x9B460AA9 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x80036B34 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x85D8349B EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x89FEFBE1 EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x4DCC434A GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x4DCC434A EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x681ADA8C EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x4D161324 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x273FEA39 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26C1A4D EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x261 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x287 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x287 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x287 PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x287 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4BC CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x51A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x56A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x605 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x629 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH2 0x633 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x10 SLOAD PUSH2 0x83F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SLOAD PUSH2 0x85C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0x12C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x86A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x903 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x927 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH2 0x931 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x942 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x536 JUMP JUMPDEST PUSH2 0x9FF DUP2 DUP4 PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xA88 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB90 JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xB9A DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB02 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBF CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC06 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x185B1C9958591E481A5B88189B1858DADB1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCF0 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDAD JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH2 0xDB7 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD54 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD8 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF0F JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0xF19 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xF2A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0xFD5 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C9030B71032BB32B73A1030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x1075 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C90309039BCB9BA32B69030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x113F JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x115B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16FF JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x11C8 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1277 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x12B3 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x12BD DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0x85C SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1355 SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x85C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13EB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1511 DUP3 DUP3 DUP7 PUSH2 0x151C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x152B JUMPI POP DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x153B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13E4 DUP3 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x159A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x15A3 DUP5 PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP PUSH2 0x15B1 PUSH1 0x20 DUP6 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BF PUSH1 0x40 DUP6 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x164B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1674 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21032BB32B73A1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4E SWAP1 DUP3 ADD MSTORE PUSH32 0x796F75206D7573742073657420686F6C6465727320616E642065636F73797374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D654164647265737320616464726573736573206265666F726520616464696E PUSH1 0x60 DUP3 ADD MSTORE PUSH14 0x67206576656E74206F776E657273 PUSH1 0x90 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1786 PUSH2 0x1815 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x1815 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x180E JUMPI PUSH2 0x180E PUSH2 0x1815 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA ISZERO GT 0xAA 0xB2 0xD9 SWAP2 0xCB CREATE2 PUSH10 0xEE2B2696F3E136F22EC1 0xA7 PUSH17 0x71352C7929BF1650266C64736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "548:7189:4:-:0;;;955:2;918:39;;;;963:41;;1050:2;1010:42;;1352:10;;1309:54;;;-1:-1:-1;;;;;;1309:54:4;-1:-1:-1;;;;;1352:10:4;;;1309:54;;;;;;2120:57;;;;;;;;;-1:-1:-1;2144:13:4;:26;;-1:-1:-1;;;;;;2144:26:4;2160:10;2144:26;;;548:7189;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10363:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:2:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:196:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:240:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "543:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "552:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "560:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "545:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "527:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "514:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "539:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "510:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:32:6"
															},
															"nodeType": "YulIf",
															"src": "507:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "578:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "607:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "588:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "578:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "626:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "659:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "670:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "655:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "655:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "636:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "683:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "727:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "693:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "693:38:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "447:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "458:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "470:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "478:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "486:6:6",
														"type": ""
													}
												],
												"src": "393:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "820:219:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "866:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "875:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "883:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "868:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "868:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "868:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "841:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "837:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "862:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "833:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:32:6"
															},
															"nodeType": "YulIf",
															"src": "830:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "901:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "914:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "905:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "983:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "992:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1000:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "985:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "985:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "952:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "973:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "966:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "966:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "959:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "959:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:40:6"
															},
															"nodeType": "YulIf",
															"src": "939:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1018:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1028:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1018:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "797:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "809:6:6",
														"type": ""
													}
												],
												"src": "742:297:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:120:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1177:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1162:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:6"
															},
															"nodeType": "YulIf",
															"src": "1124:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1195:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1205:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1195:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1080:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1091:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1103:6:6",
														"type": ""
													}
												],
												"src": "1044:190:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1320:113:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1375:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1383:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1368:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1341:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:32:6"
															},
															"nodeType": "YulIf",
															"src": "1330:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1401:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1286:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1297:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1309:6:6",
														"type": ""
													}
												],
												"src": "1239:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1525:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1571:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1580:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1588:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1573:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1573:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1573:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1546:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1542:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:32:6"
															},
															"nodeType": "YulIf",
															"src": "1535:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1606:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1629:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1616:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1606:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1648:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1675:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1671:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1671:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1658:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1483:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1494:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1514:6:6",
														"type": ""
													}
												],
												"src": "1438:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1838:137:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1848:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1868:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1862:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1852:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1918:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1906:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1906:17:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1925:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1930:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1884:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1884:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1946:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1957:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1962:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1946:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1814:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1819:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1830:3:6",
														"type": ""
													}
												],
												"src": "1701:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2091:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2103:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2114:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2091:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2133:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2148:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2164:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2169:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2160:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2160:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2173:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2156:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2156:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2144:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2126:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2126:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2050:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2061:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2072:4:6",
														"type": ""
													}
												],
												"src": "1980:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2327:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2339:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2350:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2327:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2369:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2384:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2400:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2405:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2396:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2396:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2409:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2380:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2362:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2433:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2444:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2429:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2429:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2449:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2278:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2289:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2297:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2308:4:6",
														"type": ""
													}
												],
												"src": "2188:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2584:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2595:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2580:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2572:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2614:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2639:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2632:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2632:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2625:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2625:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2607:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2607:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2531:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2542:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2553:4:6",
														"type": ""
													}
												],
												"src": "2467:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2780:262:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2797:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2808:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2790:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2790:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2820:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2840:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2824:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2867:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2878:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2883:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2856:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2925:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2933:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2921:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2921:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2942:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2953:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2958:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2899:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:66:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2974:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3009:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3017:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3005:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3005:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3026:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3022:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3022:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3001:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3001:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2986:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2982:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2974:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2749:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2760:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2771:4:6",
														"type": ""
													}
												],
												"src": "2659:383:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3221:247:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3238:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3231:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3272:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3283:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3268:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3268:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:2:6",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3261:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3261:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3311:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3322:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3307:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3327:34:6",
																		"type": "",
																		"value": "The sum of all Vig percentage sh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3300:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3393:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3378:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3398:27:6",
																		"type": "",
																		"value": "ares must be equal to 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:55:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3371:55:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3435:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3447:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3458:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3443:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3435:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3198:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3212:4:6",
														"type": ""
													}
												],
												"src": "3047:421:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3647:304:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3664:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3657:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3657:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3698:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3709:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3694:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3714:2:6",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3687:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3737:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3748:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3733:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3733:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3753:34:6",
																		"type": "",
																		"value": "Vig percentages shares must be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3808:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3819:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3804:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3824:34:6",
																		"type": "",
																		"value": "xpressed in a  0 to 100 ratio. E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3797:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3797:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3890:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3875:19:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3896:12:6",
																		"type": "",
																		"value": "xample: 30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3868:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3868:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3918:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3930:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3941:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3926:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3918:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3624:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3638:4:6",
														"type": ""
													}
												],
												"src": "3473:478:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4130:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4147:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4140:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4140:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4140:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4181:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4192:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4177:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4177:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4197:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4220:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4231:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4216:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4216:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4236:34:6",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4209:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4291:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4302:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4287:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4287:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4307:8:6",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4280:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4325:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4337:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4348:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4333:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4325:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4107:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4121:4:6",
														"type": ""
													}
												],
												"src": "3956:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4537:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4554:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4565:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4547:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4547:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4588:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4599:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4584:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4584:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4604:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4577:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4577:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4627:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4638:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4623:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4623:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4643:34:6",
																		"type": "",
																		"value": "ecosystem share must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4616:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4709:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4694:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4714:8:6",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4687:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4732:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4744:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4755:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4740:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4732:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4514:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4528:4:6",
														"type": ""
													}
												],
												"src": "4363:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4944:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4972:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4954:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4954:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4995:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5006:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4991:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4984:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5034:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5045:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5030:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5030:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5050:24:6",
																		"type": "",
																		"value": "already an event admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5023:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5084:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5096:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5107:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5092:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5084:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4921:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4935:4:6",
														"type": ""
													}
												],
												"src": "4770:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5295:296:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5312:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5305:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5305:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5346:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5357:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5362:2:6",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5385:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5396:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5381:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5401:34:6",
																		"type": "",
																		"value": "Vig percentage must be expressed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5374:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5374:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5374:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5456:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5467:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5452:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5452:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5472:34:6",
																		"type": "",
																		"value": " in 0 to 10 percentage. Example:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5445:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5445:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5527:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5538:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5523:19:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5544:4:6",
																		"type": "",
																		"value": " 6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5516:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5558:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5570:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5566:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5272:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5286:4:6",
														"type": ""
													}
												],
												"src": "5121:470:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5770:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5787:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5780:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5780:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5821:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5832:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5817:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5817:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5810:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5871:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5876:34:6",
																		"type": "",
																		"value": "You have no privilege to run thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5849:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5931:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5942:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5927:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5947:12:6",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5920:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5920:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5969:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5981:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5992:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5969:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5747:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5761:4:6",
														"type": ""
													}
												],
												"src": "5596:406:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6181:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6198:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6209:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6191:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6232:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6243:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6221:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6271:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6282:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6267:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6287:24:6",
																		"type": "",
																		"value": "already a system admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6260:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6321:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6333:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6344:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6321:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6158:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6172:4:6",
														"type": ""
													}
												],
												"src": "6007:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6532:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6549:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6542:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6542:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6583:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6594:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6579:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6599:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6572:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6572:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6633:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6618:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6638:34:6",
																		"type": "",
																		"value": "holders' share must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6611:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6611:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6693:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6704:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6689:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6689:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6709:7:6",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6682:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6682:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6682:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6726:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6738:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6749:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6726:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6509:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6523:4:6",
														"type": ""
													}
												],
												"src": "6358:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6938:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6955:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6966:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6948:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6948:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6989:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7000:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6978:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6978:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7028:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7039:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7024:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7044:31:6",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7017:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7085:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7097:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7093:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7085:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6915:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6929:4:6",
														"type": ""
													}
												],
												"src": "6764:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7296:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7313:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7324:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7306:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7306:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7347:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7358:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7343:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7343:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7336:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7336:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7386:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7397:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7382:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7382:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7402:21:6",
																		"type": "",
																		"value": "Invalid event owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7375:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7375:49:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7433:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7441:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7433:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7273:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7287:4:6",
														"type": ""
													}
												],
												"src": "7122:343:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7644:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7661:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7654:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7695:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7706:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7691:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7711:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7684:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7684:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7684:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7734:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7745:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7730:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7730:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7750:22:6",
																		"type": "",
																		"value": "already in blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7723:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7723:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7782:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7794:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7805:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7782:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7621:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7635:4:6",
														"type": ""
													}
												],
												"src": "7470:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7993:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8010:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8003:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8044:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8055:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8040:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8040:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8060:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8033:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8033:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8033:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8083:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8094:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8079:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8099:34:6",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8072:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8072:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8072:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8154:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8165:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8150:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8170:12:6",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8143:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8143:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8143:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8192:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8204:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8215:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8200:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8192:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7970:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7984:4:6",
														"type": ""
													}
												],
												"src": "7819:406:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8404:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8421:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8432:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8414:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8455:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8466:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8471:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8444:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8444:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8494:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8505:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8490:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8490:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8510:34:6",
																		"type": "",
																		"value": "bet earnings must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8483:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8483:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8483:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8565:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8576:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8581:5:6",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8554:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8554:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8596:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8608:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8619:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8604:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8604:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8596:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8381:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8395:4:6",
														"type": ""
													}
												],
												"src": "8230:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8808:308:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8825:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8836:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8818:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8859:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8870:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8855:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8855:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8875:2:6",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8848:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8848:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8898:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8909:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8894:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8914:34:6",
																		"type": "",
																		"value": "you must set holders and ecosyst"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8887:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8887:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8887:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8969:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8980:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8965:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8965:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8985:34:6",
																		"type": "",
																		"value": "meAddress addresses before addin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8958:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8958:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8958:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9040:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9051:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9036:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9036:19:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9057:16:6",
																		"type": "",
																		"value": "g event owners"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9029:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9029:45:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9083:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9095:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9106:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9091:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9091:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9083:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8785:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:6",
														"type": ""
													}
												],
												"src": "8634:482:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9222:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9232:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9244:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9255:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9232:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9274:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9285:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9267:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9191:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9202:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9213:4:6",
														"type": ""
													}
												],
												"src": "9121:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9351:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9378:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9380:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9380:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9380:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9367:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9374:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9370:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9370:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9364:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:13:6"
															},
															"nodeType": "YulIf",
															"src": "9361:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9409:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9420:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9423:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9416:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9416:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9409:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9334:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9337:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9343:3:6",
														"type": ""
													}
												],
												"src": "9303:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9482:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9513:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9534:1:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9541:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9546:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9537:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9537:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9527:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9527:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9527:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9578:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9581:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9571:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9571:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9571:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9606:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9609:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9599:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9599:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9599:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:9:6"
															},
															"nodeType": "YulIf",
															"src": "9492:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9633:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9642:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9645:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9638:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9638:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9633:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9467:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9470:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9476:1:6",
														"type": ""
													}
												],
												"src": "9436:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9710:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9769:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9771:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9771:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9771:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9741:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9734:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9734:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9727:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9727:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9749:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9760:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9756:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9756:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9764:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9752:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9752:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9746:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9746:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9723:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:45:6"
															},
															"nodeType": "YulIf",
															"src": "9720:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9800:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9815:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9818:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9811:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9800:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9689:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9692:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9698:7:6",
														"type": ""
													}
												],
												"src": "9658:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9884:205:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9894:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9903:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9898:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9963:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9988:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9993:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9984:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9984:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10007:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10012:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10003:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10003:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9997:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9997:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9977:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9977:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9977:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9924:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9927:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9921:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9921:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9935:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9937:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9946:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9949:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9942:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9942:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9937:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9917:3:6",
																"statements": []
															},
															"src": "9913:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10052:31:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10065:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10070:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10061:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10061:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10079:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10054:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10054:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10054:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10041:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10044:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10038:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:13:6"
															},
															"nodeType": "YulIf",
															"src": "10035:2:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9862:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9867:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9872:6:6",
														"type": ""
													}
												],
												"src": "9831:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10141:88:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10172:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10174:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10174:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10174:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10157:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10168:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10164:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10164:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10154:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:17:6"
															},
															"nodeType": "YulIf",
															"src": "10151:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10203:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10214:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10221:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10210:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10203:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10123:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10133:3:6",
														"type": ""
													}
												],
												"src": "10094:135:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10266:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10283:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10290:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10295:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10286:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10276:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10276:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10276:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10323:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10326:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10316:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10316:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10347:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10350:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10340:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10340:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10340:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10234:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"The sum of all Vig percentage sh\")\n        mstore(add(headStart, 96), \"ares must be equal to 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Vig percentages shares must be e\")\n        mstore(add(headStart, 96), \"xpressed in a  0 to 100 ratio. E\")\n        mstore(add(headStart, 128), \"xample: 30\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ecosystem share must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"already an event admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"Vig percentage must be expressed\")\n        mstore(add(headStart, 96), \" in 0 to 10 percentage. Example:\")\n        mstore(add(headStart, 128), \" 6\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"You have no privilege to run thi\")\n        mstore(add(headStart, 96), \"s function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"already a system admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"holders' share must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid event owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"already in blacklist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"bet earnings must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 78)\n        mstore(add(headStart, 64), \"you must set holders and ecosyst\")\n        mstore(add(headStart, 96), \"meAddress addresses before addin\")\n        mstore(add(headStart, 128), \"g event owners\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102065760003560e01c8063709ec8b41161011a578063cb146622116100ad578063d54948691161007c578063d549486914610488578063d6c1ca261461049b578063e3c0ed78146104ae578063ed9f7eb9146104c1578063f2210b2c146104d457600080fd5b8063cb1466221461043c578063ce606ee01461044f578063d37e87fd14610462578063d43cbb151461047557600080fd5b80639376b94c116100e95780639376b94c146103fa578063992642e5146104035780639b460aa914610416578063a8e01b281461042957600080fd5b8063709ec8b41461038257806380036b341461039557806385d8349b146103be57806389fefbe1146103e757600080fd5b8063387440e61161019d5780634dcc434a1161016c5780634dcc434a146103235780634fb43199146103365780636488688014610349578063681ada8c1461035c5780636fdbd3f61461036f57600080fd5b8063387440e6146102d2578063429b62e5146102e9578063486d1e50146103125780634d1613241461031b57600080fd5b806323af4e17116101d957806323af4e1714610274578063273fea39146102895780632e1a96181461029c578063332daccf146102af57600080fd5b8063026c1a4d1461020b57806306a5cb3a1461023b57806306ae70951461024e5780630da4ee5014610261575b600080fd5b61021e6102193660046115e8565b6104e7565b6040516001600160a01b0390911681526020015b60405180910390f35b60015461021e906001600160a01b031681565b60055461021e906001600160a01b031681565b60025461021e906001600160a01b031681565b61028761028236600461156c565b610511565b005b610287610297366004611586565b610561565b60065461021e906001600160a01b031681565b6102c26102bd36600461156c565b6105aa565b6040519015158152602001610232565b6102db60095481565b604051908152602001610232565b61021e6102f736600461156c565b600d602052600090815260409020546001600160a01b031681565b6102db60075481565b61028761064f565b61028761033136600461156c565b610861565b6102c261034436600461156c565b6108a8565b610287610357366004611618565b610939565b61028761036a36600461156c565b610a7f565b60045461021e906001600160a01b031681565b61021e6103903660046115e8565b610ba6565b61021e6103a336600461156c565b600f602052600090815260409020546001600160a01b031681565b61021e6103cc36600461156c565b600e602052600090815260409020546001600160a01b031681565b6102876103f536600461156c565b610bb6565b6102db60085481565b60035461021e906001600160a01b031681565b61028761042436600461156c565b610bfd565b61028761043736600461156c565b610ce7565b6102c261044a36600461156c565b610d2e565b60005461021e906001600160a01b031681565b61021e6104703660046115e8565b610dbf565b61028761048336600461156c565b610dcf565b61028761049636600461156c565b610e16565b6102876104a93660046115e8565b610f21565b6102876104bc36600461156c565b610fcc565b6102876104cf36600461156c565b611091565b6102876104e236600461156c565b6111bf565b600a81815481106104f757600080fd5b6000918252602090912001546001600160a01b0316905081565b61051a336108a8565b61053f5760405162461bcd60e51b815260040161053690611688565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61056a336108a8565b6105865760405162461bcd60e51b815260040161053690611688565b600280546001600160a01b0319166001600160a01b03929092169190911790555050565b6001600160a01b038181166000908152600f602052604081205490911615610642576000805b600c5481101561063b57836001600160a01b0316600c828154811061060557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610629576001915061063b565b80610633816117fa565b9150506105d0565b5092915050565b506000919050565b919050565b6010546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190611600565b9050600081116107295760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610536565b600060646007548361073b91906117ab565b610745919061178b565b9050600081116107a55760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610536565b60006064600854846107b791906117ab565b6107c1919061178b565b9050600081116108225760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610536565b60015460105461083f916001600160a01b039182169116836112c5565b60025460105461085c916001600160a01b039182169116846112c5565b505050565b61086a336108a8565b6108865760405162461bcd60e51b815260040161053690611688565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038181166000908152600d602052604081205490911615610642576000805b600a5481101561063b57836001600160a01b0316600a828154811061090357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610927576001915061063b565b80610931816117fa565b9150506108ce565b610942336108a8565b61095e5760405162461bcd60e51b815260040161053690611688565b60648211158015610970575060648111155b6109f55760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a401610536565b6109ff8183611773565b606414610a745760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f20313030000000000000006064820152608401610536565b600791909155600855565b610a88336108a8565b610aa45760405162461bcd60e51b815260040161053690611688565b6001600160a01b038181166000908152600f602052604090205416610adb5760405162461bcd60e51b8152600401610536906116d2565b6001600160a01b0381166000908152600f6020526040812080546001600160a01b03191690555b600c54811015610ba257816001600160a01b0316600c8281548110610b3757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610b9057600c8181548110610b7357634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546001600160a01b03191690555050565b80610b9a816117fa565b915050610b02565b5050565b600c81815481106104f757600080fd5b610bbf336108a8565b610bdb5760405162461bcd60e51b815260040161053690611688565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b610c06336108a8565b610c225760405162461bcd60e51b815260040161053690611688565b6001600160a01b038082166000908152600f602052604090205482911615610c835760405162461bcd60e51b8152602060048201526014602482015273185b1c9958591e481a5b88189b1858dadb1a5cdd60621b6044820152606401610536565b50600b8054600181019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039092166001600160a01b031992831681179091556000818152600e602052604090208054909216179055565b610cf0336108a8565b610d0c5760405162461bcd60e51b815260040161053690611688565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038181166000908152600e602052604081205490911615610642576000805b600b5481101561063b57836001600160a01b0316600b8281548110610d8957634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610dad576001915061063b565b80610db7816117fa565b915050610d54565b600b81815481106104f757600080fd5b610dd8336108a8565b610df45760405162461bcd60e51b815260040161053690611688565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610e405760405162461bcd60e51b815260040161053690611688565b6001600160a01b038181166000908152600d602052604090205416610e775760405162461bcd60e51b8152600401610536906116d2565b6001600160a01b0381166000908152600d6020526040812080546001600160a01b03191690555b600a54811015610ba257816001600160a01b0316600a8281548110610ed357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610f0f57600a8181548110610b7357634e487b7160e01b600052603260045260246000fd5b80610f19816117fa565b915050610e9e565b610f2a336108a8565b610f465760405162461bcd60e51b815260040161053690611688565b600a8110610fc75760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a401610536565b600955565b610fd5336108a8565b610ff15760405162461bcd60e51b815260040161053690611688565b6001600160a01b038082166000908152600e6020526040902054829116156110545760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c9030b71032bb32b73a1030b236b4b760511b6044820152606401610536565b6002546001600160a01b0316158061107557506001546001600160a01b0316155b610c835760405162461bcd60e51b8152600401610536906116ff565b6000546001600160a01b031633146110bb5760405162461bcd60e51b815260040161053690611688565b6001600160a01b038082166000908152600d60205260409020548291161561111e5760405162461bcd60e51b815260206004820152601660248201527530b63932b0b23c90309039bcb9ba32b69030b236b4b760511b6044820152606401610536565b6002546001600160a01b0316158061113f57506001546001600160a01b0316155b61115b5760405162461bcd60e51b8152600401610536906116ff565b50600a8054600181019091557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b039092166001600160a01b031992831681179091556000818152600d602052604090208054909216179055565b6111c8336108a8565b6111e45760405162461bcd60e51b815260040161053690611688565b6001600160a01b038181166000908152600e60205260409020541661121b5760405162461bcd60e51b8152600401610536906116d2565b6001600160a01b0381166000908152600e6020526040812080546001600160a01b03191690555b600b54811015610ba257816001600160a01b0316600b828154811061127757634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031614156112b357600b8181548110610b7357634e487b7160e01b600052603260045260246000fd5b806112bd816117fa565b915050611242565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261085c928692916000916113559185169084906113d2565b80519091501561085c578080602001905181019061137391906115c8565b61085c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610536565b60606113e184846000856113eb565b90505b9392505050565b60608247101561144c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610536565b6001600160a01b0385163b6114a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610536565b600080866001600160a01b031685876040516114bf9190611639565b60006040518083038185875af1925050503d80600081146114fc576040519150601f19603f3d011682016040523d82523d6000602084013e611501565b606091505b509150915061151182828661151c565b979650505050505050565b6060831561152b5750816113e4565b82511561153b5782518084602001fd5b8160405162461bcd60e51b81526004016105369190611655565b80356001600160a01b038116811461064a57600080fd5b60006020828403121561157d578081fd5b6113e482611555565b60008060006060848603121561159a578182fd5b6115a384611555565b92506115b160208501611555565b91506115bf60408501611555565b90509250925092565b6000602082840312156115d9578081fd5b815180151581146113e4578182fd5b6000602082840312156115f9578081fd5b5035919050565b600060208284031215611611578081fd5b5051919050565b6000806040838503121561162a578182fd5b50508035926020909101359150565b6000825161164b8184602087016117ca565b9190910192915050565b60208152600082518060208401526116748160408501602087016117ca565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b60208082526013908201527224b73b30b634b21032bb32b73a1037bbb732b960691b604082015260600190565b6020808252604e908201527f796f75206d7573742073657420686f6c6465727320616e642065636f7379737460408201527f6d654164647265737320616464726573736573206265666f726520616464696e60608201526d67206576656e74206f776e65727360901b608082015260a00190565b6000821982111561178657611786611815565b500190565b6000826117a657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156117c5576117c5611815565b500290565b60005b838110156117e55781810151838201526020016117cd565b838111156117f4576000848401525b50505050565b600060001982141561180e5761180e611815565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ba1511aab2d991cbf569ee2b2696f3e136f22ec1a77071352c7929bf1650266c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x709EC8B4 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5494869 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5494869 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xE3C0ED78 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xED9F7EB9 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xF2210B2C EQ PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB146622 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xD37E87FD EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xD43CBB15 EQ PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9376B94C GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x9B460AA9 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x80036B34 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x85D8349B EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x89FEFBE1 EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x4DCC434A GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x4DCC434A EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x681ADA8C EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x6FDBD3F6 EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x387440E6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x429B62E5 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x4D161324 EQ PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x273FEA39 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x2E1A9618 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x332DACCF EQ PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26C1A4D EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x6AE7095 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x261 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x287 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x232 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x64F JUMP JUMPDEST PUSH2 0x287 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x1618 JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x2DB PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH2 0x287 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x21E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x287 PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x287 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4BC CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0xFCC JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4CF CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH2 0x287 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x11BF JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x51A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x56A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x605 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x629 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH2 0x633 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D0 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CB SWAP2 SWAP1 PUSH2 0x1600 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP5 PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH2 0x7C1 SWAP2 SWAP1 PUSH2 0x178B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x10 SLOAD PUSH2 0x83F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SLOAD PUSH2 0x85C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0x12C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x86A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x903 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x927 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH2 0x931 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x942 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x9F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x536 JUMP JUMPDEST PUSH2 0x9FF DUP2 DUP4 PUSH2 0x1773 JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xA88 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB37 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB90 JUMPI PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH2 0xB9A DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB02 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBF CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC06 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x185B1C9958591E481A5B88189B1858DADB1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xCF0 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xD0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x63B JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xDAD JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x63B JUMP JUMPDEST DUP1 PUSH2 0xDB7 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD54 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD8 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF0F JUMPI PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0xF19 DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xF2A CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xF46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH2 0xFD5 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C9030B71032BB32B73A1030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x1075 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP2 AND ISZERO PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x30B63932B0B23C90309039BCB9BA32B69030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x113F JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO JUMPDEST PUSH2 0x115B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16FF JUMP JUMPDEST POP PUSH1 0xA DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x11C8 CALLER PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xBA2 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1277 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x12B3 JUMPI PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x12BD DUP2 PUSH2 0x17FA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 SWAP1 DUP5 ADD MSTORE PUSH2 0x85C SWAP3 DUP7 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1355 SWAP2 DUP6 AND SWAP1 DUP5 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x85C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E1 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13EB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x144C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x14A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1511 DUP3 DUP3 DUP7 PUSH2 0x151C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x152B JUMPI POP DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x153B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1655 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x13E4 DUP3 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x159A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x15A3 DUP5 PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP PUSH2 0x15B1 PUSH1 0x20 DUP6 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BF PUSH1 0x40 DUP6 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13E4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162A JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x164B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1674 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x24B73B30B634B21032BB32B73A1037BBB732B9 PUSH1 0x69 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4E SWAP1 DUP3 ADD MSTORE PUSH32 0x796F75206D7573742073657420686F6C6465727320616E642065636F73797374 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6D654164647265737320616464726573736573206265666F726520616464696E PUSH1 0x60 DUP3 ADD MSTORE PUSH14 0x67206576656E74206F776E657273 PUSH1 0x90 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1786 PUSH2 0x1815 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x17A6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x1815 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x180E JUMPI PUSH2 0x180E PUSH2 0x1815 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA ISZERO GT 0xAA 0xB2 0xD9 SWAP2 0xCB CREATE2 PUSH10 0xEE2B2696F3E136F22EC1 0xA7 PUSH17 0x71352C7929BF1650266C64736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "548:7189:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1059:29;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2144:32:6;;;2126:51;;2114:2;2099:18;1059:29:4;;;;;;;;661:40;;;;;-1:-1:-1;;;;;661:40:4;;;834:37;;;;;-1:-1:-1;;;;;834:37:4;;;707:38;;;;;-1:-1:-1;;;;;707:38:4;;;2457:104;;;;;;:::i;:::-;;:::i;:::-;;2187:146;;;;;;:::i;:::-;;:::i;877:34::-;;;;;-1:-1:-1;;;;;877:34:4;;;7300:434;;;;;;:::i;:::-;;:::i;:::-;;;2632:14:6;;2625:22;2607:41;;2595:2;2580:18;7300:434:4;2562:92:6;1010:42:4;;;;;;;;;9267:25:6;;;9255:2;9240:18;1010:42:4;9222:76:6;1161:41:4;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1161:41:4;;;918:39;;;;;;3635:634;;;:::i;2681:110::-;;;;;;:::i;:::-;;:::i;6396:445::-;;;;;;:::i;:::-;;:::i;3168:461::-;;;;;;:::i;:::-;;:::i;6002:388::-;;;;;;:::i;:::-;;:::i;792:36::-;;;;;-1:-1:-1;;;;;792:36:4;;;1128:26;;;;;;:::i;:::-;;:::i;1260:42::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1260:42:4;;;1208:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1208:46:4;;;2797:104;;;;;;:::i;:::-;;:::i;963:41::-;;;;;;751:34;;;;;-1:-1:-1;;;;;751:34:4;;;5813:183;;;;;;:::i;:::-;;:::i;2339:112::-;;;;;;:::i;:::-;;:::i;6847:447::-;;;;;;:::i;:::-;;:::i;622:28::-;;;;;-1:-1:-1;;;;;622:28:4;;;1094;;;;;;:::i;:::-;;:::i;2567:108::-;;;;;;:::i;:::-;;:::i;4631:396::-;;;;;;:::i;:::-;;:::i;2907:255::-;;;;;;:::i;:::-;;:::i;5037:355::-;;;;;;:::i;:::-;;:::i;4279:346::-;;;;;;:::i;:::-;;:::i;5398:405::-;;;;;;:::i;:::-;;:::i;1059:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1059:29:4;;-1:-1:-1;1059:29:4;:::o;2457:104::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;;;;;;;;;2531:14:::1;:23:::0;;-1:-1:-1;;;;;;2531:23:4::1;-1:-1:-1::0;;;;;2531:23:4;;;::::1;::::0;;;::::1;::::0;;2457:104::o;2187:146::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2303:14:::1;:23:::0;;-1:-1:-1;;;;;;2303:23:4::1;-1:-1:-1::0;;;;;2303:23:4;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;2187:146:4:o;7300:434::-;-1:-1:-1;;;;;7381:14:4;;;7362:4;7381:14;;;:7;:14;;;;;;7362:4;;7381:14;:28;7378:350;;7424:10;7461:9;7456:186;7480:9;:16;7476:20;;7456:186;;;7541:5;-1:-1:-1;;;;;7525:21:4;:9;7535:1;7525:12;;;;;;-1:-1:-1;;;7525:12:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7525:12:4;:21;7521:107;;;7578:4;7570:12;;7604:5;;7521:107;7498:3;;;;:::i;:::-;;;;7456:186;;;-1:-1:-1;7662:5:4;7300:434;-1:-1:-1;;7300:434:4:o;7378:350::-;-1:-1:-1;7712:5:4;;7300:434;-1:-1:-1;7300:434:4:o;7378:350::-;7300:434;;;:::o;3635:634::-;3712:18;;:43;;-1:-1:-1;;;3712:43:4;;3749:4;3712:43;;;2126:51:6;3691:18:4;;-1:-1:-1;;;;;3712:18:4;;:28;;2099:18:6;;3712:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3691:64;;3786:1;3773:10;:14;3765:62;;;;-1:-1:-1;;;3765:62:4;;8432:2:6;3765:62:4;;;8414:21:6;8471:2;8451:18;;;8444:30;8510:34;8490:18;;;8483:62;-1:-1:-1;;;8561:18:6;;;8554:33;8604:19;;3765:62:4;8404:225:6;3765:62:4;3837:20;3888:3;3874:10;;3861;:23;;;;:::i;:::-;3860:31;;;;:::i;:::-;3837:54;;3924:1;3909:12;:16;3901:66;;;;-1:-1:-1;;;3901:66:4;;6560:2:6;3901:66:4;;;6542:21:6;6599:2;6579:18;;;6572:30;6638:34;6618:18;;;6611:62;-1:-1:-1;;;6689:18:6;;;6682:35;6734:19;;3901:66:4;6532:227:6;3901:66:4;3977:22;4032:3;4016:12;;4003:10;:25;;;;:::i;:::-;4002:33;;;;:::i;:::-;3977:58;;4070:1;4053:14;:18;4045:69;;;;-1:-1:-1;;;4045:69:4;;4565:2:6;4045:69:4;;;4547:21:6;4604:2;4584:18;;;4577:30;4643:34;4623:18;;;4616:62;-1:-1:-1;;;4694:18:6;;;4687:36;4740:19;;4045:69:4;4537:228:6;4045:69:4;4157:16;;4125:18;;:65;;-1:-1:-1;;;;;4125:18:4;;;;4157:16;4175:14;4125:31;:65::i;:::-;4233:14;;4201:18;;:61;;-1:-1:-1;;;;;4201:18:4;;;;4233:14;4249:12;4201:31;:61::i;:::-;3635:634;;;:::o;2681:110::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2760:13:::1;:24:::0;;-1:-1:-1;;;;;;2760:24:4::1;-1:-1:-1::0;;;;;2760:24:4;;;::::1;::::0;;;::::1;::::0;;2681:110::o;6396:445::-;-1:-1:-1;;;;;6483:13:4;;;6464:4;6483:13;;;:6;:13;;;;;;6464:4;;6483:13;:27;6480:355;;6525:10;6562:9;6557:192;6581:12;:19;6577:23;;6557:192;;;6648:5;-1:-1:-1;;;;;6629:24:4;:12;6642:1;6629:15;;;;;;-1:-1:-1;;;6629:15:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6629:15:4;:24;6625:110;;;6685:4;6677:12;;6711:5;;6625:110;6602:3;;;;:::i;:::-;;;;6557:192;;3168:461;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;3314:3:::1;3306:4;:11;;:26;;;;;3329:3;3321:4;:11;;3306:26;3285:147;;;::::0;-1:-1:-1;;;3285:147:4;;3675:2:6;3285:147:4::1;::::0;::::1;3657:21:6::0;3714:2;3694:18;;;3687:30;3753:34;3733:18;;;3726:62;3824:34;3804:18;;;3797:62;-1:-1:-1;;;3875:19:6;;;3868:41;3926:19;;3285:147:4::1;3647:304:6::0;3285:147:4::1;3463:11;3470:4:::0;3463;:11:::1;:::i;:::-;3479:3;3463:19;3442:123;;;::::0;-1:-1:-1;;;3442:123:4;;3249:2:6;3442:123:4::1;::::0;::::1;3231:21:6::0;3288:2;3268:18;;;3261:30;3327:34;3307:18;;;3300:62;3398:27;3378:18;;;3371:55;3443:19;;3442:123:4::1;3221:247:6::0;3442:123:4::1;3576:10;:17:::0;;;;3603:12:::1;:19:::0;3168:461::o;6002:388::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;6090:20:4;;::::1;6122:1;6090:20:::0;;;:7:::1;:20;::::0;;;;;::::1;6081:67;;;;-1:-1:-1::0;;;6081:67:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6174:20:4;::::1;;::::0;;;:7:::1;:20;::::0;;;;6167:27;;-1:-1:-1;;;;;;6167:27:4::1;::::0;;6205:179:::1;6229:9;:16:::0;6225:20;::::1;6205:179;;;6286:11;-1:-1:-1::0;;;;;6270:27:4::1;:9;6280:1;6270:12;;;;;;-1:-1:-1::0;;;6270:12:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;6270:12:4::1;:27;6266:108;;;6324:9;6334:1;6324:12;;;;;;-1:-1:-1::0;;;6324:12:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;6317:19:::0;;-1:-1:-1;;;;;;6317:19:4::1;::::0;;6205:179:::1;6002:388:::0;:::o;6266:108::-:1;6247:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6205:179;;;;6002:388:::0;:::o;1128:26::-;;;;;;;;;;;;2797:104;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2873:10:::1;:21:::0;;-1:-1:-1;;;;;;2873:21:4::1;-1:-1:-1::0;;;;;2873:21:4;;;::::1;::::0;;;::::1;::::0;;2797:104::o;5813:183::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;2043:14:4;;::::1;2069:1;2043:14:::0;;;:7:::1;:14;::::0;;;;;5909:5;;2043:14:::1;:28:::0;2035:61:::1;;;::::0;-1:-1:-1;;;2035:61:4;;7672:2:6;2035:61:4::1;::::0;::::1;7654:21:6::0;7711:2;7691:18;;;7684:30;-1:-1:-1;;;7730:18:6;;;7723:50;7790:18;;2035:61:4::1;7644:170:6::0;2035:61:4::1;-1:-1:-1::0;5930:11:4::2;:23:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;5930:23:4;;::::2;-1:-1:-1::0;;;;;;5930:23:4;;::::2;::::0;::::2;::::0;;;-1:-1:-1;5963:18:4;;;:11:::2;5930:23;5963:18:::0;;;;:26;;;;::::2;;::::0;;5813:183::o;2339:112::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2419:16:::1;:25:::0;;-1:-1:-1;;;;;;2419:25:4::1;-1:-1:-1::0;;;;;2419:25:4;;;::::1;::::0;;;::::1;::::0;;2339:112::o;6847:447::-;-1:-1:-1;;;;;6933:18:4;;;6914:4;6933:18;;;:11;:18;;;;;;6914:4;;6933:18;:32;6930:358;;6980:10;7017:9;7012:190;7036:11;:18;7032:22;;7012:190;;;7101:5;-1:-1:-1;;;;;7083:23:4;:11;7095:1;7083:14;;;;;;-1:-1:-1;;;7083:14:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7083:14:4;:23;7079:109;;;7138:4;7130:12;;7164:5;;7079:109;7056:3;;;;:::i;:::-;;;;7012:190;;1094:28;;;;;;;;;;;;2567:108;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;2645:12:::1;:23:::0;;-1:-1:-1;;;;;;2645:23:4::1;-1:-1:-1::0;;;;;2645:23:4;;;::::1;::::0;;;::::1;::::0;;2567:108::o;4631:396::-;1435:13;;-1:-1:-1;;;;;1435:13:4;1421:10;:27;1400:116;;;;-1:-1:-1;;;1400:116:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;4717:20:4;;::::1;4749:1;4717:20:::0;;;:6:::1;:20;::::0;;;;;::::1;4708:67;;;;-1:-1:-1::0;;;4708:67:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4801:20:4;::::1;;::::0;;;:6:::1;:20;::::0;;;;4794:27;;-1:-1:-1;;;;;;4794:27:4::1;::::0;;4832:189:::1;4856:12;:19:::0;4852:23;::::1;4832:189;;;4919:12;-1:-1:-1::0;;;;;4900:31:4::1;:12;4913:1;4900:15;;;;;;-1:-1:-1::0;;;4900:15:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4900:15:4::1;:31;4896:115;;;4958:12;4971:1;4958:15;;;;;;-1:-1:-1::0;;;4958:15:4::1;;;;;;;;4896:115;4877:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4832:189;;2907:255:::0;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;3024:2:::1;3010:11;:16;2989:129;;;::::0;-1:-1:-1;;;2989:129:4;;5323:2:6;2989:129:4::1;::::0;::::1;5305:21:6::0;5362:2;5342:18;;;5335:30;5401:34;5381:18;;;5374:62;5472:34;5452:18;;;5445:62;-1:-1:-1;;;5523:19:6;;;5516:33;5566:19;;2989:129:4::1;5295:296:6::0;2989:129:4::1;3128:13;:27:::0;2907:255::o;5037:355::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1907:18:4;;::::1;1937:1;1907:18:::0;;;:11:::1;:18;::::0;;;;;5141:5;;1907:18:::1;:32:::0;1899:67:::1;;;::::0;-1:-1:-1;;;1899:67:4;;4972:2:6;1899:67:4::1;::::0;::::1;4954:21:6::0;5011:2;4991:18;;;4984:30;-1:-1:-1;;;5030:18:6;;;5023:52;5092:18;;1899:67:4::1;4944:172:6::0;1899:67:4::1;5170:14:::2;::::0;-1:-1:-1;;;;;5170:14:4::2;:28:::0;;:62:::2;;-1:-1:-1::0;5202:16:4::2;::::0;-1:-1:-1;;;;;5202:16:4::2;:30:::0;5170:62:::2;5162:153;;;;-1:-1:-1::0;;;5162:153:4::2;;;;;;;:::i;4279:346::-:0;1435:13;;-1:-1:-1;;;;;1435:13:4;1421:10;:27;1400:116;;;;-1:-1:-1;;;1400:116:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1771:13:4;;::::1;1796:1;1771:13:::0;;;:6:::1;:13;::::0;;;;;4378:5;;1771:13:::1;:27:::0;1763:62:::1;;;::::0;-1:-1:-1;;;1763:62:4;;6209:2:6;1763:62:4::1;::::0;::::1;6191:21:6::0;6248:2;6228:18;;;6221:30;-1:-1:-1;;;6267:18:6;;;6260:52;6329:18;;1763:62:4::1;6181:172:6::0;1763:62:4::1;4407:14:::2;::::0;-1:-1:-1;;;;;4407:14:4::2;:28:::0;;:62:::2;;-1:-1:-1::0;4439:16:4::2;::::0;-1:-1:-1;;;;;4439:16:4::2;:30:::0;4407:62:::2;4399:153;;;;-1:-1:-1::0;;;4399:153:4::2;;;;;;;:::i;:::-;-1:-1:-1::0;4563:12:4::2;:24:::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;4563:24:4;;::::2;-1:-1:-1::0;;;;;;4563:24:4;;::::2;::::0;::::2;::::0;;;-1:-1:-1;4597:13:4;;;:6:::2;4563:24;4597:13:::0;;;;:21;;;;::::2;;::::0;;4279:346::o;5398:405::-;1595:25;1609:10;1595:13;:25::i;:::-;1574:114;;;;-1:-1:-1;;;1574:114:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;5489:24:4;;::::1;5525:1;5489:24:::0;;;:11:::1;:24;::::0;;;;;::::1;5480:71;;;;-1:-1:-1::0;;;5480:71:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5577:24:4;::::1;;::::0;;;:11:::1;:24;::::0;;;;5570:31;;-1:-1:-1;;;;;;5570:31:4::1;::::0;;5612:185:::1;5636:11;:18:::0;5632:22;::::1;5612:185;;;5697:11;-1:-1:-1::0;;;;;5679:29:4::1;:11;5691:1;5679:14;;;;;;-1:-1:-1::0;;;5679:14:4::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5679:14:4::1;:29;5675:112;;;5735:11;5747:1;5735:14;;;;;;-1:-1:-1::0;;;5735:14:4::1;;;;;;;;5675:112;5656:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5612:185;;763:205:2::0;902:58;;;-1:-1:-1;;;;;2380:32:6;;;902:58:2;;;2362:51:6;2429:18;;;;2422:34;;;902:58:2;;;;;;;;;;2335:18:6;;;;902:58:2;;;;;;;;-1:-1:-1;;;;;902:58:2;-1:-1:-1;;;902:58:2;;;4192:69;;;;;;;;;;;;;;;;875:86;;895:5;;902:58;-1:-1:-1;;4192:69:2;;:27;;;902:58;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:2;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:2;;8021:2:6;4351:85:2;;;8003:21:6;8060:2;8040:18;;;8033:30;8099:34;8079:18;;;8072:62;-1:-1:-1;;;8150:18:6;;;8143:40;8200:19;;4351:85:2;7993:232:6;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;4158:2:6;5137:81:3;;;4140:21:6;4197:2;4177:18;;;4170:30;4236:34;4216:18;;;4209:62;-1:-1:-1;;;4287:18:6;;;4280:36;4333:19;;5137:81:3;4130:228:6;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;6966:2:6;5228:60:3;;;6948:21:6;7005:2;6985:18;;;6978:30;7044:31;7024:18;;;7017:59;7093:18;;5228:60:3;6938:179:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:3;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;-1:-1:-1;;;8252:20:3;;;;;;;;:::i;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:344::-;470:6;478;486;539:2;527:9;518:7;514:23;510:32;507:2;;;560:6;552;545:22;507:2;588:29;607:9;588:29;:::i;:::-;578:39;;636:38;670:2;659:9;655:18;636:38;:::i;:::-;626:48;;693:38;727:2;716:9;712:18;693:38;:::i;:::-;683:48;;497:240;;;;;:::o;742:297::-;809:6;862:2;850:9;841:7;837:23;833:32;830:2;;;883:6;875;868:22;830:2;920:9;914:16;973:5;966:13;959:21;952:5;949:32;939:2;;1000:6;992;985:22;1044:190;1103:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:2;;;1177:6;1169;1162:22;1124:2;-1:-1:-1;1205:23:6;;1114:120;-1:-1:-1;1114:120:6:o;1239:194::-;1309:6;1362:2;1350:9;1341:7;1337:23;1333:32;1330:2;;;1383:6;1375;1368:22;1330:2;-1:-1:-1;1411:16:6;;1320:113;-1:-1:-1;1320:113:6:o;1438:258::-;1506:6;1514;1567:2;1555:9;1546:7;1542:23;1538:32;1535:2;;;1588:6;1580;1573:22;1535:2;-1:-1:-1;;1616:23:6;;;1686:2;1671:18;;;1658:32;;-1:-1:-1;1525:171:6:o;1701:274::-;1830:3;1868:6;1862:13;1884:53;1930:6;1925:3;1918:4;1910:6;1906:17;1884:53;:::i;:::-;1953:16;;;;;1838:137;-1:-1:-1;;1838:137:6:o;2659:383::-;2808:2;2797:9;2790:21;2771:4;2840:6;2834:13;2883:6;2878:2;2867:9;2863:18;2856:34;2899:66;2958:6;2953:2;2942:9;2938:18;2933:2;2925:6;2921:15;2899:66;:::i;:::-;3026:2;3005:15;-1:-1:-1;;3001:29:6;2986:45;;;;3033:2;2982:54;;2780:262;-1:-1:-1;;2780:262:6:o;5596:406::-;5798:2;5780:21;;;5837:2;5817:18;;;5810:30;5876:34;5871:2;5856:18;;5849:62;-1:-1:-1;;;5942:2:6;5927:18;;5920:40;5992:3;5977:19;;5770:232::o;7122:343::-;7324:2;7306:21;;;7363:2;7343:18;;;7336:30;-1:-1:-1;;;7397:2:6;7382:18;;7375:49;7456:2;7441:18;;7296:169::o;8634:482::-;8836:2;8818:21;;;8875:2;8855:18;;;8848:30;8914:34;8909:2;8894:18;;8887:62;8985:34;8980:2;8965:18;;8958:62;-1:-1:-1;;;9051:3:6;9036:19;;9029:45;9106:3;9091:19;;8808:308::o;9303:128::-;9343:3;9374:1;9370:6;9367:1;9364:13;9361:2;;;9380:18;;:::i;:::-;-1:-1:-1;9416:9:6;;9351:80::o;9436:217::-;9476:1;9502;9492:2;;-1:-1:-1;;;9527:31:6;;9581:4;9578:1;9571:15;9609:4;9534:1;9599:15;9492:2;-1:-1:-1;9638:9:6;;9482:171::o;9658:168::-;9698:7;9764:1;9760;9756:6;9752:14;9749:1;9746:21;9741:1;9734:9;9727:17;9723:45;9720:2;;;9771:18;;:::i;:::-;-1:-1:-1;9811:9:6;;9710:116::o;9831:258::-;9903:1;9913:113;9927:6;9924:1;9921:13;9913:113;;;10003:11;;;9997:18;9984:11;;;9977:39;9949:2;9942:10;9913:113;;;10044:6;10041:1;10038:13;10035:2;;;10079:1;10070:6;10065:3;10061:16;10054:27;10035:2;;9884:205;;;:::o;10094:135::-;10133:3;-1:-1:-1;;10154:17:6;;10151:2;;;10174:18;;:::i;:::-;-1:-1:-1;10221:1:6;10210:13;;10141:88::o;10234:127::-;10295:10;10290:3;10286:20;10283:1;10276:31;10326:4;10323:1;10316:15;10350:4;10347:1;10340:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1248200",
								"executionCost": "103827",
								"totalCost": "1352027"
							},
							"external": {
								"addBlacked(address)": "infinite",
								"addEventAdmin(address)": "infinite",
								"addSystemAdmin(address)": "66434",
								"admins(address)": "1315",
								"betFactory()": "1116",
								"blackList(uint256)": "2049",
								"blacked(address)": "1315",
								"contractOwner()": "1093",
								"deleteEventAdmin(address)": "infinite",
								"deleteSystemAdmin(address)": "infinite",
								"ecosystemAddress()": "1095",
								"ecosystemVig()": "1040",
								"eventAdmins(uint256)": "2092",
								"eventFactory()": "1159",
								"eventOwners(address)": "1337",
								"holdersAddress()": "1139",
								"holdersVig()": "1085",
								"isBlack(address)": "infinite",
								"isEventAdmin(address)": "infinite",
								"isSystemAdmin(address)": "infinite",
								"marketFactory()": "1117",
								"removeBlacked(address)": "infinite",
								"setBetFactory(address)": "infinite",
								"setEcosystemAddress(address)": "infinite",
								"setEventFactory(address)": "infinite",
								"setMarketFactory(address)": "infinite",
								"setStableCoin(address)": "infinite",
								"setSystemAddresses(address,address,address)": "infinite",
								"setVigPercentage(uint256)": "infinite",
								"setVigPercentageShares(uint256,uint256)": "infinite",
								"shareBetEarnings()": "infinite",
								"stableCoin()": "1093",
								"systemAdmins(uint256)": "2050",
								"vigPercentage()": "1041"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 548,
									"end": 7737,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 955,
									"end": 957,
									"name": "PUSH",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 918,
									"end": 957,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 918,
									"end": 957,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 918,
									"end": 957,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 918,
									"end": 957,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 963,
									"end": 1004,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 963,
									"end": 1004,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1050,
									"end": 1052,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1010,
									"end": 1052,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1010,
									"end": 1052,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "PUSH",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1362,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1363,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2120,
									"end": 2177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2144,
									"end": 2157,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2160,
									"end": 2170,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2144,
									"end": 2170,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 548,
									"end": 7737,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba1511aab2d991cbf569ee2b2696f3e136f22ec1a77071352c7929bf1650266c64736f6c63430008040033",
									".code": [
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "709EC8B4"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "CB146622"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "D5494869"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "D5494869"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "D6C1CA26"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "E3C0ED78"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "ED9F7EB9"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "F2210B2C"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "CB146622"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "CE606EE0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "D37E87FD"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "D43CBB15"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "9376B94C"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "9376B94C"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "992642E5"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "9B460AA9"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "A8E01B28"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "709EC8B4"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "80036B34"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "85D8349B"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "89FEFBE1"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "387440E6"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "4DCC434A"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "4DCC434A"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "4FB43199"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "64886880"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "681ADA8C"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "6FDBD3F6"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "387440E6"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "429B62E5"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "486D1E50"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "4D161324"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "23AF4E17"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "23AF4E17"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "273FEA39"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "2E1A9618"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "332DACCF"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "26C1A4D"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "6A5CB3A"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "6AE7095"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "DA4EE50"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 548,
											"end": 7737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2116,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 661,
											"end": 701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 661,
											"end": 701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 701,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 834,
											"end": 871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 834,
											"end": 871,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 834,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 834,
											"end": 871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 834,
											"end": 871,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 707,
											"end": 745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 707,
											"end": 745,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 707,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 707,
											"end": 745,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 707,
											"end": 745,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 877,
											"end": 911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 877,
											"end": 911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 877,
											"end": 911,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2646,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2647,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2648,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2562,
											"end": 2654,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9267,
											"end": 9292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9267,
											"end": 9292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9267,
											"end": 9292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9257,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 9222,
											"end": 9298,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1202,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 918,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 918,
											"end": 957,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 918,
											"end": 957,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 918,
											"end": 957,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 792,
											"end": 828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 792,
											"end": 828,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 792,
											"end": 828,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1254,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 963,
											"end": 1004,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 751,
											"end": 785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 751,
											"end": 785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 622,
											"end": 650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 622,
											"end": 650,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 622,
											"end": 650,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1088,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2545,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2317,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2333,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7388,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7409,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7378,
											"end": 7728,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7424,
											"end": 7434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 7480,
											"end": 7496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7496,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7534,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 7535,
											"end": 7536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7525,
											"end": 7537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7546,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7521,
											"end": 7628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7521,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7521,
											"end": 7628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7570,
											"end": 7582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7604,
											"end": 7609,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7521,
											"end": 7628,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7521,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7456,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7662,
											"end": 7667,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7378,
											"end": 7728,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7378,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7712,
											"end": 7717,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7378,
											"end": 7728,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7378,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7300,
											"end": 7734,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3749,
											"end": 3753,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3712,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2099,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2099,
											"end": 2117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3712,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3691,
											"end": 3755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3691,
											"end": 3755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3787,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8414,
											"end": 8435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8471,
											"end": 8473,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8510,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "626574206561726E696E6773206D757374206265206772656174657220746861"
										},
										{
											"begin": 8490,
											"end": 8508,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8490,
											"end": 8508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8483,
											"end": 8545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8623,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8604,
											"end": 8623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 8404,
											"end": 8629,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3891,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3874,
											"end": 3884,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3874,
											"end": 3884,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3860,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 3891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3925,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6560,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6542,
											"end": 6563,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6579,
											"end": 6597,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6579,
											"end": 6597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6602,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6672,
											"name": "PUSH",
											"source": 6,
											"value": "686F6C6465727327207368617265206D75737420626520677265617465722074"
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6611,
											"end": 6673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6753,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6734,
											"end": 6753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6532,
											"end": 6759,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3901,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 3999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4013,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4003,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4002,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 4035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4565,
											"end": 4567,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4677,
											"name": "PUSH",
											"source": 6,
											"value": "65636F73797374656D207368617265206D757374206265206772656174657220"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4723,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4759,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4740,
											"end": 4759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4537,
											"end": 4765,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4045,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4157,
											"end": 4173,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4157,
											"end": 4173,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4125,
											"end": 4190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4157,
											"end": 4173,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4125,
											"end": 4190,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4125,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4125,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4247,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4233,
											"end": 4247,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4201,
											"end": 4262,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4247,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4201,
											"end": 4262,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4201,
											"end": 4262,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4201,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 4269,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2791,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6396,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6489,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6480,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6480,
											"end": 6835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6593,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6581,
											"end": 6600,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6577,
											"end": 6600,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6648,
											"end": 6653,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6641,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6625,
											"end": 6735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6689,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6677,
											"end": 6689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6735,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6625,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 6557,
											"end": 6749,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3306,
											"end": 3310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3317,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3317,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3321,
											"end": 3325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3332,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3332,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3306,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 6,
											"value": "4A"
										},
										{
											"begin": 3694,
											"end": 3712,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3694,
											"end": 3712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3687,
											"end": 3717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "5669672070657263656E746167657320736861726573206D7573742062652065"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3858,
											"name": "PUSH",
											"source": 6,
											"value": "787072657373656420696E206120203020746F2031303020726174696F2E2045"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3859,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78616D706C653A20333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3909,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3647,
											"end": 3951,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3285,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3482,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3291,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3361,
											"name": "PUSH",
											"source": 6,
											"value": "5468652073756D206F6620616C6C205669672070657263656E74616765207368"
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3425,
											"name": "PUSH",
											"source": 6,
											"value": "61726573206D75737420626520657175616C20746F2031303000000000000000"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3443,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3443,
											"end": 3462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3221,
											"end": 3468,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3442,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3586,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3629,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6122,
											"end": 6123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6097,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 6081,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6181,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6194,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6167,
											"end": 6194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6194,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6229,
											"end": 6245,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6245,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6286,
											"end": 6297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6270,
											"end": 6297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6374,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6266,
											"end": 6374,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6333,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6336,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6336,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6336,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6266,
											"end": 6374,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6266,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6205,
											"end": 6384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6390,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2883,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2894,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2901,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2071,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7672,
											"end": 7674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7654,
											"end": 7675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7713,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 7714,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185B1C9958591E481A5B88189B1858DADB1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 7773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7790,
											"end": 7808,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7790,
											"end": 7808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7644,
											"end": 7814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 2035,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5930,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "PUSH",
											"source": 4,
											"value": "175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9"
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 5930,
											"end": 5953,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5963,
											"end": 5989,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5813,
											"end": 5996,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2435,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2444,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2451,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6847,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6944,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6951,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 6965,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6930,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6930,
											"end": 7288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 6990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7047,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 7036,
											"end": 7054,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7032,
											"end": 7054,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7106,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7094,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 7095,
											"end": 7096,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7106,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7188,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7079,
											"end": 7188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7130,
											"end": 7142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7130,
											"end": 7142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7079,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 7012,
											"end": 7202,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1122,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2657,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2668,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2675,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4631,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1448,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4723,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4737,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 4708,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4821,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4821,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4856,
											"end": 4875,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4875,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4913,
											"end": 4914,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4931,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 5011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4896,
											"end": 5011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4970,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4971,
											"end": 4972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 5011,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 4896,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 4832,
											"end": 5021,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3026,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5305,
											"end": 5326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5364,
											"name": "PUSH",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5335,
											"end": 5365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "5669672070657263656E74616765206D75737420626520657870726573736564"
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "20696E203020746F2031302070657263656E746167652E204578616D706C653A"
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "101B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5585,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 5566,
											"end": 5585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5295,
											"end": 5591,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 2989,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3128,
											"end": 3141,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3128,
											"end": 3155,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 3162,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5037,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1918,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1939,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5014,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C9030B71032BB32B73A1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4944,
											"end": 5116,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 1899,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5184,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5170,
											"end": 5184,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5170,
											"end": 5184,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5198,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5170,
											"end": 5232,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5202,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5202,
											"end": 5218,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5202,
											"end": 5218,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5232,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 5170,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 5162,
											"end": 5315,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1435,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1431,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1421,
											"end": 1448,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 1400,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4383,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1798,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6209,
											"end": 6211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6212,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6221,
											"end": 6251,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B63932B0B23C90309039BCB9BA32B69030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6312,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6181,
											"end": 6353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 1763,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4435,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4439,
											"end": 4469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 4407,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 4399,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4603,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4563,
											"end": 4587,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4610,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4618,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4625,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5398,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 1609,
											"end": 1619,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 1574,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5500,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5480,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5588,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5601,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5570,
											"end": 5601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5570,
											"end": 5601,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5636,
											"end": 5647,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5654,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5679,
											"end": 5708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5690,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5679,
											"end": 5693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 5708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5787,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 5675,
											"end": 5787,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5746,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5787,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 5675,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 5612,
											"end": 5797,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2380,
											"end": 2412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2362,
											"end": 2413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2353,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2335,
											"end": 2353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2353,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8021,
											"end": 8023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 8040,
											"end": 8058,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8040,
											"end": 8058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8133,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8072,
											"end": 8134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8150,
											"end": 8168,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8150,
											"end": 8168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8150,
											"end": 8168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8143,
											"end": 8183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8200,
											"end": 8219,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8200,
											"end": 8219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7993,
											"end": 8225,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4140,
											"end": 4161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4236,
											"end": 4270,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 4216,
											"end": 4234,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4216,
											"end": 4234,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4352,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4333,
											"end": 4352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4130,
											"end": 4358,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 7003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 7008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7075,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7017,
											"end": 7076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7093,
											"end": 7111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6938,
											"end": 7117,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 393,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 541,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 527,
											"end": 536,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 518,
											"end": 525,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 514,
											"end": 537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 510,
											"end": 542,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 509,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 507,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 507,
											"end": 509,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 560,
											"end": 566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 567,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 507,
											"end": 509,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 507,
											"end": 509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 588,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 607,
											"end": 616,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 588,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 588,
											"end": 617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 578,
											"end": 617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 578,
											"end": 617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 636,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 670,
											"end": 672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 659,
											"end": 668,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 655,
											"end": 673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 636,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 636,
											"end": 674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 626,
											"end": 674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 626,
											"end": 674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 693,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 725,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 693,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 693,
											"end": 731,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 731,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 693,
											"end": 731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 683,
											"end": 731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 683,
											"end": 731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 737,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 497,
											"end": 737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 737,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 497,
											"end": 737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 737,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 497,
											"end": 737,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 742,
											"end": 1039,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 742,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 809,
											"end": 815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 848,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 837,
											"end": 860,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 833,
											"end": 865,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 830,
											"end": 832,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 830,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 830,
											"end": 832,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 868,
											"end": 890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 830,
											"end": 832,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 830,
											"end": 832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 914,
											"end": 930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 966,
											"end": 979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 959,
											"end": 980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 952,
											"end": 957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 949,
											"end": 981,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 939,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 939,
											"end": 941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 992,
											"end": 998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 985,
											"end": 1007,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1234,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1044,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1103,
											"end": 1109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1142,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1131,
											"end": 1154,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1159,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1228,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1234,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1433,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1239,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1333,
											"end": 1365,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1320,
											"end": 1433,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1438,
											"end": 1696,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1438,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1506,
											"end": 1512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1595,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1639,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1686,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1690,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1525,
											"end": 1696,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 1701,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 1884,
											"end": 1937,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1884,
											"end": 1937,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 1884,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1838,
											"end": 1975,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2659,
											"end": 3042,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 2659,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2834,
											"end": 2847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2890,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2953,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2942,
											"end": 2951,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 2899,
											"end": 2965,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2899,
											"end": 2965,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 2899,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3028,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3005,
											"end": 3020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3036,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 3042,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2780,
											"end": 3042,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5596,
											"end": 6002,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5596,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5810,
											"end": 5840,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "596F752068617665206E6F2070726976696C65676520746F2072756E20746869"
										},
										{
											"begin": 5871,
											"end": 5873,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5849,
											"end": 5911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5944,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5920,
											"end": 5960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 5995,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5770,
											"end": 6002,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7122,
											"end": 7465,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7122,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7324,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7365,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7336,
											"end": 7366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21032BB32B73A1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7397,
											"end": 7399,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7296,
											"end": 7465,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8634,
											"end": 9116,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8634,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8818,
											"end": 8839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8818,
											"end": 8839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8818,
											"end": 8839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8948,
											"name": "PUSH",
											"source": 6,
											"value": "796F75206D7573742073657420686F6C6465727320616E642065636F73797374"
										},
										{
											"begin": 8909,
											"end": 8911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9019,
											"name": "PUSH",
											"source": 6,
											"value": "6D654164647265737320616464726573736573206265666F726520616464696E"
										},
										{
											"begin": 8980,
											"end": 8982,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 8983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 9020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67206576656E74206F776E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9054,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9036,
											"end": 9055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9036,
											"end": 9055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 9091,
											"end": 9110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9091,
											"end": 9110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 9116,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9303,
											"end": 9431,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 9303,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9370,
											"end": 9376,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9377,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 9380,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9416,
											"end": 9425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9351,
											"end": 9431,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9436,
											"end": 9653,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9436,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9502,
											"end": 9503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9527,
											"end": 9558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9578,
											"end": 9579,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9571,
											"end": 9586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9613,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9534,
											"end": 9535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9599,
											"end": 9614,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 9492,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9638,
											"end": 9647,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9653,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9658,
											"end": 9826,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9658,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9705,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9762,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9752,
											"end": 9766,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9749,
											"end": 9750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9741,
											"end": 9742,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9734,
											"end": 9743,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9727,
											"end": 9744,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9723,
											"end": 9768,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9722,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9720,
											"end": 9722,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9811,
											"end": 9820,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9710,
											"end": 9826,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9831,
											"end": 10089,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 9831,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9927,
											"end": 9933,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9924,
											"end": 9925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 9934,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9997,
											"end": 10015,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 9995,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 9995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 9995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9977,
											"end": 10016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9949,
											"end": 9951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9942,
											"end": 9952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 9913,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10041,
											"end": 10042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10051,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10070,
											"end": 10076,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10065,
											"end": 10068,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10061,
											"end": 10077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 10089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 10089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 10089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 10089,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10094,
											"end": 10229,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 10094,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10154,
											"end": 10171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10154,
											"end": 10171,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10153,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 10151,
											"end": 10153,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 10174,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10210,
											"end": 10223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10210,
											"end": 10223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10229,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10234,
											"end": 10361,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 10234,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10295,
											"end": 10305,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 10290,
											"end": 10293,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10330,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 10323,
											"end": 10324,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10316,
											"end": 10331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10354,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10347,
											"end": 10348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10355,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addBlacked(address)": "9b460aa9",
							"addEventAdmin(address)": "e3c0ed78",
							"addSystemAdmin(address)": "ed9f7eb9",
							"admins(address)": "429b62e5",
							"betFactory()": "2e1a9618",
							"blackList(uint256)": "709ec8b4",
							"blacked(address)": "80036b34",
							"contractOwner()": "ce606ee0",
							"deleteEventAdmin(address)": "f2210b2c",
							"deleteSystemAdmin(address)": "d5494869",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventAdmins(uint256)": "d37e87fd",
							"eventFactory()": "6fdbd3f6",
							"eventOwners(address)": "85d8349b",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"removeBlacked(address)": "681ada8c",
							"setBetFactory(address)": "89fefbe1",
							"setEcosystemAddress(address)": "a8e01b28",
							"setEventFactory(address)": "d43cbb15",
							"setMarketFactory(address)": "4dcc434a",
							"setStableCoin(address)": "23af4e17",
							"setSystemAddresses(address,address,address)": "273fea39",
							"setVigPercentage(uint256)": "d6c1ca26",
							"setVigPercentageShares(uint256,uint256)": "64886880",
							"shareBetEarnings()": "4d161324",
							"stableCoin()": "992642e5",
							"systemAdmins(uint256)": "026c1a4d",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addBlacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addEventAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addSystemAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacked\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"}],\"name\":\"deleteEventAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_systemAdmin\",\"type\":\"address\"}],\"name\":\"deleteSystemAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"eventOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventOwner\",\"type\":\"address\"}],\"name\":\"removeBlacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setBetFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setEventFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setMarketFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holdersAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ecoAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setSystemAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setVigPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hVig\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eVig\",\"type\":\"uint256\"}],\"name\":\"setVigPercentageShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"systemAdmins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Victor Okoro\",\"custom:security\":\"contact okoro.victor@web3bets.io\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Web3Bets Contract for FixedOdds decentralized betting exchange\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains Web3Bets ecosystem's variables and functions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3BetsFO.sol\":\"Web3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/Web3BetsFO.sol\":{\"keccak256\":\"0x61d0b6fe9da11e352aa04fa5a22a1ba80429456490fd8ae122caf2c2d1d140c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dc74e17b7f05d32a41c6f19b65050fb0eaa7652638155dc87e52e36053072a2\",\"dweb:/ipfs/QmdhBG92gDtKkQH76ECSttX64cXJR1aKNGLsFpH88ZRi1E\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0xaf87c66a9d2d79e426033f45ffcc292eb85edbab6e452091cc06e51c5d8d2566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f139dfe3f8787c37b6b4ad51c80b88df863d16faf52fe362fbe84b505fcda7d1\",\"dweb:/ipfs/QmSm6X2LA51E6A8UtaCkc6VdNMt1bAiGWTCohDgsbhoTLx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 703,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "contractOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 706,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 709,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 712,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "stableCoin",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 715,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventFactory",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 718,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "marketFactory",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 721,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "betFactory",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 725,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersVig",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 729,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemVig",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 733,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "vigPercentage",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 736,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "systemAdmins",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 739,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventAdmins",
								"offset": 0,
								"slot": "11",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 742,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "blackList",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 746,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "admins",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 750,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "eventOwners",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 754,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "blacked",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 760,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "_stableCoinWrapper",
								"offset": 0,
								"slot": "16",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains Web3Bets ecosystem's variables and functions",
						"version": 1
					}
				}
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"IWeb3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"name": "betFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"betFactory()": "2e1a9618",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"eventFactory()": "6fdbd3f6",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"marketFactory()": "06ae7095",
							"shareBetEarnings()": "4d161324",
							"stableCoin()": "992642e5",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"betFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IWeb3BetsFO.sol\":\"IWeb3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0xaf87c66a9d2d79e426033f45ffcc292eb85edbab6e452091cc06e51c5d8d2566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f139dfe3f8787c37b6b4ad51c80b88df863d16faf52fe362fbe84b505fcda7d1\",\"dweb:/ipfs/QmSm6X2LA51E6A8UtaCkc6VdNMt1bAiGWTCohDgsbhoTLx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Web3BetsFO.sol:75:33:\n   |\n75 |     function setSystemAddresses(address holdersAddr, address ecoAddr,address holder) external onlySystemAdmin {\n   |                                 ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2234,
					"file": "contracts/Web3BetsFO.sol",
					"start": 2215
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Web3BetsFO.sol:75:54:\n   |\n75 |     function setSystemAddresses(address holdersAddr, address ecoAddr,address holder) external onlySystemAdmin {\n   |                                                      ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2251,
					"file": "contracts/Web3BetsFO.sol",
					"start": 2236
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 690,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 689,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 689,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															463,
															483
														],
														"referencedDeclaration": 483,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 461,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 689,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 479,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 475,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 474,
												"id": 481,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 689,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 495,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 501,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 689,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 520,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 518,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 523,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													536,
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 539,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 548,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 549,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 546,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 516,
												"id": 551,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 689,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 563,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															570,
															605
														],
														"referencedDeclaration": 605,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 562,
												"id": 568,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 689,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 584,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 583,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													590,
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 589,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 581,
												"id": 603,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 689,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 615,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 689,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 689,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 669,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 673,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 683,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 680,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 664,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 679,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 682,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 684,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 678,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 677,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 670,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 668,
															"id": 671,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 689,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"contracts/Web3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/Web3BetsFO.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IWeb3BetsFO": [
							1536
						],
						"SafeERC20": [
							394
						],
						"Web3BetsFO": [
							1464
						]
					},
					"id": 1465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
							"file": "./interface/IWeb3BetsFO.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 1537,
							"src": "58:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 78,
							"src": "96:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 395,
							"src": "153:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 696,
										"name": "IWeb3BetsFO",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1536,
										"src": "571:11:4"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "571:11:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 695,
								"nodeType": "StructuredDocumentation",
								"src": "220:219:4",
								"text": "@author Victor Okoro\n @title Web3Bets Contract for FixedOdds decentralized betting exchange\n @notice Contains Web3Bets ecosystem's variables and functions\n @custom:security contact okoro.victor@web3bets.io"
							},
							"fullyImplemented": true,
							"id": 1464,
							"linearizedBaseContracts": [
								1464,
								1536
							],
							"name": "Web3BetsFO",
							"nameLocation": "557:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 701,
									"libraryName": {
										"id": 698,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "595:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "589:27:4",
									"typeName": {
										"id": 700,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 699,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "609:6:4"
										},
										"referencedDeclaration": 77,
										"src": "609:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ce606ee0",
									"id": 703,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "637:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "622:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 702,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "622:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1471
									],
									"constant": false,
									"functionSelector": "06a5cb3a",
									"id": 706,
									"mutability": "mutable",
									"name": "ecosystemAddress",
									"nameLocation": "685:16:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 705,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "676:8:4"
									},
									"scope": 1464,
									"src": "661:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 704,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1476
									],
									"constant": false,
									"functionSelector": "0da4ee50",
									"id": 709,
									"mutability": "mutable",
									"name": "holdersAddress",
									"nameLocation": "731:14:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 708,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "722:8:4"
									},
									"scope": 1464,
									"src": "707:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 707,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "707:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1481
									],
									"constant": false,
									"functionSelector": "992642e5",
									"id": 712,
									"mutability": "mutable",
									"name": "stableCoin",
									"nameLocation": "775:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 711,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "766:8:4"
									},
									"scope": 1464,
									"src": "751:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 710,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "751:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1486
									],
									"constant": false,
									"functionSelector": "6fdbd3f6",
									"id": 715,
									"mutability": "mutable",
									"name": "eventFactory",
									"nameLocation": "816:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "807:8:4"
									},
									"scope": 1464,
									"src": "792:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 713,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1491
									],
									"constant": false,
									"functionSelector": "06ae7095",
									"id": 718,
									"mutability": "mutable",
									"name": "marketFactory",
									"nameLocation": "858:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "849:8:4"
									},
									"scope": 1464,
									"src": "834:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 716,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "834:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1496
									],
									"constant": false,
									"functionSelector": "2e1a9618",
									"id": 721,
									"mutability": "mutable",
									"name": "betFactory",
									"nameLocation": "901:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 720,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "892:8:4"
									},
									"scope": 1464,
									"src": "877:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 719,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "877:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1501
									],
									"constant": false,
									"functionSelector": "486d1e50",
									"id": 725,
									"mutability": "mutable",
									"name": "holdersVig",
									"nameLocation": "942:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:4"
									},
									"scope": 1464,
									"src": "918:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 722,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "918:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 724,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "955:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1506
									],
									"constant": false,
									"functionSelector": "9376b94c",
									"id": 729,
									"mutability": "mutable",
									"name": "ecosystemVig",
									"nameLocation": "987:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "978:8:4"
									},
									"scope": 1464,
									"src": "963:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 726,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "963:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 728,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1002:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1511
									],
									"constant": false,
									"functionSelector": "387440e6",
									"id": 733,
									"mutability": "mutable",
									"name": "vigPercentage",
									"nameLocation": "1034:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 731,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1025:8:4"
									},
									"scope": 1464,
									"src": "1010:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 730,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1010:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1050:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "026c1a4d",
									"id": 736,
									"mutability": "mutable",
									"name": "systemAdmins",
									"nameLocation": "1076:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1059:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 734,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 735,
										"nodeType": "ArrayTypeName",
										"src": "1059:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d37e87fd",
									"id": 739,
									"mutability": "mutable",
									"name": "eventAdmins",
									"nameLocation": "1111:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1094:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 737,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 738,
										"nodeType": "ArrayTypeName",
										"src": "1094:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "709ec8b4",
									"id": 742,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "1145:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1128:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 740,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1128:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 741,
										"nodeType": "ArrayTypeName",
										"src": "1128:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "429b62e5",
									"id": 746,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1196:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1161:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 745,
										"keyType": {
											"id": 743,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1169:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1161:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 744,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1180:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85d8349b",
									"id": 750,
									"mutability": "mutable",
									"name": "eventOwners",
									"nameLocation": "1243:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1208:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 749,
										"keyType": {
											"id": 747,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 748,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1227:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80036b34",
									"id": 754,
									"mutability": "mutable",
									"name": "blacked",
									"nameLocation": "1295:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1260:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 753,
										"keyType": {
											"id": 751,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1268:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1260:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 752,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1279:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "_stableCoinWrapper",
									"nameLocation": "1324:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1464,
									"src": "1309:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 756,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 755,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "1309:6:4"
										},
										"referencedDeclaration": 77,
										"src": "1309:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 758,
												"name": "stableCoin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 712,
												"src": "1352:10:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 757,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "1345:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 759,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1345:18:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "1390:144:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 763,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1421:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1421:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 765,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "1435:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1421:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1400:116:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "1400:116:4"
											},
											{
												"id": 770,
												"nodeType": "PlaceholderStatement",
												"src": "1526:1:4"
											}
										]
									},
									"id": 772,
									"name": "onlyUser",
									"nameLocation": "1379:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:2:4"
									},
									"src": "1370:164:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1564:142:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 776,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1609:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1609:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 775,
																"name": "isSystemAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "1595:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1595:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1634:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1574:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1574:114:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "1574:114:4"
											},
											{
												"id": 782,
												"nodeType": "PlaceholderStatement",
												"src": "1698:1:4"
											}
										]
									},
									"id": 784,
									"name": "onlySystemAdmin",
									"nameLocation": "1548:15:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:0:4"
									},
									"src": "1539:167:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "1753:90:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 789,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "1771:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 791,
																"indexExpression": {
																	"id": 790,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "1778:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1771:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1796:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1788:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 792,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1788:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1788:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1771:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920612073797374656d2061646d696e",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1800:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511",
																"typeString": "literal_string \"already a system admin\""
															},
															"value": "already a system admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eb64a2f8e2d063b4ba2137a06420c5ddac18fa973b5a68e7e93cc21be8e7511",
																"typeString": "literal_string \"already a system admin\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1763:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1763:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1763:62:4"
											},
											{
												"id": 800,
												"nodeType": "PlaceholderStatement",
												"src": "1835:1:4"
											}
										]
									},
									"id": 802,
									"name": "uniqueSystemAdmin",
									"nameLocation": "1720:17:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:15:4"
									},
									"src": "1711:132:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "1889:95:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 807,
																	"name": "eventOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "1907:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "1919:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1907:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1937:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1929:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 810,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1929:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1929:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1907:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920616e206576656e742061646d696e",
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1941:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc",
																"typeString": "literal_string \"already an event admin\""
															},
															"value": "already an event admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69bfbcf965758bc5ddd17591a0451b2942bc0583d49424ab0acec67f0d5555cc",
																"typeString": "literal_string \"already an event admin\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1899:67:4"
											},
											{
												"id": 818,
												"nodeType": "PlaceholderStatement",
												"src": "1976:1:4"
											}
										]
									},
									"id": 820,
									"name": "uniqueEventAdmin",
									"nameLocation": "1857:16:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1882:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1874:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:15:4"
									},
									"src": "1848:136:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2025:89:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 825,
																	"name": "blacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2043:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"id": 826,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "2051:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2043:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2069:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2061:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2061:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2061:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2043:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920696e20626c61636b6c697374",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355",
																"typeString": "literal_string \"already in blacklist\""
															},
															"value": "already in blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0baece3d3231f6d1df745826117bd57a5bd6c7623789b8f7c141128ebba2355",
																"typeString": "literal_string \"already in blacklist\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "2035:61:4"
											},
											{
												"id": 836,
												"nodeType": "PlaceholderStatement",
												"src": "2106:1:4"
											}
										]
									},
									"id": 838,
									"name": "uniqueBlack",
									"nameLocation": "1998:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "2018:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2010:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:15:4"
									},
									"src": "1989:125:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "2134:43:4",
										"statements": [
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "2144:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 842,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2160:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2144:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "2144:26:4"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:2:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:4"
									},
									"scope": 1464,
									"src": "2120:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "2293:40:4",
										"statements": [
											{
												"expression": {
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 858,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "2303:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 859,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2320:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2303:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "2303:23:4"
											}
										]
									},
									"functionSelector": "273fea39",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 855,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2277:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2277:15:4"
										}
									],
									"name": "setSystemAddresses",
									"nameLocation": "2196:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "holdersAddr",
												"nameLocation": "2223:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2215:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "ecoAddr",
												"nameLocation": "2244:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2236:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2260:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2252:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:53:4"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2293:0:4"
									},
									"scope": 1464,
									"src": "2187:146:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2409:42:4",
										"statements": [
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2419:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "2438:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2419:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2419:25:4"
											}
										]
									},
									"functionSelector": "a8e01b28",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 868,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 867,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2393:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2393:15:4"
										}
									],
									"name": "setEcosystemAddress",
									"nameLocation": "2348:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2376:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2368:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:16:4"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2409:0:4"
									},
									"scope": 1464,
									"src": "2339:112:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "2521:40:4",
										"statements": [
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 882,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "2531:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 883,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "2548:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2531:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "2531:23:4"
											}
										]
									},
									"functionSelector": "23af4e17",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 880,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 879,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2505:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2505:15:4"
										}
									],
									"name": "setStableCoin",
									"nameLocation": "2466:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "2488:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2480:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:16:4"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2521:0:4"
									},
									"scope": 1464,
									"src": "2457:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "2635:40:4",
										"statements": [
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "eventFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2645:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 895,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2660:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2645:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2645:23:4"
											}
										]
									},
									"functionSelector": "d43cbb15",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2619:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2619:15:4"
										}
									],
									"name": "setEventFactory",
									"nameLocation": "2576:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "2600:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "2592:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:18:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2635:0:4"
									},
									"scope": 1464,
									"src": "2567:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "2750:41:4",
										"statements": [
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "marketFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "2760:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "2776:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2760:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "2760:24:4"
											}
										]
									},
									"functionSelector": "4dcc434a",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 904,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 903,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2734:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:15:4"
										}
									],
									"name": "setMarketFactory",
									"nameLocation": "2690:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "2715:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "2707:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:18:4"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2750:0:4"
									},
									"scope": 1464,
									"src": "2681:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "2863:38:4",
										"statements": [
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 918,
														"name": "betFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2873:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 919,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2886:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2873:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "2873:21:4"
											}
										]
									},
									"functionSelector": "89fefbe1",
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 915,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2847:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2847:15:4"
										}
									],
									"name": "setBetFactory",
									"nameLocation": "2806:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "2828:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2820:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:18:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2863:0:4"
									},
									"scope": 1464,
									"src": "2797:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2979:183:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 931,
																"name": "_percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "3010:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "3010:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e74616765206d7573742062652065787072657373656420696e203020746f2031302070657263656e746167652e204578616d706c653a2036",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3040:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															},
															"value": "Vig percentage must be expressed in 0 to 10 percentage. Example: 6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2989:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2989:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "2989:129:4"
											},
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 937,
														"name": "vigPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "3128:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 938,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "3144:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3128:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "3128:27:4"
											}
										]
									},
									"functionSelector": "d6c1ca26",
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 928,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 927,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "2963:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2963:15:4"
										}
									],
									"name": "setVigPercentage",
									"nameLocation": "2916:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "2941:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2933:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2932:21:4"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2979:0:4"
									},
									"scope": 1464,
									"src": "2907:255:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "3275:354:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 952,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3306:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3314:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3306:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 955,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "3321:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3329:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3321:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3306:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e746167657320736861726573206d7573742062652065787072657373656420696e206120203020746f2031303020726174696f2e204578616d706c653a203330",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3346:76:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															},
															"value": "Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:147:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "3285:147:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 963,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3463:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 964,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "3470:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3463:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313030",
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3479:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "3463:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652073756d206f6620616c6c205669672070657263656e7461676520736861726573206d75737420626520657175616c20746f20313030",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3496:59:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															},
															"value": "The sum of all Vig percentage shares must be equal to 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															}
														],
														"id": 962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3442:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3442:123:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "3442:123:4"
											},
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "holdersVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3576:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "hVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3589:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3576:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "3576:17:4"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "ecosystemVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "3603:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 976,
														"name": "eVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3618:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3603:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "3603:19:4"
											}
										]
									},
									"functionSelector": "64886880",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 949,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 948,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "3259:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3259:15:4"
										}
									],
									"name": "setVigPercentageShares",
									"nameLocation": "3177:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "hVig",
												"nameLocation": "3217:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3209:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "eVig",
												"nameLocation": "3239:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3231:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3199:50:4"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:0:4"
									},
									"scope": 1464,
									"src": "3168:461:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1514
									],
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "3681:588:4",
										"statements": [
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "_vigAmount",
														"nameLocation": "3699:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "3691:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 984,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3691:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 990,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3749:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Web3BetsFO_$1464",
																		"typeString": "contract Web3BetsFO"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Web3BetsFO_$1464",
																		"typeString": "contract Web3BetsFO"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3741:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3741:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3741:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 986,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "3712:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "3712:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3691:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 995,
																"name": "_vigAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "3773:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3773:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626574206561726e696e6773206d7573742062652067726561746572207468616e2030",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3789:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															},
															"value": "bet earnings must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															}
														],
														"id": 994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3765:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3765:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "3765:62:4"
											},
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "holdersShare",
														"nameLocation": "3845:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "3837:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3837:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1003,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "3861:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1004,
																	"name": "holdersVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "3874:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3861:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1006,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3860:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3888:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3860:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3837:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "holdersShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "3909:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3909:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686f6c6465727327207368617265206d7573742062652067726561746572207468616e2030",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3927:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															},
															"value": "holders' share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3901:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3901:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "3901:66:4"
											},
											{
												"assignments": [
													1018
												],
												"declarations": [
													{
														"constant": false,
														"id": 1018,
														"mutability": "mutable",
														"name": "ecosystemShare",
														"nameLocation": "3985:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "3977:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1017,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3977:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1025,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1019,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "4003:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1020,
																	"name": "ecosystemVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "4016:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4003:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1022,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4002:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4032:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4002:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3977:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "ecosystemShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "4053:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4070:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4053:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "65636f73797374656d207368617265206d7573742062652067726561746572207468616e2030",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															},
															"value": "ecosystem share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4045:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "4045:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "ecosystemAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "4157:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "ecosystemShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "4175:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1033,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4125:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "4125:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "4125:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "holdersAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4233:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "holdersShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "4249:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1040,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4201:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "4201:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4201:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "4201:61:4"
											}
										]
									},
									"functionSelector": "4d161324",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "3644:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 982,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3672:8:4"
									},
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3660:2:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3681:0:4"
									},
									"scope": 1464,
									"src": "3635:634:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "4389:236:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1059,
																	"name": "holdersAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "4407:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4433:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4425:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1060,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4425:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4425:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4407:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "ecosystemAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "4439:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4459:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1066,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4459:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4459:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4439:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4407:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206d7573742073657420686f6c6465727320616e642065636f737973746d654164647265737320616464726573736573206265666f726520616464696e67206576656e74206f776e657273",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4471:80:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															},
															"value": "you must set holders and ecosystmeAddress addresses before adding event owners"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															}
														],
														"id": 1058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4399:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4399:153:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "4399:153:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "4581:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1075,
															"name": "systemAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4563:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4563:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4563:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "4563:24:4"
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1081,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4597:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1083,
														"indexExpression": {
															"id": 1082,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "4604:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4597:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4613:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4597:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "4597:21:4"
											}
										]
									},
									"functionSelector": "ed9f7eb9",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1052,
												"name": "onlyUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "4343:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4343:8:4"
										},
										{
											"arguments": [
												{
													"id": 1055,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1050,
													"src": "4378:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1056,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1054,
												"name": "uniqueSystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "4360:17:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4360:24:4"
										}
									],
									"name": "addSystemAdmin",
									"nameLocation": "4288:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "4311:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "4303:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4303:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:15:4"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4389:0:4"
									},
									"scope": 1464,
									"src": "4279:346:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "4698:329:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1096,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "4717:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1098,
																"indexExpression": {
																	"id": 1097,
																	"name": "_systemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "4724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4717:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4749:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4741:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1099,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4741:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4741:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4717:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4753:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 1095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4708:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "4708:67:4"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4794:27:4",
													"subExpression": {
														"baseExpression": {
															"id": 1107,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4801:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"id": 1108,
															"name": "_systemAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "4808:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4801:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "4794:27:4"
											},
											{
												"body": {
													"id": 1136,
													"nodeType": "Block",
													"src": "4882:139:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1123,
																		"name": "systemAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "4900:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1125,
																	"indexExpression": {
																		"id": 1124,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "4913:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4900:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1126,
																	"name": "_systemAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "4919:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4900:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1135,
															"nodeType": "IfStatement",
															"src": "4896:115:4",
															"trueBody": {
																"id": 1134,
																"nodeType": "Block",
																"src": "4933:78:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "4951:22:4",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1128,
																					"name": "systemAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "4958:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1130,
																				"indexExpression": {
																					"id": 1129,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1113,
																					"src": "4971:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4958:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1132,
																		"nodeType": "ExpressionStatement",
																		"src": "4951:22:4"
																	},
																	{
																		"id": 1133,
																		"nodeType": "Break",
																		"src": "4991:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "4852:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1117,
															"name": "systemAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4856:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4856:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4852:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"initializationExpression": {
													"assignments": [
														1113
													],
													"declarations": [
														{
															"constant": false,
															"id": 1113,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4845:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1137,
															"src": "4837:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1112,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4837:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1115,
													"initialValue": {
														"hexValue": "30",
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4849:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4837:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4877:3:4",
														"subExpression": {
															"id": 1120,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "4877:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1122,
													"nodeType": "ExpressionStatement",
													"src": "4877:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4832:189:4"
											}
										]
									},
									"functionSelector": "d5494869",
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1092,
												"name": "onlyUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "4689:8:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4689:8:4"
										}
									],
									"name": "deleteSystemAdmin",
									"nameLocation": "4640:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_systemAdmin",
												"nameLocation": "4666:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "4658:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:22:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4698:0:4"
									},
									"scope": 1464,
									"src": "4631:396:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "5152:240:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1150,
																	"name": "holdersAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "5170:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5196:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5188:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1151,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5188:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5188:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5170:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1156,
																	"name": "ecosystemAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5202:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5230:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5222:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1157,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5222:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5222:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5202:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5170:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75206d7573742073657420686f6c6465727320616e642065636f737973746d654164647265737320616464726573736573206265666f726520616464696e67206576656e74206f776e657273",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5234:80:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															},
															"value": "you must set holders and ecosystmeAddress addresses before adding event owners"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1af95a1d0630510198328b92eeb705a94a825ee39d9f1ab21a794feac721e0a",
																"typeString": "literal_string \"you must set holders and ecosystmeAddress addresses before adding event owners\""
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5162:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5162:153:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "5162:153:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1169,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "5343:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1166,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5326:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5326:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "5326:23:4"
											},
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1172,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5359:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1174,
														"indexExpression": {
															"id": 1173,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "5371:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5359:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1175,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "5380:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5359:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "5359:26:4"
											}
										]
									},
									"functionSelector": "e3c0ed78",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5100:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5100:15:4"
										},
										{
											"arguments": [
												{
													"id": 1146,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1141,
													"src": "5141:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1145,
												"name": "uniqueEventAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 820,
												"src": "5124:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5124:23:4"
										}
									],
									"name": "addEventAdmin",
									"nameLocation": "5046:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5068:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "5060:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5059:15:4"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5152:0:4"
									},
									"scope": 1464,
									"src": "5037:355:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "5470:333:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1187,
																	"name": "eventOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "5489:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1189,
																"indexExpression": {
																	"id": 1188,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "5501:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5489:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5525:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5517:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5517:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5489:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5529:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "5480:71:4"
											},
											{
												"expression": {
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5570:31:4",
													"subExpression": {
														"baseExpression": {
															"id": 1198,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5577:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1200,
														"indexExpression": {
															"id": 1199,
															"name": "_eventOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "5589:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5577:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "5570:31:4"
											},
											{
												"body": {
													"id": 1227,
													"nodeType": "Block",
													"src": "5661:136:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1214,
																		"name": "eventAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "5679:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1216,
																	"indexExpression": {
																		"id": 1215,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "5691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5679:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1217,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "5697:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5679:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1226,
															"nodeType": "IfStatement",
															"src": "5675:112:4",
															"trueBody": {
																"id": 1225,
																"nodeType": "Block",
																"src": "5710:77:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "5728:21:4",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1219,
																					"name": "eventAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 739,
																					"src": "5735:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1221,
																				"indexExpression": {
																					"id": 1220,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1204,
																					"src": "5747:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5735:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1223,
																		"nodeType": "ExpressionStatement",
																		"src": "5728:21:4"
																	},
																	{
																		"id": 1224,
																		"nodeType": "Break",
																		"src": "5767:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1207,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "5632:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1208,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5636:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5636:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5632:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"initializationExpression": {
													"assignments": [
														1204
													],
													"declarations": [
														{
															"constant": false,
															"id": 1204,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5625:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1228,
															"src": "5617:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1203,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5617:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1206,
													"initialValue": {
														"hexValue": "30",
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5629:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5617:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5656:3:4",
														"subExpression": {
															"id": 1211,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "5656:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1213,
													"nodeType": "ExpressionStatement",
													"src": "5656:3:4"
												},
												"nodeType": "ForStatement",
												"src": "5612:185:4"
											}
										]
									},
									"functionSelector": "f2210b2c",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1183,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5454:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5454:15:4"
										}
									],
									"name": "deleteEventAdmin",
									"nameLocation": "5407:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_eventOwner",
												"nameLocation": "5432:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "5424:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5423:21:4"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5470:0:4"
									},
									"scope": 1464,
									"src": "5398:405:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "5920:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "5947:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1240,
															"name": "eventAdmins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5930:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5930:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5930:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "5930:23:4"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1246,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5963:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1248,
														"indexExpression": {
															"id": 1247,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "5975:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5963:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1249,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "5984:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5963:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "5963:26:4"
											}
										]
									},
									"functionSelector": "9b460aa9",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1234,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "5873:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5873:15:4"
										},
										{
											"arguments": [
												{
													"id": 1237,
													"name": "_addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1232,
													"src": "5909:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "uniqueBlack",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 838,
												"src": "5897:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5897:18:4"
										}
									],
									"name": "addBlacked",
									"nameLocation": "5822:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "5841:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "5833:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5833:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5832:15:4"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5920:0:4"
									},
									"scope": 1464,
									"src": "5813:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "6071:319:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1261,
																	"name": "blacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6090:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1263,
																"indexExpression": {
																	"id": 1262,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "6098:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6090:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6122:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6114:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1264,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6114:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6114:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6090:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206576656e74206f776e6572",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6126:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															},
															"value": "Invalid event owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfa222cc65bd1d711fea183d18f3dda4d5a273a9aef270b54dadd7de68a596ae",
																"typeString": "literal_string \"Invalid event owner\""
															}
														],
														"id": 1260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6081:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "6081:67:4"
											},
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6167:27:4",
													"subExpression": {
														"baseExpression": {
															"id": 1272,
															"name": "blacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "6174:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1274,
														"indexExpression": {
															"id": 1273,
															"name": "_eventOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "6182:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6174:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "6167:27:4"
											},
											{
												"body": {
													"id": 1301,
													"nodeType": "Block",
													"src": "6252:132:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1288,
																		"name": "blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "6270:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1290,
																	"indexExpression": {
																		"id": 1289,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "6280:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6270:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1291,
																	"name": "_eventOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "6286:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6270:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1300,
															"nodeType": "IfStatement",
															"src": "6266:108:4",
															"trueBody": {
																"id": 1299,
																"nodeType": "Block",
																"src": "6299:75:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "6317:19:4",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1293,
																					"name": "blackList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "6324:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1295,
																				"indexExpression": {
																					"id": 1294,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "6334:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6324:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1297,
																		"nodeType": "ExpressionStatement",
																		"src": "6317:19:4"
																	},
																	{
																		"id": 1298,
																		"nodeType": "Break",
																		"src": "6354:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1281,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "6225:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1282,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6229:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6229:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6225:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"initializationExpression": {
													"assignments": [
														1278
													],
													"declarations": [
														{
															"constant": false,
															"id": 1278,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6218:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1302,
															"src": "6210:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1277,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6210:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1280,
													"initialValue": {
														"hexValue": "30",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6222:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6210:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6247:3:4",
														"subExpression": {
															"id": 1285,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "6247:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1287,
													"nodeType": "ExpressionStatement",
													"src": "6247:3:4"
												},
												"nodeType": "ForStatement",
												"src": "6205:179:4"
											}
										]
									},
									"functionSelector": "681ada8c",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 784,
												"src": "6055:15:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6055:15:4"
										}
									],
									"name": "removeBlacked",
									"nameLocation": "6011:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_eventOwner",
												"nameLocation": "6033:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "6025:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:21:4"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6071:0:4"
									},
									"scope": 1464,
									"src": "6002:388:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1521
									],
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "6470:371:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1312,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "6483:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1314,
														"indexExpression": {
															"id": 1313,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6490:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6483:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6508:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6500:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1315,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6500:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6500:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6483:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1354,
													"nodeType": "Block",
													"src": "6798:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6819:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1311,
															"id": 1353,
															"nodeType": "Return",
															"src": "6812:12:4"
														}
													]
												},
												"id": 1355,
												"nodeType": "IfStatement",
												"src": "6480:355:4",
												"trueBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "6511:274:4",
													"statements": [
														{
															"assignments": [
																1321
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1321,
																	"mutability": "mutable",
																	"name": "found",
																	"nameLocation": "6530:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1351,
																	"src": "6525:10:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1320,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6525:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1323,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6538:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6525:18:4"
														},
														{
															"body": {
																"id": 1347,
																"nodeType": "Block",
																"src": "6607:142:4",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1335,
																					"name": "systemAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "6629:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1337,
																				"indexExpression": {
																					"id": 1336,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "6642:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6629:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1338,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "6648:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6629:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1346,
																		"nodeType": "IfStatement",
																		"src": "6625:110:4",
																		"trueBody": {
																			"id": 1345,
																			"nodeType": "Block",
																			"src": "6655:80:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 1342,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1340,
																							"name": "found",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1321,
																							"src": "6677:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1341,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6685:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "6677:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1343,
																					"nodeType": "ExpressionStatement",
																					"src": "6677:12:4"
																				},
																				{
																					"id": 1344,
																					"nodeType": "Break",
																					"src": "6711:5:4"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1328,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "6577:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1329,
																		"name": "systemAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "6581:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6581:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6577:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1348,
															"initializationExpression": {
																"assignments": [
																	1325
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1325,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6570:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1348,
																		"src": "6562:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1324,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6562:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1327,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6562:13:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6602:3:4",
																	"subExpression": {
																		"id": 1332,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "6602:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1334,
																"nodeType": "ExpressionStatement",
																"src": "6602:3:4"
															},
															"nodeType": "ForStatement",
															"src": "6557:192:4"
														},
														{
															"expression": {
																"id": 1349,
																"name": "found",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "6769:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 1311,
															"id": 1350,
															"nodeType": "Return",
															"src": "6762:12:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4fb43199",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "6405:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1308,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6446:8:4"
									},
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6427:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "6419:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6419:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6418:15:4"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "6464:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6464:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6463:6:4"
									},
									"scope": 1464,
									"src": "6396:445:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1528
									],
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "6920:374:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1365,
															"name": "eventOwners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "6933:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1367,
														"indexExpression": {
															"id": 1366,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "6945:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6933:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6963:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6955:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1368,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6955:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6955:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6933:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "7251:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7272:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1364,
															"id": 1406,
															"nodeType": "Return",
															"src": "7265:12:4"
														}
													]
												},
												"id": 1408,
												"nodeType": "IfStatement",
												"src": "6930:358:4",
												"trueBody": {
													"id": 1404,
													"nodeType": "Block",
													"src": "6966:272:4",
													"statements": [
														{
															"assignments": [
																1374
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1374,
																	"mutability": "mutable",
																	"name": "found",
																	"nameLocation": "6985:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1404,
																	"src": "6980:10:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1373,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6980:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1376,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6993:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6980:18:4"
														},
														{
															"body": {
																"id": 1400,
																"nodeType": "Block",
																"src": "7061:141:4",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1388,
																					"name": "eventAdmins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 739,
																					"src": "7083:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1390,
																				"indexExpression": {
																					"id": 1389,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "7095:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7083:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1391,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "7101:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7083:23:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1399,
																		"nodeType": "IfStatement",
																		"src": "7079:109:4",
																		"trueBody": {
																			"id": 1398,
																			"nodeType": "Block",
																			"src": "7108:80:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 1395,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1393,
																							"name": "found",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1374,
																							"src": "7130:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1394,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7138:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "7130:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1396,
																					"nodeType": "ExpressionStatement",
																					"src": "7130:12:4"
																				},
																				{
																					"id": 1397,
																					"nodeType": "Break",
																					"src": "7164:5:4"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1381,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "7032:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1382,
																		"name": "eventAdmins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "7036:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7036:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7032:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1401,
															"initializationExpression": {
																"assignments": [
																	1378
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1378,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "7025:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1401,
																		"src": "7017:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1377,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7017:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1380,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7029:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7017:13:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7056:3:4",
																	"subExpression": {
																		"id": 1385,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "7056:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1387,
																"nodeType": "ExpressionStatement",
																"src": "7056:3:4"
															},
															"nodeType": "ForStatement",
															"src": "7012:190:4"
														},
														{
															"expression": {
																"id": 1402,
																"name": "found",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "7222:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 1364,
															"id": 1403,
															"nodeType": "Return",
															"src": "7215:12:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "cb146622",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "6856:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6896:8:4"
									},
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6877:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "6869:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6869:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6868:15:4"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "6914:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6914:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6913:6:4"
									},
									"scope": 1464,
									"src": "6847:447:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1535
									],
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "7368:366:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1418,
															"name": "blacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "7381:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1420,
														"indexExpression": {
															"id": 1419,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "7389:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7381:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7407:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7399:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1421,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7399:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7399:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7381:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "7691:37:4",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7712:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1417,
															"id": 1459,
															"nodeType": "Return",
															"src": "7705:12:4"
														}
													]
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "7378:350:4",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "7410:268:4",
													"statements": [
														{
															"assignments": [
																1427
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1427,
																	"mutability": "mutable",
																	"name": "found",
																	"nameLocation": "7429:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1457,
																	"src": "7424:10:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1426,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "7424:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1429,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7437:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7424:18:4"
														},
														{
															"body": {
																"id": 1453,
																"nodeType": "Block",
																"src": "7503:139:4",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1441,
																					"name": "blackList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "7525:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1443,
																				"indexExpression": {
																					"id": 1442,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "7535:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7525:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1444,
																				"name": "_addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "7541:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7525:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1452,
																		"nodeType": "IfStatement",
																		"src": "7521:107:4",
																		"trueBody": {
																			"id": 1451,
																			"nodeType": "Block",
																			"src": "7548:80:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 1448,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1446,
																							"name": "found",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1427,
																							"src": "7570:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1447,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7578:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "7570:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1449,
																					"nodeType": "ExpressionStatement",
																					"src": "7570:12:4"
																				},
																				{
																					"id": 1450,
																					"nodeType": "Break",
																					"src": "7604:5:4"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1434,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "7476:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1435,
																		"name": "blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "7480:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7480:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7476:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1454,
															"initializationExpression": {
																"assignments": [
																	1431
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1431,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "7469:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1454,
																		"src": "7461:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1430,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7461:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1433,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7473:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7461:13:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7498:3:4",
																	"subExpression": {
																		"id": 1438,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1440,
																"nodeType": "ExpressionStatement",
																"src": "7498:3:4"
															},
															"nodeType": "ForStatement",
															"src": "7456:186:4"
														},
														{
															"expression": {
																"id": 1455,
																"name": "found",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "7662:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 1417,
															"id": 1456,
															"nodeType": "Return",
															"src": "7655:12:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "332daccf",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "7309:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1414,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7344:8:4"
									},
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "7325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "7317:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7317:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7316:15:4"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "7362:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7362:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7361:6:4"
									},
									"scope": 1464,
									"src": "7300:434:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1465,
							"src": "548:7189:4",
							"usedErrors": []
						}
					],
					"src": "33:7704:4"
				},
				"id": 4
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
					"exportedSymbols": {
						"IWeb3BetsFO": [
							1536
						]
					},
					"id": 1537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1536,
							"linearizedBaseContracts": [
								1536
							],
							"name": "IWeb3BetsFO",
							"nameLocation": "68:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06a5cb3a",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemAddress",
									"nameLocation": "95:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:5"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "136:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:9:5"
									},
									"scope": 1536,
									"src": "86:59:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0da4ee50",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersAddress",
									"nameLocation": "160:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "174:2:5"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "199:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:9:5"
									},
									"scope": 1536,
									"src": "151:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992642e5",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableCoin",
									"nameLocation": "223:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:5"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "258:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:9:5"
									},
									"scope": 1536,
									"src": "214:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6fdbd3f6",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eventFactory",
									"nameLocation": "282:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:5"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "319:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:9:5"
									},
									"scope": 1536,
									"src": "273:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06ae7095",
									"id": 1491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketFactory",
									"nameLocation": "343:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:2:5"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "381:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "380:9:5"
									},
									"scope": 1536,
									"src": "334:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a9618",
									"id": 1496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "betFactory",
									"nameLocation": "405:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:5"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "440:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:9:5"
									},
									"scope": 1536,
									"src": "396:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "486d1e50",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersVig",
									"nameLocation": "464:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:5"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "499:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:6:5"
									},
									"scope": 1536,
									"src": "455:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9376b94c",
									"id": 1506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemVig",
									"nameLocation": "520:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:2:5"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "557:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "557:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:6:5"
									},
									"scope": 1536,
									"src": "511:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "387440e6",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vigPercentage",
									"nameLocation": "578:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:5"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "611:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "611:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:6:5"
									},
									"scope": 1536,
									"src": "569:48:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4d161324",
									"id": 1514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "632:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:0:5"
									},
									"scope": 1536,
									"src": "623:37:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fb43199",
									"id": 1521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "675:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "697:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "689:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:18:5"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "725:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "725:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:6:5"
									},
									"scope": 1536,
									"src": "666:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb146622",
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "746:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "767:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "759:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:18:5"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "795:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:6:5"
									},
									"scope": 1536,
									"src": "737:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "332daccf",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "816:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "832:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "824:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:18:5"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 1536,
									"src": "807:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1537,
							"src": "58:810:5",
							"usedErrors": []
						}
					],
					"src": "33:835:5"
				},
				"id": 5
			}
		}
	}
}