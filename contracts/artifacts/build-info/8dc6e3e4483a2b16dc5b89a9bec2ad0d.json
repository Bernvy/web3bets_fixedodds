{
	"id": "8dc6e3e4483a2b16dc5b89a9bec2ad0d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Bet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\nimport \"./BetPair.sol\";\n\ncontract Bet is IBet {\n    address private w3bAddr;\n\n    address public override better;\n\n    address public override market;\n\n    uint256 public override stake;\n\n    uint256 public override matched;\n\n    uint8 public override odds;\n\n    address[] public betPairs;\n\n    string  public override marketSide;\n\n    IWeb3BetsFO private web3bets = IWeb3BetsFO(w3bAddr);\n\n    modifier onlyBetter() {\n        require(\n            msg.sender == better,\n            \"better only\"\n        );\n        _;\n    }\n\n\n    constructor(\n        address caller_,\n        address market_,\n        string memory marketSide_,\n        uint256 stake_,\n        uint8 odds_\n    ) {\n        require(msg.sender == web3bets.factory(), \"factory only\");\n        market = market_;\n        marketSide = marketSide_;\n        stake = stake_;\n        odds = odds_;\n        better = caller_;\n        matched = 0;\n\n    }\n\n    function getBetPairs() external view override returns (address[] memory){\n        return betPairs;\n    }\n\n    function isValidBetPair(address _addr) private view returns (bool){\n        uint32 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        if(size > 0){\n            IBetPair pair = IBetPair(_addr);\n            IBet betA = IBet(pair.sideABet());\n            if(pair.market() == betA.market()){\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n\n    function addPair(address _pairAddress) external override returns(bool) {\n        require(isValidBetPair(_pairAddress), \"betpair invalid\");\n        betPairs.push(_pairAddress);\n        return true;\n    }\n\n    function setMatched(uint _amount) external override returns(bool) {\n        require(msg.sender == market, \"only bet's market contract can call this function\");\n        matched += _amount;\n        return true;\n    }\n    \n}"
			},
			"contracts/BetPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./interface/IBetPair.sol\";\nimport \"./interface/IBet.sol\";\nimport \"./Web3BetsFO.sol\";\n\ncontract BetPair is IBetPair {\n\n    address private web3betsAddress;\n\n    address public override market;\n\n    address public override sideABet;\n\n    address public override sideBBet;\n    \n    address public override winnerBet;\n\n    address public override winnerAddress;\n\n    uint public override amountA;\n\n    uint public override amountB;\n\n    IWeb3BetsFO private web3bets = IWeb3BetsFO(web3betsAddress);\n\n    constructor (\n        address market_,\n        address sideABet_,\n        address sideBBet_,\n        uint amountA_,\n        uint amountB_\n    ) {\n        require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\");\n        market = market_;\n        sideABet = sideABet_;\n        sideBBet = sideBBet_;\n        amountA = amountA_;\n        amountB = amountB_;\n    }\n\n    function setWinnerBet( address _addr) external override returns(bool){\n        require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\");\n        winnerBet = _addr;\n        IBet _bet = IBet(winnerBet);\n        winnerAddress = _bet.better();\n        return true;\n    }\n    \n}"
			},
			"contracts/Web3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./interface/IWeb3BetsFO.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\ncontract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {\n    using SafeERC20 for IERC20;\n    \n    address public override factory;\n    address public override ecosystemAddress;\n    address public override holdersAddress;\n    address public override stableCoin;\n    uint256 public override holdersVig = 50;\n    uint256 public override ecosystemVig = 50;\n    uint256 public override vigPercentage = 10;\n    IERC20 private _stableCoinWrapper = IERC20(stableCoin);\n\n    bytes32 public constant SYSTEM_ADMIN = keccak256(\"SYSTEM_ADMIN\");\n    bytes32 public constant EVENT_ADMIN = keccak256(\"EVENT_ADMIN\");\n    bytes32 public constant BLACKLIST = keccak256(\"BLACKLIST\");\n\n    modifier onlySystemAdmin() {\n        require(\n            hasRole(SYSTEM_ADMIN, msg.sender),\n            \"You have no privilege to run this function\"\n        );\n        _;\n    }\n\n    constructor() {\n        // Grant the contract deployer the default admin role: it will be able\n        // to grant and revoke any roles\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(SYSTEM_ADMIN, msg.sender);\n        _setupRole(EVENT_ADMIN, msg.sender);\n        _setRoleAdmin(EVENT_ADMIN, SYSTEM_ADMIN);\n        _setupRole(BLACKLIST, address(0));\n        _setRoleAdmin(BLACKLIST, SYSTEM_ADMIN);\n    }\n\n    function setFactory(address _factory) public onlySystemAdmin {\n        factory = _factory;\n    }\n\n    function setStableCoin(address holder) public onlySystemAdmin {\n        holdersAddress = holder;\n    }\n    \n    function setHoldersAddress(address holder) public onlySystemAdmin {\n        holdersAddress = holder;\n    }\n\n    function setEcosystemAddress(address holder) public onlySystemAdmin {\n        ecosystemAddress = holder;\n    }\n\n    function setVigPercentage(uint256 _percentage) public onlySystemAdmin {\n        require(\n            _percentage < 10,\n            \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\"\n        );\n        vigPercentage = _percentage;\n    }\n\n    function setVigPercentageShares(\n        uint256 hVig,\n        uint256 eVig\n    ) public onlySystemAdmin {\n        require(\n            hVig <= 100 && eVig <= 100,\n            \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\"\n        );\n        require(\n            hVig + eVig  == 100,\n            \"The sum of all Vig percentage shares must be equal to 100\"\n        );\n\n        holdersVig = hVig;\n        ecosystemVig = eVig;\n    }\n\n    function shareBetEarnings(uint256 _vigAmount) external override {\n        require(_vigAmount > 0, \"bet earnings must be greater than 0\");\n        uint256 holdersShare = (_vigAmount * holdersVig )/ 100;\n        require(holdersShare > 0, \"holders' share must be greater than 0\");\n        uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100;\n        require(ecosystemShare > 0, \"ecosystem share must be greater than 0\");\n\n        _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare);\n\n        _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare);\n    }\n\n    function isSystemAdmin(address _account) external view override returns (bool) {\n        return hasRole(SYSTEM_ADMIN, _account);\n    }\n\n    function isEventAdmin(address _account) external view override returns (bool) {\n        return hasRole(EVENT_ADMIN, _account);\n    }\n\n    function isBlack(address _account) external view override returns (bool) {\n        return hasRole(BLACKLIST, _account);\n    }\n\n}"
			},
			"contracts/interface/IBet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n\ninterface IBet {\n\n    function stake() external view returns(uint);\n\n    function odds() external view returns(uint8);\n\n    function matched() external view returns(uint);\n\n    function better() external view returns(address);\n\n    function marketSide() external view returns (string memory);\n\n    function market() external view returns (address);\n\n    function getBetPairs() external  returns (address[] memory);\n\n    function addPair(address pairAddress) external returns(bool);\n\n    function setMatched(uint _amount) external returns(bool);\n}"
			},
			"contracts/interface/IBetPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n\ninterface IBetPair {\n    function market() external view returns(address);\n\n    function sideABet() external view returns(address);\n\n    function sideBBet() external view returns(address);\n\n    function winnerBet() external view returns(address);\n\n    function winnerAddress() external view returns(address);\n\n    function amountA() external view returns(uint);\n\n    function amountB() external view returns(uint);\n\n    function setWinnerBet( address _addr) external returns(bool);\n}"
			},
			"@openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IWeb3BetsFO{\n\n    function factory() external view returns(address);\n\n    function ecosystemAddress() external view returns(address);\n\n    function holdersAddress() external view returns(address);\n\n    function stableCoin() external view returns(address);\n\n    function holdersVig() external view returns(uint);\n\n    function ecosystemVig() external view returns(uint);\n\n    function vigPercentage() external returns(uint);\n\n    function shareBetEarnings(uint256 _vigAmount) external;\n\n    function isSystemAdmin(address _account) external returns (bool);\n\n    function isEventAdmin(address _account) external returns (bool);\n\n    function isBlack(address _account) external returns (bool);\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 338,
								"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)1828_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)1828_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1828_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1828_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1827,
										"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1527_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1527_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1522,
										"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1526,
										"contract": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220774748894358cdcdb114b588295328f31fe54a8e62ee3757802243f6fedd0e8f64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220774748894358cdcdb114b588295328f31fe54a8e62ee3757802243f6fedd0e8f64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4748894358CDCDB114B588295328F31FE54A8E62EE375780 0x22 NUMBER 0xF6 INVALID 0xDD 0xE DUP16 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "161:2235:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220774748894358cdcdb114b588295328f31fe54a8e62ee3757802243f6fedd0e8f64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x4748894358CDCDB114B588295328F31FE54A8E62EE375780 0x22 NUMBER 0xF6 INVALID 0xDD 0xE DUP16 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "161:2235:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220774748894358cdcdb114b588295328f31fe54a8e62ee3757802243f6fedd0e8f64736f6c63430008040033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1228:12682  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d72e2f7cb4f2b23f33e5f692aeaba6d5fd57f1142ad250c69e03d59ed9f3fb8564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d72e2f7cb4f2b23f33e5f692aeaba6d5fd57f1142ad250c69e03d59ed9f3fb8564736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x2E 0x2F PUSH29 0xB4F2B23F33E5F692AEABA6D5FD57F1142AD250C69E03D59ED9F3FB8564 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "1228:11454:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d72e2f7cb4f2b23f33e5f692aeaba6d5fd57f1142ad250c69e03d59ed9f3fb8564736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0x2E 0x2F PUSH29 0xB4F2B23F33E5F692AEABA6D5FD57F1142AD250C69E03D59ED9F3FB8564 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "1228:11454:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1228,
									"end": 12682,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d72e2f7cb4f2b23f33e5f692aeaba6d5fd57f1142ad250c69e03d59ed9f3fb8564736f6c63430008040033",
									".code": [
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1228,
											"end": 12682,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Bet.sol": {
				"Bet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "market_",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "marketSide_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "stake_",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "odds_",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pairAddress",
									"type": "address"
								}
							],
							"name": "addPair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "betPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "better",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBetPairs",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "market",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketSide",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "matched",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "odds",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMatched",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Bet.sol\":82:2003  contract Bet is IBet {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Bet.sol\":436:443  w3bAddr */\n  sload(0x00)\n    /* \"contracts/Bet.sol\":393:444  IWeb3BetsFO private web3bets = IWeb3BetsFO(w3bAddr) */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Bet.sol\":436:443  w3bAddr */\n  swap1\n  swap3\n  and\n    /* \"contracts/Bet.sol\":393:444  IWeb3BetsFO private web3bets = IWeb3BetsFO(w3bAddr) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Bet.sol\":586:962  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Bet.sol\":766:774  web3bets */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Bet.sol\":766:782  web3bets.factory */\n  and\n  0xc45a0155\n    /* \"contracts/Bet.sol\":766:784  web3bets.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Bet.sol\":752:784  msg.sender == web3bets.factory() */\n  and\n    /* \"contracts/Bet.sol\":752:762  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Bet.sol\":752:784  msg.sender == web3bets.factory() */\n  and\n  eq\n    /* \"contracts/Bet.sol\":744:801  require(msg.sender == web3bets.factory(), \"factory only\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2242:2244   */\n  0x20\n    /* \"contracts/Bet.sol\":744:801  require(msg.sender == web3bets.factory(), \"factory only\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2224:2245   */\n  mstore\n    /* \"#utility.yul\":2281:2283   */\n  0x0c\n    /* \"#utility.yul\":2261:2279   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2254:2284   */\n  mstore\n  shl(0xa0, 0x666163746f7279206f6e6c79)\n    /* \"#utility.yul\":2300:2318   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2293:2335   */\n  mstore\n    /* \"#utility.yul\":2352:2370   */\n  0x64\n  add\n    /* \"contracts/Bet.sol\":744:801  require(msg.sender == web3bets.factory(), \"factory only\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/Bet.sol\":811:817  market */\n  0x02\n    /* \"contracts/Bet.sol\":811:827  market = market_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Bet.sol\":837:861  marketSide = marketSide_ */\n  dup3\n  mload\n  tag_14\n  swap1\n    /* \"contracts/Bet.sol\":837:847  marketSide */\n  0x07\n  swap1\n    /* \"contracts/Bet.sol\":837:861  marketSide = marketSide_ */\n  0x20\n  dup7\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"contracts/Bet.sol\":871:876  stake */\n  0x03\n    /* \"contracts/Bet.sol\":871:885  stake = stake_ */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Bet.sol\":895:899  odds */\n  0x05\n    /* \"contracts/Bet.sol\":895:907  odds = odds_ */\n  dup1\n  sload\n  not(0xff)\n  and\n  0xff\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n  pop\n  0x01\n    /* \"contracts/Bet.sol\":917:933  better = caller_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x00\n  0x04\n    /* \"contracts/Bet.sol\":943:954  matched = 0 */\n  sstore\n    /* \"contracts/Bet.sol\":82:2003  contract Bet is IBet {... */\n  jump(tag_28)\ntag_15:\n  dup3\n  dup1\n  sload\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_20\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_23)\ntag_20:\n  dup3\n  0x1f\n  lt\n  tag_21\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_21:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_22:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_22)\ntag_23:\n  pop\n  tag_24\n  swap3\n  swap2\n  pop\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n  swap1\n  jump\t// out\ntag_25:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_26)\n    /* \"#utility.yul\":14:191   */\ntag_29:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_31:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:356   */\ntag_32:\n    /* \"#utility.yul\":273:286   */\n  dup1\n  mload\n    /* \"#utility.yul\":326:330   */\n  0xff\n    /* \"#utility.yul\":315:331   */\n  dup2\n  and\n    /* \"#utility.yul\":305:332   */\n  dup2\n  eq\n    /* \"#utility.yul\":295:297   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":346:347   */\n  0x00\n    /* \"#utility.yul\":343:344   */\n  dup1\n    /* \"#utility.yul\":336:348   */\n  revert\n    /* \"#utility.yul\":361:579   */\ntag_10:\n    /* \"#utility.yul\":431:437   */\n  0x00\n    /* \"#utility.yul\":484:486   */\n  0x20\n    /* \"#utility.yul\":472:481   */\n  dup3\n    /* \"#utility.yul\":463:470   */\n  dup5\n    /* \"#utility.yul\":459:482   */\n  sub\n    /* \"#utility.yul\":455:487   */\n  slt\n    /* \"#utility.yul\":452:454   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":505:511   */\n  dup1\n    /* \"#utility.yul\":497:503   */\n  dup2\n    /* \"#utility.yul\":490:512   */\n  revert\n    /* \"#utility.yul\":452:454   */\ntag_36:\n    /* \"#utility.yul\":533:573   */\n  tag_37\n    /* \"#utility.yul\":563:572   */\n  dup3\n    /* \"#utility.yul\":533:573   */\n  tag_29\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":523:573   */\n  swap4\n    /* \"#utility.yul\":442:579   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":584:2035   */\ntag_3:\n    /* \"#utility.yul\":698:704   */\n  0x00\n    /* \"#utility.yul\":706:712   */\n  dup1\n    /* \"#utility.yul\":714:720   */\n  0x00\n    /* \"#utility.yul\":722:728   */\n  dup1\n    /* \"#utility.yul\":730:736   */\n  0x00\n    /* \"#utility.yul\":783:786   */\n  0xa0\n    /* \"#utility.yul\":771:780   */\n  dup7\n    /* \"#utility.yul\":762:769   */\n  dup9\n    /* \"#utility.yul\":758:781   */\n  sub\n    /* \"#utility.yul\":754:787   */\n  slt\n    /* \"#utility.yul\":751:753   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":805:811   */\n  dup1\n    /* \"#utility.yul\":797:803   */\n  dup2\n    /* \"#utility.yul\":790:812   */\n  revert\n    /* \"#utility.yul\":751:753   */\ntag_39:\n    /* \"#utility.yul\":833:873   */\n  tag_40\n    /* \"#utility.yul\":863:872   */\n  dup7\n    /* \"#utility.yul\":833:873   */\n  tag_29\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":823:873   */\n  swap5\n  pop\n    /* \"#utility.yul\":892:894   */\n  0x20\n    /* \"#utility.yul\":913:962   */\n  tag_41\n    /* \"#utility.yul\":958:960   */\n  dup2\n    /* \"#utility.yul\":947:956   */\n  dup9\n    /* \"#utility.yul\":943:961   */\n  add\n    /* \"#utility.yul\":913:962   */\n  tag_29\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1006:1008   */\n  0x40\n    /* \"#utility.yul\":991:1009   */\n  dup9\n  add\n    /* \"#utility.yul\":985:1010   */\n  mload\n    /* \"#utility.yul\":903:962   */\n  swap1\n  swap6\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1059:1073   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1091:1097   */\n  dup4\n    /* \"#utility.yul\":1083:1089   */\n  dup5\n    /* \"#utility.yul\":1076:1098   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_42:\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1123:1132   */\n  dup10\n    /* \"#utility.yul\":1119:1141   */\n  add\n    /* \"#utility.yul\":1109:1141   */\n  swap2\n  pop\n    /* \"#utility.yul\":1179:1186   */\n  dup10\n    /* \"#utility.yul\":1172:1176   */\n  0x1f\n    /* \"#utility.yul\":1168:1170   */\n  dup4\n    /* \"#utility.yul\":1164:1177   */\n  add\n    /* \"#utility.yul\":1160:1187   */\n  slt\n    /* \"#utility.yul\":1150:1152   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1206:1212   */\n  dup4\n    /* \"#utility.yul\":1198:1204   */\n  dup5\n    /* \"#utility.yul\":1191:1213   */\n  revert\n    /* \"#utility.yul\":1150:1152   */\ntag_43:\n    /* \"#utility.yul\":1240:1242   */\n  dup2\n    /* \"#utility.yul\":1234:1243   */\n  mload\n    /* \"#utility.yul\":1262:1264   */\n  dup2\n    /* \"#utility.yul\":1258:1260   */\n  dup2\n    /* \"#utility.yul\":1255:1265   */\n  gt\n    /* \"#utility.yul\":1252:1254   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1268:1286   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1343:1345   */\n  0x40\n    /* \"#utility.yul\":1337:1346   */\n  mload\n    /* \"#utility.yul\":1311:1313   */\n  0x1f\n    /* \"#utility.yul\":1397:1410   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1393:1415   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1417:1419   */\n  0x3f\n    /* \"#utility.yul\":1389:1420   */\n  add\n    /* \"#utility.yul\":1385:1425   */\n  and\n    /* \"#utility.yul\":1373:1426   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1441:1459   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1461:1483   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1438:1484   */\n  or\n    /* \"#utility.yul\":1435:1437   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1487:1505   */\n  tag_48\n  tag_46\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1527:1537   */\n  dup2\n    /* \"#utility.yul\":1523:1525   */\n  0x40\n    /* \"#utility.yul\":1516:1538   */\n  mstore\n    /* \"#utility.yul\":1562:1564   */\n  dup3\n    /* \"#utility.yul\":1554:1560   */\n  dup2\n    /* \"#utility.yul\":1547:1565   */\n  mstore\n    /* \"#utility.yul\":1602:1609   */\n  dup13\n    /* \"#utility.yul\":1597:1599   */\n  dup7\n    /* \"#utility.yul\":1592:1594   */\n  dup5\n    /* \"#utility.yul\":1588:1590   */\n  dup8\n    /* \"#utility.yul\":1584:1595   */\n  add\n    /* \"#utility.yul\":1580:1600   */\n  add\n    /* \"#utility.yul\":1577:1610   */\n  gt\n    /* \"#utility.yul\":1574:1576   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1628:1634   */\n  dup7\n    /* \"#utility.yul\":1620:1626   */\n  dup8\n    /* \"#utility.yul\":1613:1635   */\n  revert\n    /* \"#utility.yul\":1574:1576   */\ntag_49:\n    /* \"#utility.yul\":1655:1661   */\n  dup7\n    /* \"#utility.yul\":1646:1661   */\n  swap4\n  pop\n    /* \"#utility.yul\":1670:1799   */\ntag_50:\n    /* \"#utility.yul\":1684:1686   */\n  dup3\n    /* \"#utility.yul\":1681:1682   */\n  dup5\n    /* \"#utility.yul\":1678:1687   */\n  lt\n    /* \"#utility.yul\":1670:1799   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1772:1782   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1768:1787   */\n  dup7\n  add\n    /* \"#utility.yul\":1762:1788   */\n  mload\n    /* \"#utility.yul\":1741:1755   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1737:1760   */\n  dup8\n  add\n    /* \"#utility.yul\":1730:1789   */\n  mstore\n    /* \"#utility.yul\":1695:1705   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1670:1799   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":1817:1819   */\n  dup3\n    /* \"#utility.yul\":1814:1815   */\n  dup5\n    /* \"#utility.yul\":1811:1820   */\n  gt\n    /* \"#utility.yul\":1808:1810   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1876:1882   */\n  dup7\n    /* \"#utility.yul\":1871:1873   */\n  dup7\n    /* \"#utility.yul\":1866:1868   */\n  dup5\n    /* \"#utility.yul\":1858:1864   */\n  dup4\n    /* \"#utility.yul\":1854:1869   */\n  add\n    /* \"#utility.yul\":1850:1874   */\n  add\n    /* \"#utility.yul\":1843:1883   */\n  mstore\n    /* \"#utility.yul\":1808:1810   */\ntag_53:\n    /* \"#utility.yul\":1912:1918   */\n  dup1\n    /* \"#utility.yul\":1902:1918   */\n  swap9\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1958:1960   */\n  0x60\n    /* \"#utility.yul\":1947:1956   */\n  dup7\n    /* \"#utility.yul\":1943:1961   */\n  add\n    /* \"#utility.yul\":1937:1962   */\n  mload\n    /* \"#utility.yul\":1927:1962   */\n  swap2\n  pop\n    /* \"#utility.yul\":1981:2029   */\n  tag_54\n    /* \"#utility.yul\":2024:2027   */\n  0x80\n    /* \"#utility.yul\":2013:2022   */\n  dup8\n    /* \"#utility.yul\":2009:2028   */\n  add\n    /* \"#utility.yul\":1981:2029   */\n  tag_32\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1971:2029   */\n  swap1\n  pop\n    /* \"#utility.yul\":741:2035   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2381:2761   */\ntag_18:\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2456:2468   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2503:2515   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2524:2526   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2578:2582   */\n  0x7f\n    /* \"#utility.yul\":2570:2576   */\n  dup3\n    /* \"#utility.yul\":2566:2583   */\n  and\n    /* \"#utility.yul\":2556:2583   */\n  swap2\n  pop\n    /* \"#utility.yul\":2524:2526   */\ntag_57:\n    /* \"#utility.yul\":2631:2633   */\n  0x20\n    /* \"#utility.yul\":2623:2629   */\n  dup3\n    /* \"#utility.yul\":2620:2634   */\n  lt\n    /* \"#utility.yul\":2600:2618   */\n  dup2\n    /* \"#utility.yul\":2597:2635   */\n  eq\n    /* \"#utility.yul\":2594:2596   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2677:2687   */\n  0x4e487b71\n    /* \"#utility.yul\":2672:2675   */\n  0xe0\n    /* \"#utility.yul\":2668:2688   */\n  shl\n    /* \"#utility.yul\":2665:2666   */\n  0x00\n    /* \"#utility.yul\":2658:2689   */\n  mstore\n    /* \"#utility.yul\":2712:2716   */\n  0x22\n    /* \"#utility.yul\":2709:2710   */\n  0x04\n    /* \"#utility.yul\":2702:2717   */\n  mstore\n    /* \"#utility.yul\":2740:2744   */\n  0x24\n    /* \"#utility.yul\":2737:2738   */\n  0x00\n    /* \"#utility.yul\":2730:2745   */\n  revert\n    /* \"#utility.yul\":2594:2596   */\ntag_58:\n  pop\n    /* \"#utility.yul\":2436:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2766:2893   */\ntag_46:\n    /* \"#utility.yul\":2827:2837   */\n  0x4e487b71\n    /* \"#utility.yul\":2822:2825   */\n  0xe0\n    /* \"#utility.yul\":2818:2838   */\n  shl\n    /* \"#utility.yul\":2815:2816   */\n  0x00\n    /* \"#utility.yul\":2808:2839   */\n  mstore\n    /* \"#utility.yul\":2858:2862   */\n  0x41\n    /* \"#utility.yul\":2855:2856   */\n  0x04\n    /* \"#utility.yul\":2848:2863   */\n  mstore\n    /* \"#utility.yul\":2882:2886   */\n  0x24\n    /* \"#utility.yul\":2879:2880   */\n  0x00\n    /* \"#utility.yul\":2872:2887   */\n  revert\n    /* \"#utility.yul\":2798:2893   */\ntag_28:\n    /* \"contracts/Bet.sol\":82:2003  contract Bet is IBet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Bet.sol\":82:2003  contract Bet is IBet {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80f55605\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x80f55605\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8aac9cca\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa89bc05b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc2b7bbb6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfa6ead20\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x12713ee4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x233de126\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3a4b66f1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5a4cfc06\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x718c7d44\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Bet.sol\":968:1072  function getBetPairs() external view override returns (address[] memory){... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bet.sol\":287:313  uint8 public override odds */\n    tag_4:\n      sload(0x05)\n      tag_18\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":3527:3531   */\n      0xff\n        /* \"#utility.yul\":3515:3532   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3497:3533   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3485:3487   */\n      0x20\n        /* \"#utility.yul\":3470:3488   */\n      add\n        /* \"contracts/Bet.sol\":287:313  uint8 public override odds */\n      tag_16\n        /* \"#utility.yul\":3452:3539   */\n      jump\n        /* \"contracts/Bet.sol\":213:242  uint256 public override stake */\n    tag_5:\n      tag_22\n      sload(0x03)\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":3319:3344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3307:3309   */\n      0x20\n        /* \"#utility.yul\":3292:3310   */\n      add\n        /* \"contracts/Bet.sol\":213:242  uint256 public override stake */\n      tag_16\n        /* \"#utility.yul\":3274:3350   */\n      jump\n        /* \"contracts/Bet.sol\":1782:1996  function setMatched(uint _amount) external override returns(bool) {... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1776:1790   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1769:1791   */\n      iszero\n        /* \"#utility.yul\":1751:1792   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1739:1741   */\n      0x20\n        /* \"#utility.yul\":1724:1742   */\n      add\n        /* \"contracts/Bet.sol\":1782:1996  function setMatched(uint _amount) external override returns(bool) {... */\n      tag_16\n        /* \"#utility.yul\":1706:1798   */\n      jump\n        /* \"contracts/Bet.sol\":139:169  address public override better */\n    tag_7:\n      sload(0x01)\n      tag_32\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":901:933   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":883:934   */\n      dup2\n      mstore\n        /* \"#utility.yul\":871:873   */\n      0x20\n        /* \"#utility.yul\":856:874   */\n      add\n        /* \"contracts/Bet.sol\":139:169  address public override better */\n      tag_16\n        /* \"#utility.yul\":838:940   */\n      jump\n        /* \"contracts/Bet.sol\":176:206  address public override market */\n    tag_8:\n      sload(0x02)\n      tag_32\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Bet.sol\":249:280  uint256 public override matched */\n    tag_9:\n      tag_22\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/Bet.sol\":320:345  address[] public betPairs */\n    tag_10:\n      tag_32\n      tag_43\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"contracts/Bet.sol\":1574:1776  function addPair(address _pairAddress) external override returns(bool) {... */\n    tag_11:\n      tag_26\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"contracts/Bet.sol\":352:386  string  public override marketSide */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"contracts/Bet.sol\":968:1072  function getBetPairs() external view override returns (address[] memory){... */\n    tag_15:\n        /* \"contracts/Bet.sol\":1023:1039  address[] memory */\n      0x60\n        /* \"contracts/Bet.sol\":1057:1065  betPairs */\n      0x06\n        /* \"contracts/Bet.sol\":1050:1065  return betPairs */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_57:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_57\n      jumpi\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Bet.sol\":968:1072  function getBetPairs() external view override returns (address[] memory){... */\n      swap1\n      jump\t// out\n        /* \"contracts/Bet.sol\":1782:1996  function setMatched(uint _amount) external override returns(bool) {... */\n    tag_29:\n        /* \"contracts/Bet.sol\":1880:1886  market */\n      sload(0x02)\n        /* \"contracts/Bet.sol\":1842:1846  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bet.sol\":1880:1886  market */\n      and\n        /* \"contracts/Bet.sol\":1866:1876  msg.sender */\n      caller\n        /* \"contracts/Bet.sol\":1866:1886  msg.sender == market */\n      eq\n        /* \"contracts/Bet.sol\":1858:1940  require(msg.sender == market, \"only bet's market contract can call this function\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2957:2959   */\n      0x20\n        /* \"contracts/Bet.sol\":1858:1940  require(msg.sender == market, \"only bet's market contract can call this function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2939:2960   */\n      mstore\n        /* \"#utility.yul\":2996:2998   */\n      0x31\n        /* \"#utility.yul\":2976:2994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2969:2999   */\n      mstore\n        /* \"#utility.yul\":3035:3069   */\n      0x6f6e6c79206265742773206d61726b657420636f6e74726163742063616e2063\n        /* \"#utility.yul\":3015:3033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3008:3070   */\n      mstore\n      shl(0x79, 0x30b636103a3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3086:3104   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3079:3126   */\n      mstore\n        /* \"#utility.yul\":3143:3162   */\n      0x84\n      add\n        /* \"contracts/Bet.sol\":1858:1940  require(msg.sender == market, \"only bet's market contract can call this function\") */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/Bet.sol\":1961:1968  _amount */\n      dup2\n        /* \"contracts/Bet.sol\":1950:1957  matched */\n      0x04\n      0x00\n        /* \"contracts/Bet.sol\":1950:1968  matched += _amount */\n      dup3\n      dup3\n      sload\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Bet.sol\":1985:1989  true */\n      0x01\n      swap4\n        /* \"contracts/Bet.sol\":1782:1996  function setMatched(uint _amount) external override returns(bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bet.sol\":320:345  address[] public betPairs */\n    tag_44:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Bet.sol\":1574:1776  function addPair(address _pairAddress) external override returns(bool) {... */\n    tag_49:\n        /* \"contracts/Bet.sol\":1639:1643  bool */\n      0x00\n        /* \"contracts/Bet.sol\":1663:1691  isValidBetPair(_pairAddress) */\n      tag_67\n        /* \"contracts/Bet.sol\":1678:1690  _pairAddress */\n      dup3\n        /* \"contracts/Bet.sol\":1663:1677  isValidBetPair */\n      tag_68\n        /* \"contracts/Bet.sol\":1663:1691  isValidBetPair(_pairAddress) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Bet.sol\":1655:1711  require(isValidBetPair(_pairAddress), \"betpair invalid\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2613:2615   */\n      0x20\n        /* \"contracts/Bet.sol\":1655:1711  require(isValidBetPair(_pairAddress), \"betpair invalid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2595:2616   */\n      mstore\n        /* \"#utility.yul\":2652:2654   */\n      0x0f\n        /* \"#utility.yul\":2632:2650   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2625:2655   */\n      mstore\n      shl(0x8a, 0x18995d1c185a5c881a5b9d985b1a59)\n        /* \"#utility.yul\":2671:2689   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2664:2709   */\n      mstore\n        /* \"#utility.yul\":2726:2744   */\n      0x64\n      add\n        /* \"contracts/Bet.sol\":1655:1711  require(isValidBetPair(_pairAddress), \"betpair invalid\") */\n      tag_60\n        /* \"#utility.yul\":2585:2750   */\n      jump\n        /* \"contracts/Bet.sol\":1655:1711  require(isValidBetPair(_pairAddress), \"betpair invalid\") */\n    tag_69:\n      pop\n        /* \"contracts/Bet.sol\":1721:1729  betPairs */\n      0x06\n        /* \"contracts/Bet.sol\":1721:1748  betPairs.push(_pairAddress) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x00\n      swap3\n      swap1\n      swap3\n      mstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      swap1\n        /* \"contracts/Bet.sol\":1574:1776  function addPair(address _pairAddress) external override returns(bool) {... */\n      jump\t// out\n        /* \"contracts/Bet.sol\":352:386  string  public override marketSide */\n    tag_52:\n      0x07\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_74\n      jump\t// in\n    tag_75:\n      dup1\n      iszero\n      tag_76\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_77\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_76)\n    tag_77:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_78:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_78\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Bet.sol\":1078:1568  function isValidBetPair(address _addr) private view returns (bool){... */\n    tag_68:\n        /* \"contracts/Bet.sol\":1139:1143  bool */\n      0x00\n        /* \"contracts/Bet.sol\":1206:1224  extcodesize(_addr) */\n      dup2\n      extcodesize\n        /* \"contracts/Bet.sol\":1246:1254  size > 0 */\n      0xffffffff\n      dup2\n      and\n      iszero\n        /* \"contracts/Bet.sol\":1243:1562  if(size > 0){... */\n      tag_80\n      jumpi\n        /* \"contracts/Bet.sol\":1269:1282  IBetPair pair */\n      0x00\n        /* \"contracts/Bet.sol\":1294:1299  _addr */\n      dup4\n        /* \"contracts/Bet.sol\":1269:1300  IBetPair pair = IBetPair(_addr) */\n      swap1\n      pop\n        /* \"contracts/Bet.sol\":1314:1323  IBet betA */\n      0x00\n        /* \"contracts/Bet.sol\":1331:1335  pair */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bet.sol\":1331:1344  pair.sideABet */\n      and\n      0x15e894ab\n        /* \"contracts/Bet.sol\":1331:1346  pair.sideABet() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"contracts/Bet.sol\":1314:1347  IBet betA = IBet(pair.sideABet()) */\n      swap1\n      pop\n        /* \"contracts/Bet.sol\":1381:1385  betA */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bet.sol\":1381:1392  betA.market */\n      and\n      0x80f55605\n        /* \"contracts/Bet.sol\":1381:1394  betA.market() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bet.sol\":1364:1394  pair.market() == betA.market() */\n      and\n        /* \"contracts/Bet.sol\":1364:1368  pair */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bet.sol\":1364:1375  pair.market */\n      and\n      0x80f55605\n        /* \"contracts/Bet.sol\":1364:1377  pair.market() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Bet.sol\":1364:1394  pair.market() == betA.market() */\n      and\n      eq\n        /* \"contracts/Bet.sol\":1361:1501  if(pair.market() == betA.market()){... */\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/Bet.sol\":1420:1424  true */\n      0x01\n      swap5\n        /* \"contracts/Bet.sol\":1078:1568  function isValidBetPair(address _addr) private view returns (bool){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bet.sol\":1361:1501  if(pair.market() == betA.market()){... */\n    tag_94:\n      pop\n        /* \"contracts/Bet.sol\":1481:1486  false */\n      0x00\n      swap5\n        /* \"contracts/Bet.sol\":1078:1568  function isValidBetPair(address _addr) private view returns (bool){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bet.sol\":1243:1562  if(size > 0){... */\n    tag_80:\n      pop\n        /* \"contracts/Bet.sol\":1546:1551  false */\n      0x00\n      swap3\n        /* \"contracts/Bet.sol\":1078:1568  function isValidBetPair(address _addr) private view returns (bool){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Bet.sol\":1243:1562  if(size > 0){... */\n    tag_96:\n        /* \"contracts/Bet.sol\":1078:1568  function isValidBetPair(address _addr) private view returns (bool){... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:271   */\n    tag_48:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_99:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_100\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":260:265   */\n      swap4\n        /* \"#utility.yul\":84:271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:537   */\n    tag_85:\n        /* \"#utility.yul\":346:352   */\n      0x00\n        /* \"#utility.yul\":399:401   */\n      0x20\n        /* \"#utility.yul\":387:396   */\n      dup3\n        /* \"#utility.yul\":378:385   */\n      dup5\n        /* \"#utility.yul\":374:397   */\n      sub\n        /* \"#utility.yul\":370:402   */\n      slt\n        /* \"#utility.yul\":367:369   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":412:418   */\n      dup2\n        /* \"#utility.yul\":405:427   */\n      revert\n        /* \"#utility.yul\":367:369   */\n    tag_103:\n        /* \"#utility.yul\":457:466   */\n      dup2\n        /* \"#utility.yul\":451:467   */\n      mload\n        /* \"#utility.yul\":476:507   */\n      tag_100\n        /* \"#utility.yul\":501:506   */\n      dup2\n        /* \"#utility.yul\":476:507   */\n      tag_101\n      jump\t// in\n        /* \"#utility.yul\":542:732   */\n    tag_28:\n        /* \"#utility.yul\":601:607   */\n      0x00\n        /* \"#utility.yul\":654:656   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup3\n        /* \"#utility.yul\":633:640   */\n      dup5\n        /* \"#utility.yul\":629:652   */\n      sub\n        /* \"#utility.yul\":625:657   */\n      slt\n        /* \"#utility.yul\":622:624   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":675:681   */\n      dup1\n        /* \"#utility.yul\":667:673   */\n      dup2\n        /* \"#utility.yul\":660:682   */\n      revert\n        /* \"#utility.yul\":622:624   */\n    tag_106:\n      pop\n        /* \"#utility.yul\":703:726   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":612:732   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":945:1606   */\n    tag_17:\n        /* \"#utility.yul\":1116:1118   */\n      0x20\n        /* \"#utility.yul\":1168:1189   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1238:1251   */\n      dup3\n      mload\n        /* \"#utility.yul\":1141:1159   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1260:1282   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1087:1091   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1116:1118   */\n      swap1\n        /* \"#utility.yul\":1339:1354   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1313:1315   */\n      0x40\n        /* \"#utility.yul\":1298:1316   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1087:1091   */\n      dup5\n        /* \"#utility.yul\":1385:1580   */\n    tag_109:\n        /* \"#utility.yul\":1399:1405   */\n      dup2\n        /* \"#utility.yul\":1396:1397   */\n      dup2\n        /* \"#utility.yul\":1393:1406   */\n      lt\n        /* \"#utility.yul\":1385:1580   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1464:1477   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1460:1499   */\n      and\n        /* \"#utility.yul\":1448:1500   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1555:1570   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1520:1532   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1496:1497   */\n      0x01\n        /* \"#utility.yul\":1414:1423   */\n      add\n        /* \"#utility.yul\":1385:1580   */\n      jump(tag_109)\n    tag_111:\n      pop\n        /* \"#utility.yul\":1597:1600   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1096:1606   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2406   */\n    tag_54:\n        /* \"#utility.yul\":1915:1919   */\n      0x00\n        /* \"#utility.yul\":1944:1946   */\n      0x20\n        /* \"#utility.yul\":1973:1975   */\n      dup1\n        /* \"#utility.yul\":1962:1971   */\n      dup4\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":2005:2011   */\n      dup4\n        /* \"#utility.yul\":1999:2012   */\n      mload\n        /* \"#utility.yul\":2048:2054   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      dup3\n        /* \"#utility.yul\":2032:2041   */\n      dup6\n        /* \"#utility.yul\":2028:2046   */\n      add\n        /* \"#utility.yul\":2021:2055   */\n      mstore\n        /* \"#utility.yul\":2073:2077   */\n      dup3\n        /* \"#utility.yul\":2086:2226   */\n    tag_114:\n        /* \"#utility.yul\":2100:2106   */\n      dup2\n        /* \"#utility.yul\":2097:2098   */\n      dup2\n        /* \"#utility.yul\":2094:2107   */\n      lt\n        /* \"#utility.yul\":2086:2226   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":2195:2209   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2191:2214   */\n      dup4\n      add\n        /* \"#utility.yul\":2185:2215   */\n      mload\n        /* \"#utility.yul\":2161:2178   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2180:2182   */\n      0x40\n        /* \"#utility.yul\":2157:2183   */\n      add\n        /* \"#utility.yul\":2150:2216   */\n      mstore\n        /* \"#utility.yul\":2115:2125   */\n      dup3\n      add\n        /* \"#utility.yul\":2086:2226   */\n      jump(tag_114)\n    tag_116:\n        /* \"#utility.yul\":2244:2250   */\n      dup2\n        /* \"#utility.yul\":2241:2242   */\n      dup2\n        /* \"#utility.yul\":2238:2251   */\n      gt\n        /* \"#utility.yul\":2235:2237   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":2314:2318   */\n      dup4\n        /* \"#utility.yul\":2309:2311   */\n      0x40\n        /* \"#utility.yul\":2300:2306   */\n      dup4\n        /* \"#utility.yul\":2289:2298   */\n      dup8\n        /* \"#utility.yul\":2285:2307   */\n      add\n        /* \"#utility.yul\":2281:2312   */\n      add\n        /* \"#utility.yul\":2274:2319   */\n      mstore\n        /* \"#utility.yul\":2235:2237   */\n    tag_117:\n      pop\n        /* \"#utility.yul\":2390:2392   */\n      0x1f\n        /* \"#utility.yul\":2369:2384   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2365:2394   */\n      and\n        /* \"#utility.yul\":2350:2395   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2397:2399   */\n      0x40\n        /* \"#utility.yul\":2346:2400   */\n      add\n      swap4\n        /* \"#utility.yul\":1924:2406   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3544:3773   */\n    tag_63:\n        /* \"#utility.yul\":3584:3587   */\n      0x00\n        /* \"#utility.yul\":3615:3616   */\n      dup3\n        /* \"#utility.yul\":3611:3617   */\n      not\n        /* \"#utility.yul\":3608:3609   */\n      dup3\n        /* \"#utility.yul\":3605:3618   */\n      gt\n        /* \"#utility.yul\":3602:3604   */\n      iszero\n      tag_123\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3641:3674   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3697:3701   */\n      0x11\n        /* \"#utility.yul\":3694:3695   */\n      0x04\n        /* \"#utility.yul\":3687:3702   */\n      mstore\n        /* \"#utility.yul\":3727:3731   */\n      0x24\n        /* \"#utility.yul\":3648:3651   */\n      dup2\n        /* \"#utility.yul\":3715:3732   */\n      revert\n        /* \"#utility.yul\":3602:3604   */\n    tag_123:\n      pop\n        /* \"#utility.yul\":3758:3767   */\n      add\n      swap1\n        /* \"#utility.yul\":3592:3773   */\n      jump\t// out\n        /* \"#utility.yul\":3778:4158   */\n    tag_74:\n        /* \"#utility.yul\":3857:3858   */\n      0x01\n        /* \"#utility.yul\":3853:3865   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3900:3912   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3921:3923   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":3975:3979   */\n      0x7f\n        /* \"#utility.yul\":3967:3973   */\n      dup3\n        /* \"#utility.yul\":3963:3980   */\n      and\n        /* \"#utility.yul\":3953:3980   */\n      swap2\n      pop\n        /* \"#utility.yul\":3921:3923   */\n    tag_125:\n        /* \"#utility.yul\":4028:4030   */\n      0x20\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4017:4031   */\n      lt\n        /* \"#utility.yul\":3997:4015   */\n      dup2\n        /* \"#utility.yul\":3994:4032   */\n      eq\n        /* \"#utility.yul\":3991:3993   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":4074:4084   */\n      0x4e487b71\n        /* \"#utility.yul\":4069:4072   */\n      0xe0\n        /* \"#utility.yul\":4065:4085   */\n      shl\n        /* \"#utility.yul\":4062:4063   */\n      0x00\n        /* \"#utility.yul\":4055:4086   */\n      mstore\n        /* \"#utility.yul\":4109:4113   */\n      0x22\n        /* \"#utility.yul\":4106:4107   */\n      0x04\n        /* \"#utility.yul\":4099:4114   */\n      mstore\n        /* \"#utility.yul\":4137:4141   */\n      0x24\n        /* \"#utility.yul\":4134:4135   */\n      0x00\n        /* \"#utility.yul\":4127:4142   */\n      revert\n        /* \"#utility.yul\":4163:4294   */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4238:4269   */\n      dup2\n      and\n        /* \"#utility.yul\":4228:4270   */\n      dup2\n      eq\n        /* \"#utility.yul\":4218:4220   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":4284:4285   */\n      0x00\n        /* \"#utility.yul\":4281:4282   */\n      dup1\n        /* \"#utility.yul\":4274:4286   */\n      revert\n        /* \"#utility.yul\":4218:4220   */\n    tag_128:\n        /* \"#utility.yul\":4208:4294   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122053d4ee6a7724b5ab237d58d1b8eba3213553e8e089f79fa3b7366e6d13d8843564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2895:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:19"
															},
															"nodeType": "YulIf",
															"src": "115:2:19"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:19",
														"type": ""
													}
												],
												"src": "14:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "254:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "264:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "273:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "264:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "346:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "336:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "336:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "336:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "308:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "319:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "326:4:19",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "315:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "315:16:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "305:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "305:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:35:19"
															},
															"nodeType": "YulIf",
															"src": "295:2:19"
														}
													]
												},
												"name": "abi_decode_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "233:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "244:5:19",
														"type": ""
													}
												],
												"src": "196:160:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "442:137:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "488:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "497:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "505:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "490:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "490:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "463:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "459:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "459:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "484:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "455:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:32:19"
															},
															"nodeType": "YulIf",
															"src": "452:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "523:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "533:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "408:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "419:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "431:6:19",
														"type": ""
													}
												],
												"src": "361:218:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:1294:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "788:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "797:6:19"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "805:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "790:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "790:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "762:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "771:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "758:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "754:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:33:19"
															},
															"nodeType": "YulIf",
															"src": "751:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "863:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "833:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:12:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "892:2:19",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "886:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "947:9:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "958:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "943:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "913:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:49:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "971:39:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "995:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1006:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "991:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "985:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:25:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "975:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1019:28:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1037:2:19",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1041:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1033:10:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1045:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:18:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1023:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1074:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1083:6:19"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1091:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1076:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1076:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1076:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1062:6:19"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1070:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:14:19"
															},
															"nodeType": "YulIf",
															"src": "1056:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1109:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1123:9:19"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1134:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:22:19"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1113:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1189:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1198:6:19"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1206:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1191:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1191:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1191:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1168:2:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1172:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1179:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1160:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1160:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1153:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:35:19"
															},
															"nodeType": "YulIf",
															"src": "1150:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1224:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1240:2:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1234:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:9:19"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1228:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1266:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1268:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1268:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1268:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1258:2:19"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1262:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1255:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:10:19"
															},
															"nodeType": "YulIf",
															"src": "1252:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1297:17:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1311:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:7:19"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1301:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1323:23:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1343:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1337:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:9:19"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1327:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1355:71:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1377:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "1401:2:19"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1405:4:19",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1397:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1397:13:19"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "1412:2:19"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1393:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1393:22:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1417:2:19",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1389:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1389:31:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1422:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1385:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:40:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1373:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:53:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1359:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1485:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1487:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1487:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1487:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1444:10:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1456:2:19"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1441:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1441:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1464:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1476:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1461:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1438:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:46:19"
															},
															"nodeType": "YulIf",
															"src": "1435:2:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1523:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1527:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1516:22:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1554:6:19"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1562:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:18:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1547:18:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1620:6:19"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1628:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1613:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1588:2:19"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1592:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1584:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1584:11:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1597:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:20:19"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1602:7:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1577:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:33:19"
															},
															"nodeType": "YulIf",
															"src": "1574:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1646:15:19",
															"value": {
																"name": "value4",
																"nodeType": "YulIdentifier",
																"src": "1655:6:19"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1650:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1716:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1745:6:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1753:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1741:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1741:14:19"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1757:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1737:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1737:23:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1776:2:19"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1780:1:19"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1772:3:19"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1772:10:19"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1784:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1768:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1768:19:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1762:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1762:26:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1730:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:59:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1730:59:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1681:1:19"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1684:2:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1678:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:9:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1688:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1690:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1699:1:19"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1702:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1695:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1695:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1690:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1674:3:19",
																"statements": []
															},
															"src": "1670:129:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1829:64:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1858:6:19"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1866:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1854:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1854:15:19"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1871:2:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1850:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1850:24:19"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1843:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1843:40:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1843:40:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1814:1:19"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1817:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1811:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:9:19"
															},
															"nodeType": "YulIf",
															"src": "1808:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1902:16:19",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1912:6:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1927:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1958:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1937:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:25:19"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1971:58:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2024:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1981:27:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:48:19"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1971:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_uint256t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "675:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "686:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "698:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "706:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "714:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "722:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "730:6:19",
														"type": ""
													}
												],
												"src": "584:1451:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2214:162:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2224:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2265:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2276:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2261:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2281:2:19",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2254:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2304:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2315:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2320:14:19",
																		"type": "",
																		"value": "factory only"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2293:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:42:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2293:42:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2344:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2356:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2367:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2352:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2344:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9c9207ffa4caa69fdf7eb9baf817593537bbb63a92b8b5bd60fb592f7cb32270__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2191:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2205:4:19",
														"type": ""
													}
												],
												"src": "2040:336:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2436:325:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2446:22:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:19",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2463:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2456:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2477:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2507:4:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2481:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2554:31:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2556:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2570:6:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2578:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2566:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2556:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2534:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:26:19"
															},
															"nodeType": "YulIf",
															"src": "2524:2:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2644:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2665:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2672:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2677:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2668:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2668:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2658:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2658:31:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2658:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2709:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:4:19",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2702:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2702:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2737:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2740:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2730:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2730:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2730:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2600:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2623:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2631:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2620:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2620:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2597:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:38:19"
															},
															"nodeType": "YulIf",
															"src": "2594:2:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2416:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2425:6:19",
														"type": ""
													}
												],
												"src": "2381:380:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2822:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2818:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2818:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2858:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2879:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2766:127:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint8_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_uint256t_uint8_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let _1 := 32\n        value1 := abi_decode_address_fromMemory(add(headStart, _1))\n        let offset := mload(add(headStart, 64))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value4, value4) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value4, value4) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value4, value4) }\n        let i := value4\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value4)\n        }\n        value2 := memPtr\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint8_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_9c9207ffa4caa69fdf7eb9baf817593537bbb63a92b8b5bd60fb592f7cb32270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"factory only\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600054600880546001600160a01b0319166001600160a01b039092169190911790553480156200003357600080fd5b5060405162000b5938038062000b598339810160408190526200005691620002a4565b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015620000a557600080fd5b505afa158015620000ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e0919062000280565b6001600160a01b0316336001600160a01b031614620001345760405162461bcd60e51b815260206004820152600c60248201526b666163746f7279206f6e6c7960a01b604482015260640160405180910390fd5b600280546001600160a01b0319166001600160a01b038616179055825162000164906007906020860190620001ab565b506003919091556005805460ff191660ff9092169190911790555050600180546001600160a01b0319166001600160a01b0392909216919091179055600060045562000412565b828054620001b990620003bf565b90600052602060002090601f016020900481019282620001dd576000855562000228565b82601f10620001f857805160ff191683800117855562000228565b8280016001018555821562000228579182015b82811115620002285782518255916020019190600101906200020b565b50620002369291506200023a565b5090565b5b808211156200023657600081556001016200023b565b80516001600160a01b03811681146200026957600080fd5b919050565b805160ff811681146200026957600080fd5b60006020828403121562000292578081fd5b6200029d8262000251565b9392505050565b600080600080600060a08688031215620002bc578081fd5b620002c78662000251565b94506020620002d881880162000251565b60408801519095506001600160401b0380821115620002f5578384fd5b818901915089601f83011262000309578384fd5b8151818111156200031e576200031e620003fc565b604051601f8201601f19908116603f01168101908382118183101715620003495762000349620003fc565b816040528281528c8684870101111562000361578687fd5b8693505b8284101562000384578484018601518185018701529285019262000365565b828411156200039557868684830101525b80985050505050505060608601519150620003b3608087016200026e565b90509295509295909350565b600181811c90821680620003d457607f821691505b60208210811415620003f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61073780620004226000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806380f556051161006657806380f55605146101455780638aac9cca14610158578063a89bc05b14610161578063c2b7bbb614610174578063fa6ead201461018757600080fd5b806312713ee4146100a3578063233de126146100c15780633a4b66f1146100e05780635a4cfc06146100f7578063718c7d441461011a575b600080fd5b6100ab61019c565b6040516100b891906105f0565b60405180910390f35b6005546100ce9060ff1681565b60405160ff90911681526020016100b8565b6100e960035481565b6040519081526020016100b8565b61010a6101053660046105d8565b6101fe565b60405190151581526020016100b8565b60015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b60025461012d906001600160a01b031681565b6100e960045481565b61012d61016f3660046105d8565b610299565b61010a610182366004610599565b6102c3565b61018f610362565b6040516100b8919061063d565b606060068054806020026020016040519081016040528092919081815260200182805480156101f457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101d6575b5050505050905090565b6002546000906001600160a01b0316331461027a5760405162461bcd60e51b815260206004820152603160248201527f6f6e6c79206265742773206d61726b657420636f6e74726163742063616e206360448201527030b636103a3434b990333ab731ba34b7b760791b60648201526084015b60405180910390fd5b816004600082825461028c9190610690565b9091555060019392505050565b600681815481106102a957600080fd5b6000918252602090912001546001600160a01b0316905081565b60006102ce826103f0565b61030c5760405162461bcd60e51b815260206004820152600f60248201526e18995d1c185a5c881a5b9d985b1a59608a1b6044820152606401610271565b5060068054600180820183556000929092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b03939093169290921790915590565b6007805461036f906106b4565b80601f016020809104026020016040519081016040528092919081815260200182805461039b906106b4565b80156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b505050505081565b6000813b63ffffffff81161561058a5760008390506000816001600160a01b03166315e894ab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047891906105bc565b9050806001600160a01b03166380f556056040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b357600080fd5b505afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906105bc565b6001600160a01b0316826001600160a01b03166380f556056040518163ffffffff1660e01b815260040160206040518083038186803b15801561052d57600080fd5b505afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906105bc565b6001600160a01b0316141561057f57506001949350505050565b506000949350505050565b50600092915050565b50919050565b6000602082840312156105aa578081fd5b81356105b5816106e9565b9392505050565b6000602082840312156105cd578081fd5b81516105b5816106e9565b6000602082840312156105e9578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106315783516001600160a01b03168352928401929184019160010161060c565b50909695505050505050565b6000602080835283518082850152825b818110156106695785810183015185820160400152820161064d565b8181111561067a5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156106af57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806106c857607f821691505b6020821081141561059357634e487b7160e01b600052602260045260246000fd5b6001600160a01b03811681146106fe57600080fd5b5056fea264697066735822122053d4ee6a7724b5ab237d58d1b8eba3213553e8e089f79fa3b7366e6d13d8843564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB59 CODESIZE SUB DUP1 PUSH3 0xB59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x56 SWAP2 PUSH3 0x2A4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0xE0 SWAP2 SWAP1 PUSH3 0x280 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x666163746F7279206F6E6C79 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP3 MLOAD PUSH3 0x164 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x1AB JUMP JUMPDEST POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH3 0x412 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1B9 SWAP1 PUSH3 0x3BF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1DD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x228 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1F8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x228 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x228 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x228 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH3 0x236 SWAP3 SWAP2 POP PUSH3 0x23A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x236 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x23B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x292 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x29D DUP3 PUSH3 0x251 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x2BC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x2C7 DUP7 PUSH3 0x251 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 PUSH3 0x2D8 DUP2 DUP9 ADD PUSH3 0x251 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2F5 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x309 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x31E JUMPI PUSH3 0x31E PUSH3 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x349 JUMPI PUSH3 0x349 PUSH3 0x3FC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP13 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x361 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x384 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x365 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x395 JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST DUP1 SWAP9 POP POP POP POP POP POP POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH3 0x3B3 PUSH1 0x80 DUP8 ADD PUSH3 0x26E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x737 DUP1 PUSH3 0x422 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80F55605 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x80F55605 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x8AAC9CCA EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xA89BC05B EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xC2B7BBB6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xFA6EAD20 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12713EE4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x233DE126 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x5A4CFC06 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x718C7D44 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xCE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xE9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D6 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206265742773206D61726B657420636F6E74726163742063616E2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x30B636103A3434B990333AB731BA34B7B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP3 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x18995D1C185A5C881A5B9D985B1A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x6B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x6B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE PUSH4 0xFFFFFFFF DUP2 AND ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x15E894AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x454 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x80F55605 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x80F55605 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x57F JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5B5 DUP2 PUSH2 0x6E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5B5 DUP2 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x631 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x60C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x669 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x64D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x67A JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x593 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xD4 0xEE PUSH11 0x7724B5AB237D58D1B8EBA3 0x21 CALLDATALOAD MSTORE8 0xE8 0xE0 DUP10 0xF7 SWAP16 LOG3 0xB7 CALLDATASIZE PUSH15 0x6D13D8843564736F6C634300080400 CALLER ",
							"sourceMap": "82:1921:13:-:0;;;436:7;;393:51;;;-1:-1:-1;;;;;;393:51:13;-1:-1:-1;;;;;436:7:13;;;393:51;;;;;;586:376;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;766:8;;;;;;;;;-1:-1:-1;;;;;766:8:13;-1:-1:-1;;;;;766:16:13;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;752:32:13;:10;-1:-1:-1;;;;;752:32:13;;744:57;;;;-1:-1:-1;;;744:57:13;;2242:2:19;744:57:13;;;2224:21:19;2281:2;2261:18;;;2254:30;-1:-1:-1;;;2300:18:19;;;2293:42;2352:18;;744:57:13;;;;;;;;811:6;:16;;-1:-1:-1;;;;;;811:16:13;-1:-1:-1;;;;;811:16:13;;;;;837:24;;;;:10;;:24;;;;;:::i;:::-;-1:-1:-1;871:5:13;:14;;;;895:4;:12;;-1:-1:-1;;895:12:13;;;;;;;;;;;-1:-1:-1;;;917:16:13;;-1:-1:-1;;;;;;917:16:13;-1:-1:-1;;;;;917:16:13;;;;;;;;;;-1:-1:-1;;943:11:13;82:1921;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;82:1921:13;;;-1:-1:-1;82:1921:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:19;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:160::-;273:13;;326:4;315:16;;305:27;;295:2;;346:1;343;336:12;361:218;431:6;484:2;472:9;463:7;459:23;455:32;452:2;;;505:6;497;490:22;452:2;533:40;563:9;533:40;:::i;:::-;523:50;442:137;-1:-1:-1;;;442:137:19:o;584:1451::-;698:6;706;714;722;730;783:3;771:9;762:7;758:23;754:33;751:2;;;805:6;797;790:22;751:2;833:40;863:9;833:40;:::i;:::-;823:50;;892:2;913:49;958:2;947:9;943:18;913:49;:::i;:::-;1006:2;991:18;;985:25;903:59;;-1:-1:-1;;;;;;1059:14:19;;;1056:2;;;1091:6;1083;1076:22;1056:2;1134:6;1123:9;1119:22;1109:32;;1179:7;1172:4;1168:2;1164:13;1160:27;1150:2;;1206:6;1198;1191:22;1150:2;1240;1234:9;1262:2;1258;1255:10;1252:2;;;1268:18;;:::i;:::-;1343:2;1337:9;1311:2;1397:13;;-1:-1:-1;;1393:22:19;;;1417:2;1389:31;1385:40;1373:53;;;1441:18;;;1461:22;;;1438:46;1435:2;;;1487:18;;:::i;:::-;1527:10;1523:2;1516:22;1562:2;1554:6;1547:18;1602:7;1597:2;1592;1588;1584:11;1580:20;1577:33;1574:2;;;1628:6;1620;1613:22;1574:2;1655:6;1646:15;;1670:129;1684:2;1681:1;1678:9;1670:129;;;1772:10;;;1768:19;;1762:26;1741:14;;;1737:23;;1730:59;1695:10;;;;1670:129;;;1817:2;1814:1;1811:9;1808:2;;;1876:6;1871:2;1866;1858:6;1854:15;1850:24;1843:40;1808:2;1912:6;1902:16;;;;;;;;1958:2;1947:9;1943:18;1937:25;1927:35;;1981:48;2024:3;2013:9;2009:19;1981:48;:::i;:::-;1971:58;;741:1294;;;;;;;;:::o;2381:380::-;2460:1;2456:12;;;;2503;;;2524:2;;2578:4;2570:6;2566:17;2556:27;;2524:2;2631;2623:6;2620:14;2600:18;2597:38;2594:2;;;2677:10;2672:3;2668:20;2665:1;2658:31;2712:4;2709:1;2702:15;2740:4;2737:1;2730:15;2594:2;;2436:325;;;:::o;2766:127::-;2827:10;2822:3;2818:20;2815:1;2808:31;2858:4;2855:1;2848:15;2882:4;2879:1;2872:15;2798:95;82:1921:13;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4296:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:19"
															},
															"nodeType": "YulIf",
															"src": "94:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:19",
														"type": ""
													}
												],
												"src": "14:257:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "357:180:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "403:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "412:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "420:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "405:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "405:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "405:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "378:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "387:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "374:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "399:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "370:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:32:19"
															},
															"nodeType": "YulIf",
															"src": "367:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "438:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "451:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "442:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "501:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "476:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "476:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "516:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "526:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "323:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "334:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "346:6:19",
														"type": ""
													}
												],
												"src": "276:261:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:120:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "658:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "667:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "675:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "660:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "660:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "660:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "633:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "629:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "625:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:32:19"
															},
															"nodeType": "YulIf",
															"src": "622:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "693:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "716:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "703:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "693:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "578:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "589:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "601:6:19",
														"type": ""
													}
												],
												"src": "542:190:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "848:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "860:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "871:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "856:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "848:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "905:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "921:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "926:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "917:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "917:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "930:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "883:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "883:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "807:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "818:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "829:4:19",
														"type": ""
													}
												],
												"src": "737:203:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:510:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1106:12:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1116:2:19",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1110:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1145:9:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1156:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:18:19"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1175:9:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1186:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1168:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1168:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1198:17:19",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1209:6:19"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1202:3:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1224:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1244:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1238:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1228:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1267:6:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1275:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1260:22:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1291:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1302:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1298:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:18:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1325:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1343:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1351:2:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1339:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:15:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1329:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1363:13:19",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1372:4:19"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1367:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1434:146:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1455:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1470:6:19"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1464:5:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1464:13:19"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1487:3:19",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1492:1:19",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1483:3:19"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1483:11:19"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1496:1:19",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1479:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1479:19:19"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1460:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1460:39:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1448:52:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1448:52:19"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1513:19:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:19"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1529:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1520:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1520:12:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1513:3:19"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1545:25:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1559:6:19"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1567:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1555:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1555:15:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1396:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1393:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1407:18:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1409:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1418:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1421:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1414:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1414:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1409:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1389:3:19",
																"statements": []
															},
															"src": "1385:195:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1589:11:19",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1597:3:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1589:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1065:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1087:4:19",
														"type": ""
													}
												],
												"src": "945:661:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1706:92:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1716:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1728:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1739:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1724:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1716:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1783:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1776:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1769:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1769:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1751:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1751:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1751:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1675:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1686:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1697:4:19",
														"type": ""
													}
												],
												"src": "1611:187:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1924:482:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1934:12:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1944:2:19",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1938:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1973:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1985:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2005:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1999:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1989:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2032:9:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2043:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2048:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2021:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2064:13:19",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "2073:4:19"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2068:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2136:90:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2165:9:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2176:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2161:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2161:17:19"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2180:2:19",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2157:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2157:26:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2199:6:19"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2207:1:19"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2195:3:19"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2195:14:19"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2211:2:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2191:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2191:23:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2185:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2185:30:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2150:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2150:66:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:66:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2097:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2100:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2094:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2108:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2110:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2119:1:19"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2122:2:19"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2115:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2115:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2110:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2090:3:19",
																"statements": []
															},
															"src": "2086:140:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2260:69:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2289:9:19"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2300:6:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2285:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2285:22:19"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2309:2:19",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2281:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2281:31:19"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "2314:4:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2274:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2274:45:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2274:45:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2241:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2244:6:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2238:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:13:19"
															},
															"nodeType": "YulIf",
															"src": "2235:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2338:62:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2354:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2373:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2381:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2369:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2369:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2390:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2386:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2386:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2365:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2365:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:45:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:54:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2338:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1893:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1904:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1915:4:19",
														"type": ""
													}
												],
												"src": "1803:603:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2585:165:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2602:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2595:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2636:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2647:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2632:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2632:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2652:2:19",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2625:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2625:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2686:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2691:17:19",
																		"type": "",
																		"value": "betpair invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2664:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2664:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2664:45:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2718:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2730:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2741:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2726:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2718:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_13cd67ae995bf0a8eb9ba6b8cd5decabe0baf260647b823e104f0def2566fe6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2562:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2576:4:19",
														"type": ""
													}
												],
												"src": "2411:339:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2929:239:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2946:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2957:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2939:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2939:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2980:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2991:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2976:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2996:2:19",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3019:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3035:34:19",
																		"type": "",
																		"value": "only bet's market contract can c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3008:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3008:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3008:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3090:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3101:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3086:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3086:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3106:19:19",
																		"type": "",
																		"value": "all this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3079:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3079:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3079:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3135:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3147:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3158:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3143:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3135:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5d1d281d702e182f75a5c938590d6c5fbdebeaa9cbb961ad9722b238c9e2e18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2906:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2920:4:19",
														"type": ""
													}
												],
												"src": "2755:413:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3274:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3284:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3296:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3307:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3284:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3337:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3319:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3243:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3254:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3265:4:19",
														"type": ""
													}
												],
												"src": "3173:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3452:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3462:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3474:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3485:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3470:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3470:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3462:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3504:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3519:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3527:4:19",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:17:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:36:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3421:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3432:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3443:4:19",
														"type": ""
													}
												],
												"src": "3355:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:181:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3627:115:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "3648:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3657:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3653:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3653:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3641:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3641:33:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3641:33:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3694:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:4:19",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3687:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3687:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3687:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "3722:3:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3727:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3715:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3715:17:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3715:17:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3608:1:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3615:1:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3611:6:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3605:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:13:19"
															},
															"nodeType": "YulIf",
															"src": "3602:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3751:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3762:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3765:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3758:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3758:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:19"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3575:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3578:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3584:3:19",
														"type": ""
													}
												],
												"src": "3544:229:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3833:325:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3843:22:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:19",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3860:4:19"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3853:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3853:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3843:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3874:38:19",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3904:4:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3910:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:12:19"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3878:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3951:31:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:19",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:19"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3931:18:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3924:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:26:19"
															},
															"nodeType": "YulIf",
															"src": "3921:2:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4041:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4062:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4069:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4074:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4065:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4065:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4055:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4055:31:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4055:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4109:4:19",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4099:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4099:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4099:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4134:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4137:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4127:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4127:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4127:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3997:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4020:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4017:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4017:14:19"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3994:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:38:19"
															},
															"nodeType": "YulIf",
															"src": "3991:2:19"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3813:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3822:6:19",
														"type": ""
													}
												],
												"src": "3778:380:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4208:86:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4272:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4281:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4274:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4274:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4274:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4231:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4242:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4257:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4262:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "4253:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4253:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4266:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4249:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4249:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4238:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4238:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4228:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4221:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:50:19"
															},
															"nodeType": "YulIf",
															"src": "4218:2:19"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4197:5:19",
														"type": ""
													}
												],
												"src": "4163:131:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_13cd67ae995bf0a8eb9ba6b8cd5decabe0baf260647b823e104f0def2566fe6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"betpair invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5d1d281d702e182f75a5c938590d6c5fbdebeaa9cbb961ad9722b238c9e2e18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"only bet's market contract can c\")\n        mstore(add(headStart, 96), \"all this function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806380f556051161006657806380f55605146101455780638aac9cca14610158578063a89bc05b14610161578063c2b7bbb614610174578063fa6ead201461018757600080fd5b806312713ee4146100a3578063233de126146100c15780633a4b66f1146100e05780635a4cfc06146100f7578063718c7d441461011a575b600080fd5b6100ab61019c565b6040516100b891906105f0565b60405180910390f35b6005546100ce9060ff1681565b60405160ff90911681526020016100b8565b6100e960035481565b6040519081526020016100b8565b61010a6101053660046105d8565b6101fe565b60405190151581526020016100b8565b60015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100b8565b60025461012d906001600160a01b031681565b6100e960045481565b61012d61016f3660046105d8565b610299565b61010a610182366004610599565b6102c3565b61018f610362565b6040516100b8919061063d565b606060068054806020026020016040519081016040528092919081815260200182805480156101f457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101d6575b5050505050905090565b6002546000906001600160a01b0316331461027a5760405162461bcd60e51b815260206004820152603160248201527f6f6e6c79206265742773206d61726b657420636f6e74726163742063616e206360448201527030b636103a3434b990333ab731ba34b7b760791b60648201526084015b60405180910390fd5b816004600082825461028c9190610690565b9091555060019392505050565b600681815481106102a957600080fd5b6000918252602090912001546001600160a01b0316905081565b60006102ce826103f0565b61030c5760405162461bcd60e51b815260206004820152600f60248201526e18995d1c185a5c881a5b9d985b1a59608a1b6044820152606401610271565b5060068054600180820183556000929092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b03939093169290921790915590565b6007805461036f906106b4565b80601f016020809104026020016040519081016040528092919081815260200182805461039b906106b4565b80156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b505050505081565b6000813b63ffffffff81161561058a5760008390506000816001600160a01b03166315e894ab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047891906105bc565b9050806001600160a01b03166380f556056040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b357600080fd5b505afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906105bc565b6001600160a01b0316826001600160a01b03166380f556056040518163ffffffff1660e01b815260040160206040518083038186803b15801561052d57600080fd5b505afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906105bc565b6001600160a01b0316141561057f57506001949350505050565b506000949350505050565b50600092915050565b50919050565b6000602082840312156105aa578081fd5b81356105b5816106e9565b9392505050565b6000602082840312156105cd578081fd5b81516105b5816106e9565b6000602082840312156105e9578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106315783516001600160a01b03168352928401929184019160010161060c565b50909695505050505050565b6000602080835283518082850152825b818110156106695785810183015185820160400152820161064d565b8181111561067a5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156106af57634e487b7160e01b81526011600452602481fd5b500190565b600181811c908216806106c857607f821691505b6020821081141561059357634e487b7160e01b600052602260045260246000fd5b6001600160a01b03811681146106fe57600080fd5b5056fea264697066735822122053d4ee6a7724b5ab237d58d1b8eba3213553e8e089f79fa3b7366e6d13d8843564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80F55605 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x80F55605 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x8AAC9CCA EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xA89BC05B EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xC2B7BBB6 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xFA6EAD20 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12713EE4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x233DE126 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x5A4CFC06 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x718C7D44 EQ PUSH2 0x11A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x19C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xCE SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xE9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x12D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xE9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12D PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x599 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0x18F PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D6 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79206265742773206D61726B657420636F6E74726163742063616E2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x30B636103A3434B990333AB731BA34B7B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x690 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE DUP3 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x18995D1C185A5C881A5B9D985B1A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x271 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x6B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x6B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE PUSH4 0xFFFFFFFF DUP2 AND ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x15E894AB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x454 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x80F55605 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x80F55605 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x541 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x57F JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5AA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5B5 DUP2 PUSH2 0x6E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5B5 DUP2 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x631 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x60C JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x669 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x64D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x67A JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x593 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xD4 0xEE PUSH11 0x7724B5AB237D58D1B8EBA3 0x21 CALLDATALOAD MSTORE8 0xE8 0xE0 DUP10 0xF7 SWAP16 LOG3 0xB7 CALLDATASIZE PUSH15 0x6D13D8843564736F6C634300080400 CALLER ",
							"sourceMap": "82:1921:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;968:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:26;;;;;;;;;;;;3527:4:19;3515:17;;;3497:36;;3485:2;3470:18;287:26:13;3452:87:19;213:29:13;;;;;;;;;3319:25:19;;;3307:2;3292:18;213:29:13;3274:76:19;1782:214:13;;;;;;:::i;:::-;;:::i;:::-;;;1776:14:19;;1769:22;1751:41;;1739:2;1724:18;1782:214:13;1706:92:19;139:30:13;;;;;-1:-1:-1;;;;;139:30:13;;;;;;-1:-1:-1;;;;;901:32:19;;;883:51;;871:2;856:18;139:30:13;838:102:19;176:30:13;;;;;-1:-1:-1;;;;;176:30:13;;;249:31;;;;;;320:25;;;;;;:::i;:::-;;:::i;1574:202::-;;;;;;:::i;:::-;;:::i;352:34::-;;;:::i;:::-;;;;;;;:::i;968:104::-;1023:16;1057:8;1050:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:15:13;;;;;;;;;;;;;;;;;;;;;;;968:104;:::o;1782:214::-;1880:6;;1842:4;;-1:-1:-1;;;;;1880:6:13;1866:10;:20;1858:82;;;;-1:-1:-1;;;1858:82:13;;2957:2:19;1858:82:13;;;2939:21:19;2996:2;2976:18;;;2969:30;3035:34;3015:18;;;3008:62;-1:-1:-1;;;3086:18:19;;;3079:47;3143:19;;1858:82:13;;;;;;;;;1961:7;1950;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;1985:4:13;;1782:214;-1:-1:-1;;;1782:214:13:o;320:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;320:25:13;;-1:-1:-1;320:25:13;:::o;1574:202::-;1639:4;1663:28;1678:12;1663:14;:28::i;:::-;1655:56;;;;-1:-1:-1;;;1655:56:13;;2613:2:19;1655:56:13;;;2595:21:19;2652:2;2632:18;;;2625:30;-1:-1:-1;;;2671:18:19;;;2664:45;2726:18;;1655:56:13;2585:165:19;1655:56:13;-1:-1:-1;1721:8:13;:27;;;;;;;;-1:-1:-1;1721:27:13;;;;;;;;-1:-1:-1;;;;;;1721:27:13;-1:-1:-1;;;;;1721:27:13;;;;;;;;;;;;1574:202::o;352:34::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1078:490::-;1139:4;1206:18;;1246:8;;;;1243:319;;1269:13;1294:5;1269:31;;1314:9;1331:4;-1:-1:-1;;;;;1331:13:13;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1314:33;;1381:4;-1:-1:-1;;;;;1381:11:13;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1364:30:13;:4;-1:-1:-1;;;;;1364:11:13;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1364:30:13;;1361:140;;;-1:-1:-1;1420:4:13;;1078:490;-1:-1:-1;;;;1078:490:13:o;1361:140::-;-1:-1:-1;1481:5:13;;1078:490;-1:-1:-1;;;;1078:490:13:o;1243:319::-;-1:-1:-1;1546:5:13;;1078:490;-1:-1:-1;;1078:490:13:o;1243:319::-;1078:490;;;;:::o;14:257:19:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:19:o;276:261::-;346:6;399:2;387:9;378:7;374:23;370:32;367:2;;;420:6;412;405:22;367:2;457:9;451:16;476:31;501:5;476:31;:::i;542:190::-;601:6;654:2;642:9;633:7;629:23;625:32;622:2;;;675:6;667;660:22;622:2;-1:-1:-1;703:23:19;;612:120;-1:-1:-1;612:120:19:o;945:661::-;1116:2;1168:21;;;1238:13;;1141:18;;;1260:22;;;1087:4;;1116:2;1339:15;;;;1313:2;1298:18;;;1087:4;1385:195;1399:6;1396:1;1393:13;1385:195;;;1464:13;;-1:-1:-1;;;;;1460:39:19;1448:52;;1555:15;;;;1520:12;;;;1496:1;1414:9;1385:195;;;-1:-1:-1;1597:3:19;;1096:510;-1:-1:-1;;;;;;1096:510:19:o;1803:603::-;1915:4;1944:2;1973;1962:9;1955:21;2005:6;1999:13;2048:6;2043:2;2032:9;2028:18;2021:34;2073:4;2086:140;2100:6;2097:1;2094:13;2086:140;;;2195:14;;;2191:23;;2185:30;2161:17;;;2180:2;2157:26;2150:66;2115:10;;2086:140;;;2244:6;2241:1;2238:13;2235:2;;;2314:4;2309:2;2300:6;2289:9;2285:22;2281:31;2274:45;2235:2;-1:-1:-1;2390:2:19;2369:15;-1:-1:-1;;2365:29:19;2350:45;;;;2397:2;2346:54;;1924:482;-1:-1:-1;;;1924:482:19:o;3544:229::-;3584:3;3615:1;3611:6;3608:1;3605:13;3602:2;;;-1:-1:-1;;;3641:33:19;;3697:4;3694:1;3687:15;3727:4;3648:3;3715:17;3602:2;-1:-1:-1;3758:9:19;;3592:181::o;3778:380::-;3857:1;3853:12;;;;3900;;;3921:2;;3975:4;3967:6;3963:17;3953:27;;3921:2;4028;4020:6;4017:14;3997:18;3994:38;3991:2;;;4074:10;4069:3;4065:20;4062:1;4055:31;4109:4;4106:1;4099:15;4137:4;4134:1;4127:15;4163:131;-1:-1:-1;;;;;4238:31:19;;4228:42;;4218:2;;4284:1;4281;4274:12;4218:2;4208:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "369400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addPair(address)": "infinite",
								"betPairs(uint256)": "2058",
								"better()": "1126",
								"getBetPairs()": "infinite",
								"market()": "1037",
								"marketSide()": "infinite",
								"matched()": "1017",
								"odds()": "1036",
								"setMatched(uint256)": "22105",
								"stake()": "1040"
							},
							"internal": {
								"isValidBetPair(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 436,
									"end": 443,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 436,
									"end": 443,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 393,
									"end": 444,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 393,
									"end": 444,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 436,
									"end": 443,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 436,
									"end": 443,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 436,
									"end": 443,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 393,
									"end": 444,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 586,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 586,
									"end": 962,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 766,
									"end": 774,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 766,
									"end": 774,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 766,
									"end": 774,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 774,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 774,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 774,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 766,
									"end": 774,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 774,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 774,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 766,
									"end": 774,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 766,
									"end": 782,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 766,
									"end": 782,
									"name": "PUSH",
									"source": 13,
									"value": "C45A0155"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFF"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "EXTCODESIZE",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "tag",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "GAS",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "STATICCALL",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "RETURNDATACOPY",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "RETURNDATASIZE",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 766,
									"end": 784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 766,
									"end": 784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 752,
									"end": 784,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 752,
									"end": 762,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 752,
									"end": 784,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 752,
									"end": 784,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 744,
									"end": 801,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2242,
									"end": 2244,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2224,
									"end": 2245,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2281,
									"end": 2283,
									"name": "PUSH",
									"source": 19,
									"value": "C"
								},
								{
									"begin": 2261,
									"end": 2279,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2261,
									"end": 2279,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2261,
									"end": 2279,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2254,
									"end": 2284,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "666163746F7279206F6E6C79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2300,
									"end": 2318,
									"name": "PUSH",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 2300,
									"end": 2318,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2300,
									"end": 2318,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2293,
									"end": 2335,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2352,
									"end": 2370,
									"name": "PUSH",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 2352,
									"end": 2370,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 744,
									"end": 801,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 811,
									"end": 817,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 811,
									"end": 827,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 811,
									"end": 827,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 811,
									"end": 827,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 811,
									"end": 827,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 811,
									"end": 827,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 811,
									"end": 827,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 811,
									"end": 827,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 811,
									"end": 827,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 837,
									"end": 847,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 837,
									"end": 847,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 837,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 871,
									"end": 876,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 871,
									"end": 885,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 871,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 871,
									"end": 885,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 871,
									"end": 885,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 895,
									"end": 899,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 907,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 895,
									"end": 907,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 895,
									"end": 907,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 917,
									"end": 933,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 917,
									"end": 933,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 917,
									"end": 933,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4"
								},
								{
									"begin": 943,
									"end": 954,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 356,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 196,
									"end": 356,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 273,
									"end": 286,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 273,
									"end": 286,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 19,
									"value": "FF"
								},
								{
									"begin": 315,
									"end": 331,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 315,
									"end": 331,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 305,
									"end": 332,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 305,
									"end": 332,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 295,
									"end": 297,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 295,
									"end": 297,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 346,
									"end": 347,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 336,
									"end": 348,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 361,
									"end": 579,
									"name": "tag",
									"source": 19,
									"value": "10"
								},
								{
									"begin": 361,
									"end": 579,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 431,
									"end": 437,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 486,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 472,
									"end": 481,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 463,
									"end": 470,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 459,
									"end": 482,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 455,
									"end": 487,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 452,
									"end": 454,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 452,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 452,
									"end": 454,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 505,
									"end": 511,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 497,
									"end": 503,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 490,
									"end": 512,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 452,
									"end": 454,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 452,
									"end": 454,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 533,
									"end": 573,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 563,
									"end": 572,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 533,
									"end": 573,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 533,
									"end": 573,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 533,
									"end": 573,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 533,
									"end": 573,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 523,
									"end": 573,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 442,
									"end": 579,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 442,
									"end": 579,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 584,
									"end": 2035,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 584,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 698,
									"end": 704,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 706,
									"end": 712,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 714,
									"end": 720,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 728,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 730,
									"end": 736,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 783,
									"end": 786,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 771,
									"end": 780,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 762,
									"end": 769,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 758,
									"end": 781,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 754,
									"end": 787,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 751,
									"end": 753,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 751,
									"end": 753,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 805,
									"end": 811,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 797,
									"end": 803,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 790,
									"end": 812,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 751,
									"end": 753,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 751,
									"end": 753,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 833,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 863,
									"end": 872,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 833,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 833,
									"end": 873,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 833,
									"end": 873,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 873,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 823,
									"end": 873,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 823,
									"end": 873,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 892,
									"end": 894,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 913,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 958,
									"end": 960,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 947,
									"end": 956,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 943,
									"end": 961,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 913,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 913,
									"end": 962,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 913,
									"end": 962,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 913,
									"end": 962,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1006,
									"end": 1008,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 991,
									"end": 1009,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 991,
									"end": 1009,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 985,
									"end": 1010,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 903,
									"end": 962,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 903,
									"end": 962,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1059,
									"end": 1073,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 1073,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1059,
									"end": 1073,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1091,
									"end": 1097,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1083,
									"end": 1089,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1076,
									"end": 1098,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1123,
									"end": 1132,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 1119,
									"end": 1141,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1109,
									"end": 1141,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1109,
									"end": 1141,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "DUP10",
									"source": 19
								},
								{
									"begin": 1172,
									"end": 1176,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1168,
									"end": 1170,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1164,
									"end": 1177,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1160,
									"end": 1187,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1206,
									"end": 1212,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1198,
									"end": 1204,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1191,
									"end": 1213,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1240,
									"end": 1242,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1234,
									"end": 1243,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1258,
									"end": 1260,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1255,
									"end": 1265,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1252,
									"end": 1254,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1252,
									"end": 1254,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 1252,
									"end": 1254,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1268,
									"end": 1286,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 1268,
									"end": 1286,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1268,
									"end": 1286,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1268,
									"end": 1286,
									"name": "tag",
									"source": 19,
									"value": "45"
								},
								{
									"begin": 1268,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1343,
									"end": 1345,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1337,
									"end": 1346,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1311,
									"end": 1313,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1397,
									"end": 1410,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1397,
									"end": 1410,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1393,
									"end": 1415,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1393,
									"end": 1415,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1393,
									"end": 1415,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1417,
									"end": 1419,
									"name": "PUSH",
									"source": 19,
									"value": "3F"
								},
								{
									"begin": 1389,
									"end": 1420,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1385,
									"end": 1425,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1373,
									"end": 1426,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1373,
									"end": 1426,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1373,
									"end": 1426,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1441,
									"end": 1459,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1441,
									"end": 1459,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1441,
									"end": 1459,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1461,
									"end": 1483,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1461,
									"end": 1483,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1461,
									"end": 1483,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1438,
									"end": 1484,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 1435,
									"end": 1437,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1435,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1435,
									"end": 1437,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1527,
									"end": 1537,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1523,
									"end": 1525,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1516,
									"end": 1538,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1560,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1547,
									"end": 1565,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1602,
									"end": 1609,
									"name": "DUP13",
									"source": 19
								},
								{
									"begin": 1597,
									"end": 1599,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1592,
									"end": 1594,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1588,
									"end": 1590,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 1584,
									"end": 1595,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1580,
									"end": 1600,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1577,
									"end": 1610,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1576,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 1574,
									"end": 1576,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1620,
									"end": 1626,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1574,
									"end": 1576,
									"name": "tag",
									"source": 19,
									"value": "49"
								},
								{
									"begin": 1574,
									"end": 1576,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1655,
									"end": 1661,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1646,
									"end": 1661,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1646,
									"end": 1661,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1681,
									"end": 1682,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1678,
									"end": 1687,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1772,
									"end": 1782,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1772,
									"end": 1782,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1772,
									"end": 1782,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1768,
									"end": 1787,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1768,
									"end": 1787,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1762,
									"end": 1788,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1741,
									"end": 1755,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1741,
									"end": 1755,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1741,
									"end": 1755,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1737,
									"end": 1760,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 1737,
									"end": 1760,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1730,
									"end": 1789,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1695,
									"end": 1705,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1695,
									"end": 1705,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1695,
									"end": 1705,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1695,
									"end": 1705,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "tag",
									"source": 19,
									"value": "52"
								},
								{
									"begin": 1670,
									"end": 1799,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1817,
									"end": 1819,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1814,
									"end": 1815,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1811,
									"end": 1820,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1871,
									"end": 1873,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1866,
									"end": 1868,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1858,
									"end": 1864,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1854,
									"end": 1869,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1850,
									"end": 1874,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1843,
									"end": 1883,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1912,
									"end": 1918,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "SWAP9",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1902,
									"end": 1918,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1958,
									"end": 1960,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 1947,
									"end": 1956,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1943,
									"end": 1961,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1937,
									"end": 1962,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1927,
									"end": 1962,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1927,
									"end": 1962,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1981,
									"end": 2029,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 2024,
									"end": 2027,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 2013,
									"end": 2022,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 2009,
									"end": 2028,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1981,
									"end": 2029,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 1981,
									"end": 2029,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1981,
									"end": 2029,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 1981,
									"end": 2029,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1971,
									"end": 2029,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1971,
									"end": 2029,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 741,
									"end": 2035,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 2381,
									"end": 2761,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 2381,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 2456,
									"end": 2468,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2456,
									"end": 2468,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2456,
									"end": 2468,
									"name": "SHR",
									"source": 19
								},
								{
									"begin": 2456,
									"end": 2468,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2503,
									"end": 2515,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2503,
									"end": 2515,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2503,
									"end": 2515,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2524,
									"end": 2526,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 2524,
									"end": 2526,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2578,
									"end": 2582,
									"name": "PUSH",
									"source": 19,
									"value": "7F"
								},
								{
									"begin": 2570,
									"end": 2576,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2566,
									"end": 2583,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2556,
									"end": 2583,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2556,
									"end": 2583,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2524,
									"end": 2526,
									"name": "tag",
									"source": 19,
									"value": "57"
								},
								{
									"begin": 2524,
									"end": 2526,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2631,
									"end": 2633,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2623,
									"end": 2629,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2620,
									"end": 2634,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2597,
									"end": 2635,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 2677,
									"end": 2687,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B71"
								},
								{
									"begin": 2672,
									"end": 2675,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 2668,
									"end": 2688,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2665,
									"end": 2666,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2658,
									"end": 2689,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2712,
									"end": 2716,
									"name": "PUSH",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 2702,
									"end": 2717,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2740,
									"end": 2744,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2737,
									"end": 2738,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2730,
									"end": 2745,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "tag",
									"source": 19,
									"value": "58"
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2594,
									"end": 2596,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2436,
									"end": 2761,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2436,
									"end": 2761,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2436,
									"end": 2761,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 2436,
									"end": 2761,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 2766,
									"end": 2893,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 2766,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2827,
									"end": 2837,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B71"
								},
								{
									"begin": 2822,
									"end": 2825,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 2818,
									"end": 2838,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 2815,
									"end": 2816,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2808,
									"end": 2839,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2858,
									"end": 2862,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 2855,
									"end": 2856,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 2848,
									"end": 2863,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2882,
									"end": 2886,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2879,
									"end": 2880,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2887,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 2798,
									"end": 2893,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 2798,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 82,
									"end": 2003,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053d4ee6a7724b5ab237d58d1b8eba3213553e8e089f79fa3b7366e6d13d8843564736f6c63430008040033",
									".code": [
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "80F55605"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "80F55605"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "8AAC9CCA"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "A89BC05B"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "C2B7BBB6"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "FA6EAD20"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "12713EE4"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "233DE126"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "3A4B66F1"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "5A4CFC06"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "718C7D44"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 2003,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 313,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 287,
											"end": 313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 313,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 287,
											"end": 313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 287,
											"end": 313,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 313,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3527,
											"end": 3531,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3497,
											"end": 3533,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3497,
											"end": 3533,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 287,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 3452,
											"end": 3539,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 213,
											"end": 242,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 213,
											"end": 242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 213,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 213,
											"end": 242,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 213,
											"end": 242,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 213,
											"end": 242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 213,
											"end": 242,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 213,
											"end": 242,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 213,
											"end": 242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 213,
											"end": 242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 213,
											"end": 242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3344,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3319,
											"end": 3344,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3319,
											"end": 3344,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3310,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 213,
											"end": 242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 3274,
											"end": 3350,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1790,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1776,
											"end": 1790,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1791,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1751,
											"end": 1792,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1751,
											"end": 1792,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 1741,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1706,
											"end": 1798,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 139,
											"end": 169,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 139,
											"end": 169,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 169,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 139,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 139,
											"end": 169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 139,
											"end": 169,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 139,
											"end": 169,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 169,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 169,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 139,
											"end": 169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 139,
											"end": 169,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 169,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 901,
											"end": 933,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 901,
											"end": 933,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 901,
											"end": 933,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 871,
											"end": 873,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 856,
											"end": 874,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 139,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 838,
											"end": 940,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 176,
											"end": 206,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 176,
											"end": 206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 206,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 206,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 176,
											"end": 206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 176,
											"end": 206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 176,
											"end": 206,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 176,
											"end": 206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 176,
											"end": 206,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 249,
											"end": 280,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 280,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 249,
											"end": 280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 249,
											"end": 280,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1023,
											"end": 1039,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1057,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1072,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1886,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2959,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2960,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2969,
											"end": 2999,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3035,
											"end": 3069,
											"name": "PUSH",
											"source": 19,
											"value": "6F6E6C79206265742773206D61726B657420636F6E74726163742063616E2063"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3015,
											"end": 3033,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3008,
											"end": 3070,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B636103A3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3086,
											"end": 3104,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3079,
											"end": 3126,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 3143,
											"end": 3162,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1858,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1968,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1996,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 320,
											"end": 345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 320,
											"end": 345,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 320,
											"end": 345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 320,
											"end": 345,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1639,
											"end": 1643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1663,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1663,
											"end": 1691,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1663,
											"end": 1691,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1663,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2616,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2652,
											"end": 2654,
											"name": "PUSH",
											"source": 19,
											"value": "F"
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2625,
											"end": 2655,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18995D1C185A5C881A5B9D985B1A59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2664,
											"end": 2709,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 2726,
											"end": 2744,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2585,
											"end": 2750,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1655,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1729,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "PUSH",
											"source": 13,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1574,
											"end": 1776,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 352,
											"end": 386,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1139,
											"end": 1143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1562,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1299,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1314,
											"end": 1323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1344,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1344,
											"name": "PUSH",
											"source": 13,
											"value": "15E894AB"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1331,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1314,
											"end": 1347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1314,
											"end": 1347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1381,
											"end": 1392,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1392,
											"name": "PUSH",
											"source": 13,
											"value": "80F55605"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1375,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1375,
											"name": "PUSH",
											"source": 13,
											"value": "80F55605"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1364,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1394,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1501,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1361,
											"end": 1501,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1361,
											"end": 1501,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1361,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1243,
											"end": 1562,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1243,
											"end": 1562,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1243,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 84,
											"end": 271,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 271,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 537,
											"name": "tag",
											"source": 19,
											"value": "85"
										},
										{
											"begin": 276,
											"end": 537,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 346,
											"end": 352,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 401,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 396,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 378,
											"end": 385,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 374,
											"end": 397,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 370,
											"end": 402,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 367,
											"end": 369,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 367,
											"end": 369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 412,
											"end": 418,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 405,
											"end": 427,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 367,
											"end": 369,
											"name": "tag",
											"source": 19,
											"value": "103"
										},
										{
											"begin": 367,
											"end": 369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 457,
											"end": 466,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 451,
											"end": 467,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 476,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 501,
											"end": 506,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 476,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 476,
											"end": 507,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 732,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 542,
											"end": 732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 601,
											"end": 607,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 633,
											"end": 640,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 629,
											"end": 652,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 625,
											"end": 657,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 622,
											"end": 624,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 622,
											"end": 624,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 675,
											"end": 681,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 667,
											"end": 673,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 660,
											"end": 682,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 622,
											"end": 624,
											"name": "tag",
											"source": 19,
											"value": "106"
										},
										{
											"begin": 622,
											"end": 624,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 703,
											"end": 726,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 703,
											"end": 726,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 612,
											"end": 732,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 612,
											"end": 732,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1606,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 945,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1189,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1168,
											"end": 1189,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1168,
											"end": 1189,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1238,
											"end": 1251,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1238,
											"end": 1251,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1339,
											"end": 1354,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1298,
											"end": 1316,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "tag",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1393,
											"end": 1406,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1460,
											"end": 1499,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1532,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "tag",
											"source": 19,
											"value": "111"
										},
										{
											"begin": 1385,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1597,
											"end": 1600,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1597,
											"end": 1600,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 1096,
											"end": 1606,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1096,
											"end": 1606,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1803,
											"end": 2406,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1803,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 1919,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2005,
											"end": 2011,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1999,
											"end": 2012,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2021,
											"end": 2055,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2073,
											"end": 2077,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "tag",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2094,
											"end": 2107,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2195,
											"end": 2209,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2191,
											"end": 2214,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2185,
											"end": 2215,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2178,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2178,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2180,
											"end": 2182,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2157,
											"end": 2183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2150,
											"end": 2216,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2115,
											"end": 2125,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2115,
											"end": 2125,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "114"
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 2086,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2244,
											"end": 2250,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2238,
											"end": 2251,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2314,
											"end": 2318,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2289,
											"end": 2298,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2285,
											"end": 2307,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2281,
											"end": 2312,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2274,
											"end": 2319,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 2235,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2369,
											"end": 2384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2394,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2350,
											"end": 2395,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2350,
											"end": 2395,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2350,
											"end": 2395,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2350,
											"end": 2395,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2397,
											"end": 2399,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2346,
											"end": 2400,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2346,
											"end": 2400,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1924,
											"end": 2406,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1924,
											"end": 2406,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 3544,
											"end": 3773,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 3544,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3605,
											"end": 3618,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3674,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3641,
											"end": 3674,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3697,
											"end": 3701,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 3687,
											"end": 3702,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3727,
											"end": 3731,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 3648,
											"end": 3651,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3715,
											"end": 3732,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "tag",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3592,
											"end": 3773,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 3778,
											"end": 4158,
											"name": "tag",
											"source": 19,
											"value": "74"
										},
										{
											"begin": 3778,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 3853,
											"end": 3865,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3900,
											"end": 3912,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3900,
											"end": 3912,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3900,
											"end": 3912,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 19,
											"value": "7F"
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3963,
											"end": 3980,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "tag",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4017,
											"end": 4031,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 3997,
											"end": 4015,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3994,
											"end": 4032,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "96"
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4074,
											"end": 4084,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 4069,
											"end": 4072,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 4065,
											"end": 4085,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4086,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4114,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4137,
											"end": 4141,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4294,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 4163,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4269,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4238,
											"end": 4269,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4228,
											"end": 4270,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4228,
											"end": 4270,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4284,
											"end": 4285,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4282,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4274,
											"end": 4286,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4208,
											"end": 4294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4208,
											"end": 4294,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addPair(address)": "c2b7bbb6",
							"betPairs(uint256)": "a89bc05b",
							"better()": "718c7d44",
							"getBetPairs()": "12713ee4",
							"market()": "80f55605",
							"marketSide()": "fa6ead20",
							"matched()": "8aac9cca",
							"odds()": "233de126",
							"setMatched(uint256)": "5a4cfc06",
							"stake()": "3a4b66f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"market_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"marketSide_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stake_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"odds_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairAddress\",\"type\":\"address\"}],\"name\":\"addPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"betPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"better\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBetPairs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketSide\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"odds\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMatched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bet.sol\":\"Bet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/Bet.sol\":{\"keccak256\":\"0x1c8cb2c21b9b1027d901d71bd8813e0acffb484684c3c69321f7a465d669ae2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89120b692ba876e36e6718535dfdb12c38c97b79b2cadaab01382ce0218849c6\",\"dweb:/ipfs/QmVEQDWaVrTqHY1SX3H1FuyKXby3XBFFvMvhHT77ejtmDt\"]},\"contracts/BetPair.sol\":{\"keccak256\":\"0x54dfa9d00775642c74f4f2eacdb000c3d890f2962c81d965ef69cc3a58a4c244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eefed976669edcd9dcecc1d05d65825d59b2f6a1a5f97f0cabef66cab5c87c88\",\"dweb:/ipfs/QmRoMT9qq4qCu4WsrLSeHV4uCUyQQDpsZ7BM73FSyK6ZF7\"]},\"contracts/Web3BetsFO.sol\":{\"keccak256\":\"0xdf2d8da635a027c032b422ba2cd5a559095f44036c1e47274bbf403f717eddf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f744a1ba974f719f895440266918ecb2abbab274685001b42fb1ca21f8e200f\",\"dweb:/ipfs/QmdngciFYmb7tpFeV65AeNLZnBrrYAM3ejczK5xrBghNkD\"]},\"contracts/interface/IBet.sol\":{\"keccak256\":\"0x2c21a42a1340fcdfd25037d486a4f920c20ee8de203d0c28db92e3ef186c0571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://585969eb05acee4faa42bab41c115cc2834156f36396dd0d7c752df7d2b600d4\",\"dweb:/ipfs/QmZ68XgPkX1ecCKTCZxgtvH4YrLR7E27msfAedZ99St4bU\"]},\"contracts/interface/IBetPair.sol\":{\"keccak256\":\"0x856f35ffffe237c22cc04dea0c0909346fa7cea1318a195488af92aaa851083c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8d1fcf33e25e655338a10463ce4f10f4233b13fafc48513df387ef20c947326\",\"dweb:/ipfs/QmVxGA64KtQuyz2AqLpEa9PjfvspJLT6JUjor35YQobicJ\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0x7416e4a04af3bdfdad54246180d322fc4aa12a73fd183576faa06cce3efd66b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ed3fb186515a6546f1f016adc61be2874dbc1964531bf66e9469ef80209414\",\"dweb:/ipfs/QmQspA6qDCZoct316imYrdJvDrdVhmbQ5yLpgrE3LNFWXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2122,
								"contract": "contracts/Bet.sol:Bet",
								"label": "w3bAddr",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2125,
								"contract": "contracts/Bet.sol:Bet",
								"label": "better",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2128,
								"contract": "contracts/Bet.sol:Bet",
								"label": "market",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2131,
								"contract": "contracts/Bet.sol:Bet",
								"label": "stake",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2134,
								"contract": "contracts/Bet.sol:Bet",
								"label": "matched",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2137,
								"contract": "contracts/Bet.sol:Bet",
								"label": "odds",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 2140,
								"contract": "contracts/Bet.sol:Bet",
								"label": "betPairs",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 2143,
								"contract": "contracts/Bet.sol:Bet",
								"label": "marketSide",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 2149,
								"contract": "contracts/Bet.sol:Bet",
								"label": "web3bets",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IWeb3BetsFO)2918"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IWeb3BetsFO)2918": {
								"encoding": "inplace",
								"label": "contract IWeb3BetsFO",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BetPair.sol": {
				"BetPair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "market_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sideABet_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sideBBet_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountA_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "amountA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "market",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "setWinnerBet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideABet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideBBet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerBet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BetPair.sol\":152:1311  contract BetPair is IBetPair {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BetPair.sol\":542:557  web3betsAddress */\n  sload(0x00)\n    /* \"contracts/BetPair.sol\":499:558  IWeb3BetsFO private web3bets = IWeb3BetsFO(web3betsAddress) */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BetPair.sol\":542:557  web3betsAddress */\n  swap1\n  swap3\n  and\n    /* \"contracts/BetPair.sol\":499:558  IWeb3BetsFO private web3bets = IWeb3BetsFO(web3betsAddress) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/BetPair.sol\":565:978  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BetPair.sol\":741:749  web3bets */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BetPair.sol\":741:757  web3bets.factory */\n  and\n  0xc45a0155\n    /* \"contracts/BetPair.sol\":741:759  web3bets.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BetPair.sol\":727:759  msg.sender == web3bets.factory() */\n  and\n    /* \"contracts/BetPair.sol\":727:737  msg.sender */\n  caller\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/BetPair.sol\":727:759  msg.sender == web3bets.factory() */\n  and\n  eq\n    /* \"contracts/BetPair.sol\":719:829  require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1138:1140   */\n  0x20\n    /* \"contracts/BetPair.sol\":719:829  require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1120:1141   */\n  mstore\n    /* \"#utility.yul\":1177:1179   */\n  0x41\n    /* \"#utility.yul\":1157:1175   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1150:1180   */\n  mstore\n    /* \"#utility.yul\":1216:1250   */\n  0x6f6e6c792077656233626574732066697865646f64647320666163746f727920\n    /* \"#utility.yul\":1196:1214   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1189:1251   */\n  mstore\n    /* \"#utility.yul\":1287:1321   */\n  0x636f6e74726163742063616e20637265617465207468697320636f6e74726163\n    /* \"#utility.yul\":1267:1285   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1260:1322   */\n  mstore\n  shl(0xfa, 0x1d)\n    /* \"#utility.yul\":1338:1357   */\n  0x84\n  dup3\n  add\n    /* \"#utility.yul\":1331:1363   */\n  mstore\n    /* \"#utility.yul\":1380:1399   */\n  0xa4\n  add\n    /* \"contracts/BetPair.sol\":719:829  require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/BetPair.sol\":839:845  market */\n  0x01\n    /* \"contracts/BetPair.sol\":839:855  market = market_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap8\n  dup9\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/BetPair.sol\":865:873  sideABet */\n  0x02\n    /* \"contracts/BetPair.sol\":865:885  sideABet = sideABet_ */\n  dup1\n  sload\n  dup3\n  and\n  swap6\n  dup8\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/BetPair.sol\":895:903  sideBBet */\n  0x03\n    /* \"contracts/BetPair.sol\":895:915  sideBBet = sideBBet_ */\n  dup1\n  sload\n  swap1\n  swap5\n  and\n  swap3\n  swap1\n  swap5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/BetPair.sol\":925:932  amountA */\n  0x06\n    /* \"contracts/BetPair.sol\":925:943  amountA = amountA_ */\n  sstore\n    /* \"contracts/BetPair.sol\":953:960  amountB */\n  0x07\n    /* \"contracts/BetPair.sol\":953:971  amountB = amountB_ */\n  sstore\n    /* \"contracts/BetPair.sol\":152:1311  contract BetPair is IBetPair {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:191   */\ntag_16:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_18:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:414   */\ntag_10:\n    /* \"#utility.yul\":266:272   */\n  0x00\n    /* \"#utility.yul\":319:321   */\n  0x20\n    /* \"#utility.yul\":307:316   */\n  dup3\n    /* \"#utility.yul\":298:305   */\n  dup5\n    /* \"#utility.yul\":294:317   */\n  sub\n    /* \"#utility.yul\":290:322   */\n  slt\n    /* \"#utility.yul\":287:289   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":340:346   */\n  dup1\n    /* \"#utility.yul\":332:338   */\n  dup2\n    /* \"#utility.yul\":325:347   */\n  revert\n    /* \"#utility.yul\":287:289   */\ntag_20:\n    /* \"#utility.yul\":368:408   */\n  tag_21\n    /* \"#utility.yul\":398:407   */\n  dup3\n    /* \"#utility.yul\":368:408   */\n  tag_16\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":358:408   */\n  swap4\n    /* \"#utility.yul\":277:414   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":419:931   */\ntag_3:\n    /* \"#utility.yul\":525:531   */\n  0x00\n    /* \"#utility.yul\":533:539   */\n  dup1\n    /* \"#utility.yul\":541:547   */\n  0x00\n    /* \"#utility.yul\":549:555   */\n  dup1\n    /* \"#utility.yul\":557:563   */\n  0x00\n    /* \"#utility.yul\":610:613   */\n  0xa0\n    /* \"#utility.yul\":598:607   */\n  dup7\n    /* \"#utility.yul\":589:596   */\n  dup9\n    /* \"#utility.yul\":585:608   */\n  sub\n    /* \"#utility.yul\":581:614   */\n  slt\n    /* \"#utility.yul\":578:580   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":632:638   */\n  dup1\n    /* \"#utility.yul\":624:630   */\n  dup2\n    /* \"#utility.yul\":617:639   */\n  revert\n    /* \"#utility.yul\":578:580   */\ntag_23:\n    /* \"#utility.yul\":660:700   */\n  tag_24\n    /* \"#utility.yul\":690:699   */\n  dup7\n    /* \"#utility.yul\":660:700   */\n  tag_16\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":650:700   */\n  swap5\n  pop\n    /* \"#utility.yul\":719:768   */\n  tag_25\n    /* \"#utility.yul\":764:766   */\n  0x20\n    /* \"#utility.yul\":753:762   */\n  dup8\n    /* \"#utility.yul\":749:767   */\n  add\n    /* \"#utility.yul\":719:768   */\n  tag_16\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":709:768   */\n  swap4\n  pop\n    /* \"#utility.yul\":787:836   */\n  tag_26\n    /* \"#utility.yul\":832:834   */\n  0x40\n    /* \"#utility.yul\":821:830   */\n  dup8\n    /* \"#utility.yul\":817:835   */\n  add\n    /* \"#utility.yul\":787:836   */\n  tag_16\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":876:878   */\n  0x60\n    /* \"#utility.yul\":861:879   */\n  dup8\n  add\n    /* \"#utility.yul\":855:880   */\n  mload\n    /* \"#utility.yul\":920:923   */\n  0x80\n    /* \"#utility.yul\":905:924   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":899:925   */\n  mload\n    /* \"#utility.yul\":568:931   */\n  swap6\n  swap9\n  swap5\n  swap8\n  pop\n    /* \"#utility.yul\":777:836   */\n  swap6\n    /* \"#utility.yul\":855:880   */\n  swap5\n    /* \"#utility.yul\":899:925   */\n  swap4\n    /* \"#utility.yul\":568:931   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1110:1405   */\ntag_15:\n    /* \"contracts/BetPair.sol\":152:1311  contract BetPair is IBetPair {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BetPair.sol\":152:1311  contract BetPair is IBetPair {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d83a71f\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x6d83a71f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x80f55605\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbaa1a3ec\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xed7a4e0b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x0f765e6d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x156dcbf0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15e894ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2efe91ef\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BetPair.sol\":302:334  address public override sideBBet */\n    tag_3:\n      sload(0x03)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":706:738   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":688:739   */\n      dup2\n      mstore\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":661:679   */\n      add\n        /* \"contracts/BetPair.sol\":302:334  address public override sideBBet */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BetPair.sol\":429:457  uint public override amountA */\n    tag_4:\n      tag_16\n      sload(0x06)\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":1562:1587   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1550:1552   */\n      0x20\n        /* \"#utility.yul\":1535:1553   */\n      add\n        /* \"contracts/BetPair.sol\":429:457  uint public override amountA */\n      tag_14\n        /* \"#utility.yul\":1517:1593   */\n      jump\n        /* \"contracts/BetPair.sol\":263:295  address public override sideABet */\n    tag_5:\n      sload(0x02)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":464:492  uint public override amountB */\n    tag_6:\n      tag_16\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":984:1304  function setWinnerBet( address _addr) external override returns(bool){... */\n    tag_7:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":915:929   */\n      swap1\n      iszero\n        /* \"#utility.yul\":908:930   */\n      iszero\n        /* \"#utility.yul\":890:931   */\n      dup2\n      mstore\n        /* \"#utility.yul\":878:880   */\n      0x20\n        /* \"#utility.yul\":863:881   */\n      add\n        /* \"contracts/BetPair.sol\":984:1304  function setWinnerBet( address _addr) external override returns(bool){... */\n      tag_14\n        /* \"#utility.yul\":845:937   */\n      jump\n        /* \"contracts/BetPair.sol\":226:256  address public override market */\n    tag_8:\n      sload(0x01)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":345:378  address public override winnerBet */\n    tag_9:\n      sload(0x04)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":385:422  address public override winnerAddress */\n    tag_10:\n      sload(0x05)\n      tag_12\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":984:1304  function setWinnerBet( address _addr) external override returns(bool){... */\n    tag_29:\n        /* \"contracts/BetPair.sol\":1085:1093  web3bets */\n      sload(0x08)\n        /* \"contracts/BetPair.sol\":1085:1103  web3bets.factory() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xc45a0155)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BetPair.sol\":1048:1052  bool */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1085:1093  web3bets */\n      and\n      swap2\n        /* \"contracts/BetPair.sol\":1085:1101  web3bets.factory */\n      0xc45a0155\n      swap2\n        /* \"contracts/BetPair.sol\":1085:1103  web3bets.factory() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BetPair.sol\":1085:1093  web3bets */\n      dup7\n        /* \"contracts/BetPair.sol\":1085:1103  web3bets.factory() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1071:1103  msg.sender == web3bets.factory() */\n      and\n        /* \"contracts/BetPair.sol\":1071:1081  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1071:1103  msg.sender == web3bets.factory() */\n      and\n      eq\n        /* \"contracts/BetPair.sol\":1063:1173  require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"contracts/BetPair.sol\":1063:1173  require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1126:1147   */\n      mstore\n        /* \"#utility.yul\":1183:1185   */\n      0x41\n        /* \"#utility.yul\":1163:1181   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1156:1186   */\n      mstore\n        /* \"#utility.yul\":1222:1256   */\n      0x6f6e6c792077656233626574732066697865646f64647320666163746f727920\n        /* \"#utility.yul\":1202:1220   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1195:1257   */\n      mstore\n        /* \"#utility.yul\":1293:1327   */\n      0x636f6e74726163742063616e20637265617465207468697320636f6e74726163\n        /* \"#utility.yul\":1273:1291   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1266:1328   */\n      mstore\n      shl(0xfa, 0x1d)\n        /* \"#utility.yul\":1344:1363   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":1337:1369   */\n      mstore\n        /* \"#utility.yul\":1386:1405   */\n      0xa4\n      add\n        /* \"contracts/BetPair.sol\":1063:1173  require(msg.sender == web3bets.factory(), \"only web3bets fixedodds factory contract can create this contract\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/BetPair.sol\":1183:1192  winnerBet */\n      0x04\n        /* \"contracts/BetPair.sol\":1183:1200  winnerBet = _addr */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"contracts/BetPair.sol\":1263:1276  _bet.better() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x1c631f51)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BetPair.sol\":1183:1200  winnerBet = _addr */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/BetPair.sol\":1263:1274  _bet.better */\n      0x718c7d44\n      swap3\n        /* \"contracts/BetPair.sol\":1263:1276  _bet.better() */\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BetPair.sol\":1183:1200  winnerBet = _addr */\n      dup7\n        /* \"contracts/BetPair.sol\":1263:1276  _bet.better() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n        /* \"contracts/BetPair.sol\":1247:1260  winnerAddress */\n      0x05\n        /* \"contracts/BetPair.sol\":1247:1276  winnerAddress = _bet.better() */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      0x01\n      swap3\n      swap2\n      pop\n      pop\n        /* \"contracts/BetPair.sol\":984:1304  function setWinnerBet( address _addr) external override returns(bool){... */\n      jump\t// out\n        /* \"#utility.yul\":14:271   */\n    tag_28:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_56:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:241   */\n      tag_57\n        /* \"#utility.yul\":235:240   */\n      dup2\n        /* \"#utility.yul\":210:241   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":260:265   */\n      swap4\n        /* \"#utility.yul\":84:271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:537   */\n    tag_46:\n        /* \"#utility.yul\":346:352   */\n      0x00\n        /* \"#utility.yul\":399:401   */\n      0x20\n        /* \"#utility.yul\":387:396   */\n      dup3\n        /* \"#utility.yul\":378:385   */\n      dup5\n        /* \"#utility.yul\":374:397   */\n      sub\n        /* \"#utility.yul\":370:402   */\n      slt\n        /* \"#utility.yul\":367:369   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":412:418   */\n      dup2\n        /* \"#utility.yul\":405:427   */\n      revert\n        /* \"#utility.yul\":367:369   */\n    tag_60:\n        /* \"#utility.yul\":457:466   */\n      dup2\n        /* \"#utility.yul\":451:467   */\n      mload\n        /* \"#utility.yul\":476:507   */\n      tag_57\n        /* \"#utility.yul\":501:506   */\n      dup2\n        /* \"#utility.yul\":1598:1729   */\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1673:1704   */\n      dup2\n      and\n        /* \"#utility.yul\":1663:1705   */\n      dup2\n      eq\n        /* \"#utility.yul\":1653:1655   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1719:1720   */\n      0x00\n        /* \"#utility.yul\":1716:1717   */\n      dup1\n        /* \"#utility.yul\":1709:1721   */\n      revert\n        /* \"#utility.yul\":1653:1655   */\n    tag_67:\n        /* \"#utility.yul\":1643:1729   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d344815d66a43eade48dfda996be3f4fc9e4af52826ec81c4156fd1756928a8d64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1407:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:19"
															},
															"nodeType": "YulIf",
															"src": "115:2:19"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:19",
														"type": ""
													}
												],
												"src": "14:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "277:137:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "323:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "332:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "325:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "325:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "325:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "298:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "307:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "294:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "294:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:32:19"
															},
															"nodeType": "YulIf",
															"src": "287:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "358:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "398:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "368:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "358:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "243:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "254:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "266:6:19",
														"type": ""
													}
												],
												"src": "196:218:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "568:363:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "615:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "624:6:19"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "632:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "617:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "617:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "617:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "589:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "598:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "585:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "585:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "581:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:33:19"
															},
															"nodeType": "YulIf",
															"src": "578:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "650:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "690:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "660:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "650:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "709:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "753:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "764:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "749:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "719:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:49:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "709:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "777:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "821:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "832:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "817:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "787:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:49:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "845:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "865:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "876:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "855:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:25:19"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "889:36:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "909:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "920:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "905:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:19:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:26:19"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "502:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "513:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "525:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "533:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "541:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "549:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "557:6:19",
														"type": ""
													}
												],
												"src": "419:512:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1110:295:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1127:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1120:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1161:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1172:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1157:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1157:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:2:19",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1150:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1150:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1150:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1200:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1211:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1196:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1216:34:19",
																		"type": "",
																		"value": "only web3bets fixedodds factory "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1189:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1189:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1271:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1267:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1267:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1287:34:19",
																		"type": "",
																		"value": "contract can create this contrac"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1260:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1353:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:19:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1359:3:19",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:32:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1331:32:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1372:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1384:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1395:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1372:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1101:4:19",
														"type": ""
													}
												],
												"src": "936:469:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"only web3bets fixedodds factory \")\n        mstore(add(headStart, 96), \"contract can create this contrac\")\n        mstore(add(headStart, 128), \"t\")\n        tail := add(headStart, 160)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600054600880546001600160a01b0319166001600160a01b0390921691909117905534801561003257600080fd5b506040516105f23803806105f2833981016040819052610051916101f4565b600860009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561009f57600080fd5b505afa1580156100b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d791906101d3565b6001600160a01b0316336001600160a01b03161461016b5760405162461bcd60e51b815260206004820152604160248201527f6f6e6c792077656233626574732066697865646f64647320666163746f72792060448201527f636f6e74726163742063616e20637265617465207468697320636f6e747261636064820152601d60fa1b608482015260a40160405180910390fd5b600180546001600160a01b03199081166001600160a01b039788161790915560028054821695871695909517909455600380549094169290941691909117909155600655600755610249565b80516001600160a01b03811681146101ce57600080fd5b919050565b6000602082840312156101e4578081fd5b6101ed826101b7565b9392505050565b600080600080600060a0868803121561020b578081fd5b610214866101b7565b9450610222602087016101b7565b9350610230604087016101b7565b6060870151608090970151959894975095949392505050565b61039a806102586000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636d83a71f1161005b5780636d83a71f146100f057806380f5560514610113578063baa1a3ec14610126578063ed7a4e0b1461013957600080fd5b80630f765e6d1461008d578063156dcbf0146100bd57806315e894ab146100d45780632efe91ef146100e7575b600080fd5b6003546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c660065481565b6040519081526020016100b4565b6002546100a0906001600160a01b031681565b6100c660075481565b6101036100fe366004610311565b61014c565b60405190151581526020016100b4565b6001546100a0906001600160a01b031681565b6004546100a0906001600160a01b031681565b6005546100a0906001600160a01b031681565b6008546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b15801561019157600080fd5b505afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c99190610334565b6001600160a01b0316336001600160a01b03161461025d5760405162461bcd60e51b815260206004820152604160248201527f6f6e6c792077656233626574732066697865646f64647320666163746f72792060448201527f636f6e74726163742063616e20637265617465207468697320636f6e747261636064820152601d60fa1b608482015260a40160405180910390fd5b600480546001600160a01b0319166001600160a01b038416908117825560408051631c631f5160e21b815290519192839263718c7d44928083019260209291829003018186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190610334565b600580546001600160a01b0319166001600160a01b039290921691909117905550600192915050565b600060208284031215610322578081fd5b813561032d8161034c565b9392505050565b600060208284031215610345578081fd5b815161032d815b6001600160a01b038116811461036157600080fd5b5056fea2646970667358221220d344815d66a43eade48dfda996be3f4fc9e4af52826ec81c4156fd1756928a8d64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 SLOAD PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F2 CODESIZE SUB DUP1 PUSH2 0x5F2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x51 SWAP2 PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792077656233626574732066697865646F64647320666163746F727920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6E74726163742063616E20637265617465207468697320636F6E74726163 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH2 0x249 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1ED DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x214 DUP7 PUSH2 0x1B7 JUMP JUMPDEST SWAP5 POP PUSH2 0x222 PUSH1 0x20 DUP8 ADD PUSH2 0x1B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x230 PUSH1 0x40 DUP8 ADD PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x39A DUP1 PUSH2 0x258 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D83A71F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6D83A71F EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x80F55605 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xBAA1A3EC EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xED7A4E0B EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF765E6D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x156DCBF0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x15E894AB EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2EFE91EF EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792077656233626574732066697865646F64647320666163746F727920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6E74726163742063616E20637265617465207468697320636F6E74726163 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C631F51 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH4 0x718C7D44 SWAP3 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x322 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32D DUP2 PUSH2 0x34C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x345 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x32D DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DIFFICULTY DUP2 0x5D PUSH7 0xA43EADE48DFDA9 SWAP7 0xBE EXTCODEHASH 0x4F 0xC9 0xE4 0xAF MSTORE DUP3 PUSH15 0xC81C4156FD1756928A8D64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "152:1159:14:-:0;;;542:15;;499:59;;;-1:-1:-1;;;;;;499:59:14;-1:-1:-1;;;;;542:15:14;;;499:59;;;;;;565:413;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;741:8;;;;;;;;;-1:-1:-1;;;;;741:8:14;-1:-1:-1;;;;;741:16:14;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;727:32:14;:10;-1:-1:-1;;;;;727:32:14;;719:110;;;;-1:-1:-1;;;719:110:14;;1138:2:19;719:110:14;;;1120:21:19;1177:2;1157:18;;;1150:30;1216:34;1196:18;;;1189:62;1287:34;1267:18;;;1260:62;-1:-1:-1;;;1338:19:19;;;1331:32;1380:19;;719:110:14;;;;;;;;839:6;:16;;-1:-1:-1;;;;;;839:16:14;;;-1:-1:-1;;;;;839:16:14;;;;;;;865:8;:20;;;;;;;;;;;;;;895:8;:20;;;;;;;;;;;;;;;;925:7;:18;953:7;:18;152:1159;;14:177:19;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:218::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;368:40;398:9;368:40;:::i;:::-;358:50;277:137;-1:-1:-1;;;277:137:19:o;419:512::-;525:6;533;541;549;557;610:3;598:9;589:7;585:23;581:33;578:2;;;632:6;624;617:22;578:2;660:40;690:9;660:40;:::i;:::-;650:50;;719:49;764:2;753:9;749:18;719:49;:::i;:::-;709:59;;787:49;832:2;821:9;817:18;787:49;:::i;:::-;876:2;861:18;;855:25;920:3;905:19;;;899:26;568:363;;;;-1:-1:-1;777:59:19;855:25;899:26;568:363;-1:-1:-1;;;568:363:19:o;1110:295::-;152:1159:14;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1731:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:187:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:19"
															},
															"nodeType": "YulIf",
															"src": "94:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "235:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "250:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "260:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "250:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:19",
														"type": ""
													}
												],
												"src": "14:257:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "357:180:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "403:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "412:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "420:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "405:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "405:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "405:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "378:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "387:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "374:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "399:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "370:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:32:19"
															},
															"nodeType": "YulIf",
															"src": "367:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "438:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "451:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "442:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "501:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "476:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "476:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "516:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "526:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "323:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "334:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "346:6:19",
														"type": ""
													}
												],
												"src": "276:261:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "643:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "653:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "665:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "676:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "653:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "695:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "710:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "726:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "731:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "735:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "706:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "706:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "688:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "688:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "612:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "623:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "634:4:19",
														"type": ""
													}
												],
												"src": "542:203:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "845:92:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "855:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "867:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "863:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "855:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "922:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "915:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "915:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "908:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "890:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "814:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "825:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "836:4:19",
														"type": ""
													}
												],
												"src": "750:187:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1116:295:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1133:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1126:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1126:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1167:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1178:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:19",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1206:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1217:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1222:34:19",
																		"type": "",
																		"value": "only web3bets fixedodds factory "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1195:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1195:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1195:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1277:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1288:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1273:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1273:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1293:34:19",
																		"type": "",
																		"value": "contract can create this contrac"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1348:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1344:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1344:19:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1365:3:19",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:32:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:32:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1378:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1390:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1401:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1378:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1093:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1107:4:19",
														"type": ""
													}
												],
												"src": "942:469:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1517:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1527:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1539:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1535:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1527:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1569:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1580:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1562:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1486:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1497:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1508:4:19",
														"type": ""
													}
												],
												"src": "1416:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1643:86:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1707:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1716:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1719:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1709:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1709:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1709:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1666:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1677:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1692:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1697:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1688:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1688:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1701:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1684:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1684:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1673:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1673:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1663:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:50:19"
															},
															"nodeType": "YulIf",
															"src": "1653:2:19"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1632:5:19",
														"type": ""
													}
												],
												"src": "1598:131:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"only web3bets fixedodds factory \")\n        mstore(add(headStart, 96), \"contract can create this contrac\")\n        mstore(add(headStart, 128), \"t\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80636d83a71f1161005b5780636d83a71f146100f057806380f5560514610113578063baa1a3ec14610126578063ed7a4e0b1461013957600080fd5b80630f765e6d1461008d578063156dcbf0146100bd57806315e894ab146100d45780632efe91ef146100e7575b600080fd5b6003546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c660065481565b6040519081526020016100b4565b6002546100a0906001600160a01b031681565b6100c660075481565b6101036100fe366004610311565b61014c565b60405190151581526020016100b4565b6001546100a0906001600160a01b031681565b6004546100a0906001600160a01b031681565b6005546100a0906001600160a01b031681565b6008546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b15801561019157600080fd5b505afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c99190610334565b6001600160a01b0316336001600160a01b03161461025d5760405162461bcd60e51b815260206004820152604160248201527f6f6e6c792077656233626574732066697865646f64647320666163746f72792060448201527f636f6e74726163742063616e20637265617465207468697320636f6e747261636064820152601d60fa1b608482015260a40160405180910390fd5b600480546001600160a01b0319166001600160a01b038416908117825560408051631c631f5160e21b815290519192839263718c7d44928083019260209291829003018186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190610334565b600580546001600160a01b0319166001600160a01b039290921691909117905550600192915050565b600060208284031215610322578081fd5b813561032d8161034c565b9392505050565b600060208284031215610345578081fd5b815161032d815b6001600160a01b038116811461036157600080fd5b5056fea2646970667358221220d344815d66a43eade48dfda996be3f4fc9e4af52826ec81c4156fd1756928a8d64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D83A71F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6D83A71F EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x80F55605 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xBAA1A3EC EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xED7A4E0B EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF765E6D EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x156DCBF0 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x15E894AB EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x2EFE91EF EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xC6 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792077656233626574732066697865646F64647320666163746F727920 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6E74726163742063616E20637265617465207468697320636F6E74726163 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C631F51 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH4 0x718C7D44 SWAP3 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x322 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32D DUP2 PUSH2 0x34C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x345 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x32D DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DIFFICULTY DUP2 0x5D PUSH7 0xA43EADE48DFDA9 SWAP7 0xBE EXTCODEHASH 0x4F 0xC9 0xE4 0xAF MSTORE DUP3 PUSH15 0xC81C4156FD1756928A8D64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "152:1159:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;302:32;;;;;-1:-1:-1;;;;;302:32:14;;;;;;-1:-1:-1;;;;;706:32:19;;;688:51;;676:2;661:18;302:32:14;;;;;;;;429:28;;;;;;;;;1562:25:19;;;1550:2;1535:18;429:28:14;1517:76:19;263:32:14;;;;;-1:-1:-1;;;;;263:32:14;;;464:28;;;;;;984:320;;;;;;:::i;:::-;;:::i;:::-;;;915:14:19;;908:22;890:41;;878:2;863:18;984:320:14;845:92:19;226:30:14;;;;;-1:-1:-1;;;;;226:30:14;;;345:33;;;;;-1:-1:-1;;;;;345:33:14;;;385:37;;;;;-1:-1:-1;;;;;385:37:14;;;984:320;1085:8;;:18;;;-1:-1:-1;;;1085:18:14;;;;1048:4;;-1:-1:-1;;;;;1085:8:14;;:16;;:18;;;;;;;;;;;;;;:8;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1071:32:14;:10;-1:-1:-1;;;;;1071:32:14;;1063:110;;;;-1:-1:-1;;;1063:110:14;;1144:2:19;1063:110:14;;;1126:21:19;1183:2;1163:18;;;1156:30;1222:34;1202:18;;;1195:62;1293:34;1273:18;;;1266:62;-1:-1:-1;;;1344:19:19;;;1337:32;1386:19;;1063:110:14;;;;;;;;1183:9;:17;;-1:-1:-1;;;;;;1183:17:14;-1:-1:-1;;;;;1183:17:14;;;;;;;1263:13;;;-1:-1:-1;;;1263:13:14;;;;1183:17;;;;1263:11;;:13;;;;;;;;;;;;1183:17;1263:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1247;:29;;-1:-1:-1;;;;;;1247:29:14;-1:-1:-1;;;;;1247:29:14;;;;;;;;;;-1:-1:-1;;;1247:29:14;-1:-1:-1;;984:320:14:o;14:257:19:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;:::-;260:5;84:187;-1:-1:-1;;;84:187:19:o;276:261::-;346:6;399:2;387:9;378:7;374:23;370:32;367:2;;;420:6;412;405:22;367:2;457:9;451:16;476:31;501:5;1598:131;-1:-1:-1;;;;;1673:31:19;;1663:42;;1653:2;;1719:1;1716;1709:12;1653:2;1643:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "184400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountA()": "1018",
								"amountB()": "1062",
								"market()": "1048",
								"setWinnerBet(address)": "infinite",
								"sideABet()": "1071",
								"sideBBet()": "1027",
								"winnerAddress()": "1092",
								"winnerBet()": "1070"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 542,
									"end": 557,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 557,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 499,
									"end": 558,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 499,
									"end": 558,
									"name": "AND",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 542,
									"end": 557,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 542,
									"end": 557,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 542,
									"end": 557,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 499,
									"end": 558,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 565,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 978,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 741,
									"end": 749,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 741,
									"end": 749,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 749,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 749,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 749,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 749,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 741,
									"end": 749,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 749,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 749,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 741,
									"end": 749,
									"name": "AND",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 741,
									"end": 757,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 741,
									"end": 757,
									"name": "PUSH",
									"source": 14,
									"value": "C45A0155"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFF"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "EXTCODESIZE",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "tag",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "GAS",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "STATICCALL",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "RETURNDATASIZE",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "RETURNDATACOPY",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "RETURNDATASIZE",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "RETURNDATASIZE",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 741,
									"end": 759,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 741,
									"end": 759,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 727,
									"end": 759,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 727,
									"end": 737,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 727,
									"end": 759,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 727,
									"end": 759,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 719,
									"end": 829,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 719,
									"end": 829,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 719,
									"end": 829,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1138,
									"end": 1140,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 719,
									"end": 829,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 829,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1120,
									"end": 1141,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1177,
									"end": 1179,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1157,
									"end": 1175,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1150,
									"end": 1180,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1216,
									"end": 1250,
									"name": "PUSH",
									"source": 19,
									"value": "6F6E6C792077656233626574732066697865646F64647320666163746F727920"
								},
								{
									"begin": 1196,
									"end": 1214,
									"name": "PUSH",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 1196,
									"end": 1214,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1196,
									"end": 1214,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1189,
									"end": 1251,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1287,
									"end": 1321,
									"name": "PUSH",
									"source": 19,
									"value": "636F6E74726163742063616E20637265617465207468697320636F6E74726163"
								},
								{
									"begin": 1267,
									"end": 1285,
									"name": "PUSH",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 1267,
									"end": 1285,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1267,
									"end": 1285,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1260,
									"end": 1322,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1338,
									"end": 1357,
									"name": "PUSH",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 1338,
									"end": 1357,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1338,
									"end": 1357,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1331,
									"end": 1363,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1380,
									"end": 1399,
									"name": "PUSH",
									"source": 19,
									"value": "A4"
								},
								{
									"begin": 1380,
									"end": 1399,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 719,
									"end": 829,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 719,
									"end": 829,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 719,
									"end": 829,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 719,
									"end": 829,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 839,
									"end": 845,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 839,
									"end": 855,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 839,
									"end": 855,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "AND",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 839,
									"end": 855,
									"name": "SWAP8",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 839,
									"end": 855,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 865,
									"end": 873,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 865,
									"end": 885,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 865,
									"end": 885,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 895,
									"end": 903,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 895,
									"end": 915,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 895,
									"end": 915,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 925,
									"end": 932,
									"name": "PUSH",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 925,
									"end": 943,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 953,
									"end": 960,
									"name": "PUSH",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 414,
									"name": "tag",
									"source": 19,
									"value": "10"
								},
								{
									"begin": 196,
									"end": 414,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 266,
									"end": 272,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 321,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 307,
									"end": 316,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 298,
									"end": 305,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 294,
									"end": 317,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 290,
									"end": 322,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 287,
									"end": 289,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 287,
									"end": 289,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 289,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 340,
									"end": 346,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 332,
									"end": 338,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 325,
									"end": 347,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 287,
									"end": 289,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 287,
									"end": 289,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 368,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 398,
									"end": 407,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 368,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 368,
									"end": 408,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 368,
									"end": 408,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 368,
									"end": 408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 358,
									"end": 408,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 277,
									"end": 414,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 277,
									"end": 414,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 419,
									"end": 931,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 419,
									"end": 931,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 525,
									"end": 531,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 539,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 541,
									"end": 547,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 557,
									"end": 563,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 613,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 598,
									"end": 607,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 589,
									"end": 596,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 585,
									"end": 608,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 581,
									"end": 614,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 578,
									"end": 580,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 578,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 578,
									"end": 580,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 632,
									"end": 638,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 624,
									"end": 630,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 617,
									"end": 639,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 578,
									"end": 580,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 578,
									"end": 580,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 660,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 690,
									"end": 699,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 660,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 660,
									"end": 700,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 700,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 660,
									"end": 700,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 650,
									"end": 700,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 650,
									"end": 700,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 719,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 764,
									"end": 766,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 753,
									"end": 762,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 749,
									"end": 767,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 719,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 719,
									"end": 768,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 719,
									"end": 768,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 719,
									"end": 768,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 709,
									"end": 768,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 709,
									"end": 768,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 787,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 832,
									"end": 834,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 821,
									"end": 830,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 817,
									"end": 835,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 787,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 787,
									"end": 836,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 787,
									"end": 836,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 787,
									"end": 836,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 876,
									"end": 878,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 861,
									"end": 879,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 861,
									"end": 879,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 855,
									"end": 880,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 920,
									"end": 923,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 905,
									"end": 924,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 905,
									"end": 924,
									"name": "SWAP8",
									"source": 19
								},
								{
									"begin": 905,
									"end": 924,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 899,
									"end": 925,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 568,
									"end": 931,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 568,
									"end": 931,
									"name": "SWAP9",
									"source": 19
								},
								{
									"begin": 568,
									"end": 931,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 568,
									"end": 931,
									"name": "SWAP8",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 777,
									"end": 836,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 855,
									"end": 880,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 899,
									"end": 925,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 568,
									"end": 931,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 568,
									"end": 931,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 1110,
									"end": 1405,
									"name": "tag",
									"source": 19,
									"value": "15"
								},
								{
									"begin": 1110,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 1311,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d344815d66a43eade48dfda996be3f4fc9e4af52826ec81c4156fd1756928a8d64736f6c63430008040033",
									".code": [
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "6D83A71F"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "6D83A71F"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "80F55605"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "BAA1A3EC"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "ED7A4E0B"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "F765E6D"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "156DCBF0"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "15E894AB"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "2EFE91EF"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 152,
											"end": 1311,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 302,
											"end": 334,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 706,
											"end": 738,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 706,
											"end": 738,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 706,
											"end": 738,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 688,
											"end": 739,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 688,
											"end": 739,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 679,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 302,
											"end": 334,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 334,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 302,
											"end": 334,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 429,
											"end": 457,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 429,
											"end": 457,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 457,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 429,
											"end": 457,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 429,
											"end": 457,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 429,
											"end": 457,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 429,
											"end": 457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 429,
											"end": 457,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 457,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1587,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1562,
											"end": 1587,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1562,
											"end": 1587,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1553,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 429,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1517,
											"end": 1593,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 263,
											"end": 295,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 263,
											"end": 295,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 263,
											"end": 295,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 263,
											"end": 295,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 263,
											"end": 295,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 263,
											"end": 295,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 263,
											"end": 295,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 263,
											"end": 295,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 263,
											"end": 295,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 915,
											"end": 929,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 915,
											"end": 929,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 908,
											"end": 930,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 890,
											"end": 931,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 890,
											"end": 931,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 881,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 845,
											"end": 937,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 226,
											"end": 256,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 226,
											"end": 256,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 256,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 226,
											"end": 256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 226,
											"end": 256,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 226,
											"end": 256,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 226,
											"end": 256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 226,
											"end": 256,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 345,
											"end": 378,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 345,
											"end": 378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 345,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 378,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 345,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 345,
											"end": 378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 345,
											"end": 378,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 345,
											"end": 378,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 345,
											"end": 378,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 385,
											"end": 422,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 385,
											"end": 422,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C45A0155"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1048,
											"end": 1052,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1052,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "PUSH",
											"source": 14,
											"value": "C45A0155"
										},
										{
											"begin": 1085,
											"end": 1101,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1085,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1071,
											"end": 1103,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1071,
											"end": 1081,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1071,
											"end": 1103,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1071,
											"end": 1103,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1126,
											"end": 1147,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1156,
											"end": 1186,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1222,
											"end": 1256,
											"name": "PUSH",
											"source": 19,
											"value": "6F6E6C792077656233626574732066697865646F64647320666163746F727920"
										},
										{
											"begin": 1202,
											"end": 1220,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 1202,
											"end": 1220,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1202,
											"end": 1220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1195,
											"end": 1257,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1293,
											"end": 1327,
											"name": "PUSH",
											"source": 19,
											"value": "636F6E74726163742063616E20637265617465207468697320636F6E74726163"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1266,
											"end": 1328,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1363,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 1344,
											"end": 1363,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1344,
											"end": 1363,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1337,
											"end": 1369,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1386,
											"end": 1405,
											"name": "PUSH",
											"source": 19,
											"value": "A4"
										},
										{
											"begin": 1386,
											"end": 1405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1063,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1192,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C631F51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1274,
											"name": "PUSH",
											"source": 14,
											"value": "718C7D44"
										},
										{
											"begin": 1263,
											"end": 1274,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1260,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 984,
											"end": 1304,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "tag",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 210,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 210,
											"end": 241,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 84,
											"end": 271,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 271,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 276,
											"end": 537,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 276,
											"end": 537,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 346,
											"end": 352,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 401,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 396,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 378,
											"end": 385,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 374,
											"end": 397,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 370,
											"end": 402,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 367,
											"end": 369,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 367,
											"end": 369,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 412,
											"end": 418,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 405,
											"end": 427,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 367,
											"end": 369,
											"name": "tag",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 367,
											"end": 369,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 457,
											"end": 466,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 451,
											"end": 467,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 476,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 501,
											"end": 506,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1598,
											"end": 1729,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1598,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1673,
											"end": 1704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1673,
											"end": 1704,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1663,
											"end": 1705,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1663,
											"end": 1705,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1719,
											"end": 1720,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "tag",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1643,
											"end": 1729,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1643,
											"end": 1729,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"amountA()": "156dcbf0",
							"amountB()": "2efe91ef",
							"market()": "80f55605",
							"setWinnerBet(address)": "6d83a71f",
							"sideABet()": "15e894ab",
							"sideBBet()": "0f765e6d",
							"winnerAddress()": "ed7a4e0b",
							"winnerBet()": "baa1a3ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"market_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sideABet_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sideBBet_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amountA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setWinnerBet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideABet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideBBet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerBet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BetPair.sol\":\"BetPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/BetPair.sol\":{\"keccak256\":\"0x54dfa9d00775642c74f4f2eacdb000c3d890f2962c81d965ef69cc3a58a4c244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eefed976669edcd9dcecc1d05d65825d59b2f6a1a5f97f0cabef66cab5c87c88\",\"dweb:/ipfs/QmRoMT9qq4qCu4WsrLSeHV4uCUyQQDpsZ7BM73FSyK6ZF7\"]},\"contracts/Web3BetsFO.sol\":{\"keccak256\":\"0xdf2d8da635a027c032b422ba2cd5a559095f44036c1e47274bbf403f717eddf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f744a1ba974f719f895440266918ecb2abbab274685001b42fb1ca21f8e200f\",\"dweb:/ipfs/QmdngciFYmb7tpFeV65AeNLZnBrrYAM3ejczK5xrBghNkD\"]},\"contracts/interface/IBet.sol\":{\"keccak256\":\"0x2c21a42a1340fcdfd25037d486a4f920c20ee8de203d0c28db92e3ef186c0571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://585969eb05acee4faa42bab41c115cc2834156f36396dd0d7c752df7d2b600d4\",\"dweb:/ipfs/QmZ68XgPkX1ecCKTCZxgtvH4YrLR7E27msfAedZ99St4bU\"]},\"contracts/interface/IBetPair.sol\":{\"keccak256\":\"0x856f35ffffe237c22cc04dea0c0909346fa7cea1318a195488af92aaa851083c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8d1fcf33e25e655338a10463ce4f10f4233b13fafc48513df387ef20c947326\",\"dweb:/ipfs/QmVxGA64KtQuyz2AqLpEa9PjfvspJLT6JUjor35YQobicJ\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0x7416e4a04af3bdfdad54246180d322fc4aa12a73fd183576faa06cce3efd66b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ed3fb186515a6546f1f016adc61be2874dbc1964531bf66e9469ef80209414\",\"dweb:/ipfs/QmQspA6qDCZoct316imYrdJvDrdVhmbQ5yLpgrE3LNFWXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2326,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "web3betsAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2329,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "market",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2332,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "sideABet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2335,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "sideBBet",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2338,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "winnerBet",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2341,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "winnerAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 2344,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "amountA",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2347,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "amountB",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2353,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "web3bets",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IWeb3BetsFO)2918"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IWeb3BetsFO)2918": {
								"encoding": "inplace",
								"label": "contract IWeb3BetsFO",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Web3BetsFO.sol": {
				"Web3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BLACKLIST",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EVENT_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SYSTEM_ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								}
							],
							"name": "setFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setHoldersAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "setStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								}
							],
							"name": "setVigPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "hVig",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "eVig",
									"type": "uint256"
								}
							],
							"name": "setVigPercentageShares",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Web3BetsFO.sol\":289:3733  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Web3BetsFO.sol\":596:598  50 */\n  0x32\n    /* \"contracts/Web3BetsFO.sol\":559:598  uint256 public override holdersVig = 50 */\n  0x06\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":604:645  uint256 public override ecosystemVig = 50 */\n  0x07\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":691:693  10 */\n  0x0a\n    /* \"contracts/Web3BetsFO.sol\":651:693  uint256 public override vigPercentage = 10 */\n  0x08\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":742:752  stableCoin */\n  sload(0x05)\n    /* \"contracts/Web3BetsFO.sol\":699:753  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  0x09\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Web3BetsFO.sol\":742:752  stableCoin */\n  swap1\n  swap3\n  and\n    /* \"contracts/Web3BetsFO.sol\":699:753  IERC20 private _stableCoinWrapper = IERC20(stableCoin) */\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Web3BetsFO.sol\":1146:1571  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Web3BetsFO.sol\":1290:1332  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/Web3BetsFO.sol\":1321:1331  msg.sender */\n  caller\n    /* \"contracts/Web3BetsFO.sol\":1290:1300  _setupRole */\n  tag_5\n    /* \"contracts/Web3BetsFO.sol\":1290:1332  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n    /* \"contracts/Web3BetsFO.sol\":1342:1378  _setupRole(SYSTEM_ADMIN, msg.sender) */\n  tag_6\n  0x00\n  dup1\n  mload\n  0x20\n  data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Web3BetsFO.sol\":1367:1377  msg.sender */\n  caller\n    /* \"contracts/Web3BetsFO.sol\":1342:1352  _setupRole */\n  tag_5\n    /* \"contracts/Web3BetsFO.sol\":1342:1378  _setupRole(SYSTEM_ADMIN, msg.sender) */\n  jump\t// in\ntag_6:\n    /* \"contracts/Web3BetsFO.sol\":1388:1423  _setupRole(EVENT_ADMIN, msg.sender) */\n  tag_7\n  0x00\n  dup1\n  mload\n  0x20\n  data_1509970658320cf711c24d98099e2b1d5dfd240ba4e3e67eedd50a039033d4bf\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Web3BetsFO.sol\":1412:1422  msg.sender */\n  caller\n    /* \"contracts/Web3BetsFO.sol\":1388:1398  _setupRole */\n  tag_5\n    /* \"contracts/Web3BetsFO.sol\":1388:1423  _setupRole(EVENT_ADMIN, msg.sender) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Web3BetsFO.sol\":1433:1473  _setRoleAdmin(EVENT_ADMIN, SYSTEM_ADMIN) */\n  tag_8\n  0x00\n  dup1\n  mload\n  0x20\n  data_1509970658320cf711c24d98099e2b1d5dfd240ba4e3e67eedd50a039033d4bf\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Web3BetsFO.sol\":1433:1446  _setRoleAdmin */\n  tag_9\n    /* \"contracts/Web3BetsFO.sol\":1433:1473  _setRoleAdmin(EVENT_ADMIN, SYSTEM_ADMIN) */\n  jump\t// in\ntag_8:\n    /* \"contracts/Web3BetsFO.sol\":1483:1516  _setupRole(BLACKLIST, address(0)) */\n  tag_10\n  0x00\n  dup1\n  mload\n  0x20\n  data_66de2d57f1e19309316d1bec7e9bdee6dcd35ee6d22de30e180fb9858210c7e5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Web3BetsFO.sol\":1513:1514  0 */\n  0x00\n    /* \"contracts/Web3BetsFO.sol\":1483:1493  _setupRole */\n  tag_5\n    /* \"contracts/Web3BetsFO.sol\":1483:1516  _setupRole(BLACKLIST, address(0)) */\n  jump\t// in\ntag_10:\n    /* \"contracts/Web3BetsFO.sol\":1526:1564  _setRoleAdmin(BLACKLIST, SYSTEM_ADMIN) */\n  tag_11\n  0x00\n  dup1\n  mload\n  0x20\n  data_66de2d57f1e19309316d1bec7e9bdee6dcd35ee6d22de30e180fb9858210c7e5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/Web3BetsFO.sol\":1526:1539  _setRoleAdmin */\n  tag_9\n    /* \"contracts/Web3BetsFO.sol\":1526:1564  _setRoleAdmin(BLACKLIST, SYSTEM_ADMIN) */\n  jump\t// in\ntag_11:\n    /* \"contracts/Web3BetsFO.sol\":289:3733  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:6934  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6902:6927  _grantRole(role, account) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6913:6917  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6919:6926  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6902:6912  _grantRole */\n  tag_15\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6902:6927  _grantRole(role, account) */\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:6934  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7059:7306  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7142:7167  bytes32 previousAdminRole */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n  0x01\n  add\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7198:7232  _roles[role].adminRole = adminRole */\n  swap1\n  dup5\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7247:7299  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  swap1\n  mload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7198:7232  _roles[role].adminRole = adminRole */\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n  dup7\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7247:7299  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7142:7167  bytes32 previousAdminRole */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7247:7299  RoleAdminChanged(role, previousAdminRole, adminRole) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7059:7306  function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1978:2144  function _grantRole(bytes32 role, address account) internal virtual override {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2065:2096  super._grantRole(role, account) */\n  tag_20\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2082:2086  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2088:2095  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2065:2081  super._grantRole */\n  or(tag_0_145, shl(0x20, tag_21))\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2065:2096  super._grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2124  _roleMembers[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2118  _roleMembers */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2124  _roleMembers[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2137  _roleMembers[role].add(account) */\n  tag_22\n  swap2\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2129:2136  account */\n  dup4\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2128  _roleMembers[role].add */\n  tag_0_146\n  tag_23\n  dup3\n  shl\n  or\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2137  _roleMembers[role].add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_22:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1978:2144  function _grantRole(bytes32 role, address account) internal virtual override {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7601  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7627:7631  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n  tag_29\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7668:7675  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7662:7666  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8028:8178  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8098:8102  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_32\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8126:8129  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8146:8169  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8125  _add */\n  tag_33\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8114:8171  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8028:8178  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_31:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2113:2517  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2176:2180  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n  dup2\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4262  set._indexes */\n  0x01\n  dup4\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n  tag_39\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2245  set._values */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2414:2432  set._values.length */\n  dup5\n  sload\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2404  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2432  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2446:2457  return true */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\ntag_39:\n  pop\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2495:2500  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2488:2500  return false */\n  jump(tag_31)\n    /* \"contracts/Web3BetsFO.sol\":289:3733  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_1509970658320cf711c24d98099e2b1d5dfd240ba4e3e67eedd50a039033d4bf b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0\ndata_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f 74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639\ndata_66de2d57f1e19309316d1bec7e9bdee6dcd35ee6d22de30e180fb9858210c7e5 c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c\n\nsub_0: assembly {\n        /* \"contracts/Web3BetsFO.sol\":289:3733  contract Web3BetsFO is IWeb3BetsFO, AccessControlEnumerable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x852757ad\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xb501ec97\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcb146622\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xcb146622\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcbf89c63\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd6c1ca26\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xb501ec97\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc8b0cf68\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x9376b94c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x9376b94c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa8e01b28\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x852757ad\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x332daccf\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x486d1e50\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x486d1e50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4fb43199\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5bb47808\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x64886880\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x332daccf\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x387440e6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x23af4e17\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x23af4e17\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x327372e4\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06a5cb3a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0da4ee50\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":634:846  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":3913:3927   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3906:3928   */\n      iszero\n        /* \"#utility.yul\":3888:3929   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3876:3878   */\n      0x20\n        /* \"#utility.yul\":3861:3879   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":634:846  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Web3BetsFO.sol\":429:469  address public override ecosystemAddress */\n    tag_4:\n      sload(0x03)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3425:3457   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3407:3458   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3395:3397   */\n      0x20\n        /* \"#utility.yul\":3380:3398   */\n      add\n        /* \"contracts/Web3BetsFO.sol\":429:469  address public override ecosystemAddress */\n      tag_43\n        /* \"#utility.yul\":3362:3464   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":475:513  address public override holdersAddress */\n    tag_5:\n      sload(0x04)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1679:1781  function setStableCoin(address holder) public onlySystemAdmin {... */\n    tag_6:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_7:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":4086:4111   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4059:4077   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      tag_43\n        /* \"#utility.yul\":4041:4117   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_8:\n      tag_52\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3605:3730  function isBlack(address _account) external view override returns (bool) {... */\n    tag_10:\n      tag_39\n      tag_70\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_52\n      tag_74\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":651:693  uint256 public override vigPercentage = 10 */\n    tag_12:\n      tag_56\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":559:598  uint256 public override holdersVig = 50 */\n    tag_13:\n      tag_56\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3327:3461  function isSystemAdmin(address _account) external view override returns (bool) {... */\n    tag_14:\n      tag_39\n      tag_84\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1577:1673  function setFactory(address _factory) public onlySystemAdmin {... */\n    tag_15:\n      tag_52\n      tag_88\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2278:2737  function setVigPercentageShares(... */\n    tag_16:\n      tag_52\n      tag_91\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":760:824  bytes32 public constant SYSTEM_ADMIN = keccak256(\"SYSTEM_ADMIN\") */\n    tag_17:\n      tag_56\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1431:1582  function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {... */\n    tag_18:\n      tag_45\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_19:\n      tag_39\n      tag_103\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":604:645  uint256 public override ecosystemVig = 50 */\n    tag_20:\n      tag_56\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":519:553  address public override stableCoin */\n    tag_21:\n      sload(0x05)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":1903:2013  function setEcosystemAddress(address holder) public onlySystemAdmin {... */\n    tag_23:\n      tag_52\n      tag_116\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":830:892  bytes32 public constant EVENT_ADMIN = keccak256(\"EVENT_ADMIN\") */\n    tag_24:\n      tag_56\n        /* \"contracts/Web3BetsFO.sol\":868:892  keccak256(\"EVENT_ADMIN\") */\n      0xb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0\n        /* \"contracts/Web3BetsFO.sol\":830:892  bytes32 public constant EVENT_ADMIN = keccak256(\"EVENT_ADMIN\") */\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":392:423  address public override factory */\n    tag_25:\n      sload(0x02)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Web3BetsFO.sol\":898:956  bytes32 public constant BLACKLIST = keccak256(\"BLACKLIST\") */\n    tag_26:\n      tag_56\n        /* \"contracts/Web3BetsFO.sol\":934:956  keccak256(\"BLACKLIST\") */\n      0xc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c\n        /* \"contracts/Web3BetsFO.sol\":898:956  bytes32 public constant BLACKLIST = keccak256(\"BLACKLIST\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1750:1890  function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {... */\n    tag_27:\n      tag_56\n      tag_128\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3467:3599  function isEventAdmin(address _account) external view override returns (bool) {... */\n    tag_28:\n      tag_39\n      tag_132\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2743:3321  function shareBetEarnings(uint256 _vigAmount) external override {... */\n    tag_29:\n      tag_52\n      tag_136\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_30:\n      tag_52\n      tag_140\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2019:2272  function setVigPercentage(uint256 _percentage) public onlySystemAdmin {... */\n    tag_31:\n      tag_52\n      tag_143\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":634:846  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":719:723  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":742:799  interfaceId == type(IAccessControlEnumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5a05180f)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":742:839  interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_149\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":803:839  super.supportsInterface(interfaceId) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":827:838  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":803:826  super.supportsInterface */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":803:839  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":735:839  return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":634:846  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":1679:1781  function setStableCoin(address holder) public onlySystemAdmin {... */\n    tag_55:\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_152\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1021:1028  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Web3BetsFO.sol\":1000:1122  require(... */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Web3BetsFO.sol\":1751:1765  holdersAddress */\n      0x04\n        /* \"contracts/Web3BetsFO.sol\":1751:1774  holdersAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":1679:1781  function setStableCoin(address holder) public onlySystemAdmin {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4954  _grantRole(role, account) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4940:4944  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4946:4953  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4939  _grantRole */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4954  _grantRole(role, account) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":3605:3730  function isBlack(address _account) external view override returns (bool) {... */\n    tag_71:\n        /* \"contracts/Web3BetsFO.sol\":3672:3676  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3695:3723  hasRole(BLACKLIST, _account) */\n      tag_149\n        /* \"contracts/Web3BetsFO.sol\":934:956  keccak256(\"BLACKLIST\") */\n      0xc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c\n        /* \"contracts/Web3BetsFO.sol\":3714:3722  _account */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3695:3702  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":3695:3723  hasRole(BLACKLIST, _account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6043  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6043  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6012:6095  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9261:9263   */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6012:6095  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9243:9264   */\n      mstore\n        /* \"#utility.yul\":9300:9302   */\n      0x2f\n        /* \"#utility.yul\":9280:9298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9273:9303   */\n      mstore\n        /* \"#utility.yul\":9339:9373   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":9319:9337   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9312:9374   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":9390:9408   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9383:9428   */\n      mstore\n        /* \"#utility.yul\":9445:9464   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6012:6095  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_154\n        /* \"#utility.yul\":9233:9470   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6012:6095  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6132  _revokeRole(role, account) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6118:6122  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6124:6131  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6117  _revokeRole */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6132  _revokeRole(role, account) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":3327:3461  function isSystemAdmin(address _account) external view override returns (bool) {... */\n    tag_85:\n        /* \"contracts/Web3BetsFO.sol\":3400:3404  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3423:3454  hasRole(SYSTEM_ADMIN, _account) */\n      tag_149\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":3445:3453  _account */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3423:3430  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":3423:3454  hasRole(SYSTEM_ADMIN, _account) */\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":1577:1673  function setFactory(address _factory) public onlySystemAdmin {... */\n    tag_89:\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_183\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1021:1028  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Web3BetsFO.sol\":1000:1122  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_184:\n        /* \"contracts/Web3BetsFO.sol\":1648:1655  factory */\n      0x02\n        /* \"contracts/Web3BetsFO.sol\":1648:1666  factory = _factory */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":1577:1673  function setFactory(address _factory) public onlySystemAdmin {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":2278:2737  function setVigPercentageShares(... */\n    tag_93:\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_188\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1021:1028  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/Web3BetsFO.sol\":1000:1122  require(... */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_189:\n        /* \"contracts/Web3BetsFO.sol\":2422:2425  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":2414:2418  hVig */\n      dup3\n        /* \"contracts/Web3BetsFO.sol\":2414:2425  hVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":2414:2440  hVig <= 100 && eVig <= 100 */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"contracts/Web3BetsFO.sol\":2437:2440  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":2429:2433  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2429:2440  eVig <= 100 */\n      gt\n      iszero\n        /* \"contracts/Web3BetsFO.sol\":2414:2440  hVig <= 100 && eVig <= 100 */\n    tag_192:\n        /* \"contracts/Web3BetsFO.sol\":2393:2540  require(... */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5499:5501   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2393:2540  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5481:5502   */\n      mstore\n        /* \"#utility.yul\":5538:5540   */\n      0x4a\n        /* \"#utility.yul\":5518:5536   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5511:5541   */\n      mstore\n        /* \"#utility.yul\":5577:5611   */\n      0x5669672070657263656e746167657320736861726573206d7573742062652065\n        /* \"#utility.yul\":5557:5575   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5550:5612   */\n      mstore\n        /* \"#utility.yul\":5648:5682   */\n      0x787072657373656420696e206120203020746f2031303020726174696f2e2045\n        /* \"#utility.yul\":5628:5646   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5621:5683   */\n      mstore\n      shl(0xb4, 0x078616d706c653a20333)\n        /* \"#utility.yul\":5699:5718   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5692:5733   */\n      mstore\n        /* \"#utility.yul\":5750:5769   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":2393:2540  require(... */\n      tag_154\n        /* \"#utility.yul\":5471:5775   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2393:2540  require(... */\n    tag_193:\n        /* \"contracts/Web3BetsFO.sol\":2571:2582  hVig + eVig */\n      tag_196\n        /* \"contracts/Web3BetsFO.sol\":2578:2582  eVig */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2571:2575  hVig */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":2571:2582  hVig + eVig */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/Web3BetsFO.sol\":2587:2590  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":2571:2590  hVig + eVig  == 100 */\n      eq\n        /* \"contracts/Web3BetsFO.sol\":2550:2673  require(... */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5073:5075   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2550:2673  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5055:5076   */\n      mstore\n        /* \"#utility.yul\":5112:5114   */\n      0x39\n        /* \"#utility.yul\":5092:5110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5085:5115   */\n      mstore\n        /* \"#utility.yul\":5151:5185   */\n      0x5468652073756d206f6620616c6c205669672070657263656e74616765207368\n        /* \"#utility.yul\":5131:5149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5124:5186   */\n      mstore\n        /* \"#utility.yul\":5222:5249   */\n      0x61726573206d75737420626520657175616c20746f2031303000000000000000\n        /* \"#utility.yul\":5202:5220   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5195:5250   */\n      mstore\n        /* \"#utility.yul\":5267:5286   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":2550:2673  require(... */\n      tag_154\n        /* \"#utility.yul\":5045:5292   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2550:2673  require(... */\n    tag_198:\n        /* \"contracts/Web3BetsFO.sol\":2684:2694  holdersVig */\n      0x06\n        /* \"contracts/Web3BetsFO.sol\":2684:2701  holdersVig = hVig */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2711:2723  ecosystemVig */\n      0x07\n        /* \"contracts/Web3BetsFO.sol\":2711:2730  ecosystemVig = eVig */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2278:2737  function setVigPercentageShares(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1431:1582  function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1521:1528  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1547:1565  _roleMembers[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1547:1559  _roleMembers */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1547:1565  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1547:1575  _roleMembers[role].at(index) */\n      tag_202\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1569:1574  index */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1547:1568  _roleMembers[role].at */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1547:1575  _roleMembers[role].at(index) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1540:1575  return _roleMembers[role].at(index) */\n      swap4\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1431:1582  function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Web3BetsFO.sol\":1903:2013  function setEcosystemAddress(address holder) public onlySystemAdmin {... */\n    tag_117:\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_206\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1021:1028  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/Web3BetsFO.sol\":1000:1122  require(... */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_207:\n        /* \"contracts/Web3BetsFO.sol\":1981:1997  ecosystemAddress */\n      0x03\n        /* \"contracts/Web3BetsFO.sol\":1981:2006  ecosystemAddress = holder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":1903:2013  function setEcosystemAddress(address holder) public onlySystemAdmin {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1750:1890  function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1830:1837  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1856:1874  _roleMembers[role] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1856:1868  _roleMembers */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1856:1874  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1856:1883  _roleMembers[role].length() */\n      tag_149\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1856:1881  _roleMembers[role].length */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1856:1883  _roleMembers[role].length() */\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":3467:3599  function isEventAdmin(address _account) external view override returns (bool) {... */\n    tag_133:\n        /* \"contracts/Web3BetsFO.sol\":3539:3543  bool */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3562:3592  hasRole(EVENT_ADMIN, _account) */\n      tag_149\n        /* \"contracts/Web3BetsFO.sol\":868:892  keccak256(\"EVENT_ADMIN\") */\n      0xb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0\n        /* \"contracts/Web3BetsFO.sol\":3583:3591  _account */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3562:3569  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":3562:3592  hasRole(EVENT_ADMIN, _account) */\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2743:3321  function shareBetEarnings(uint256 _vigAmount) external override {... */\n    tag_138:\n        /* \"contracts/Web3BetsFO.sol\":2838:2839  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":2825:2835  _vigAmount */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2825:2839  _vigAmount > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":2817:2879  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8857:8859   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2817:2879  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8839:8860   */\n      mstore\n        /* \"#utility.yul\":8896:8898   */\n      0x23\n        /* \"#utility.yul\":8876:8894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8869:8899   */\n      mstore\n        /* \"#utility.yul\":8935:8969   */\n      0x626574206561726e696e6773206d757374206265206772656174657220746861\n        /* \"#utility.yul\":8915:8933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8908:8970   */\n      mstore\n      shl(0xec, 0x06e203)\n        /* \"#utility.yul\":8986:9004   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8979:9012   */\n      mstore\n        /* \"#utility.yul\":9029:9048   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":2817:2879  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n      tag_154\n        /* \"#utility.yul\":8829:9054   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2817:2879  require(_vigAmount > 0, \"bet earnings must be greater than 0\") */\n    tag_216:\n        /* \"contracts/Web3BetsFO.sol\":2889:2909  uint256 holdersShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":2940:2943  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":2926:2936  holdersVig */\n      sload(0x06)\n        /* \"contracts/Web3BetsFO.sol\":2913:2923  _vigAmount */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":2913:2936  _vigAmount * holdersVig */\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"contracts/Web3BetsFO.sol\":2912:2943  (_vigAmount * holdersVig )/ 100 */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contracts/Web3BetsFO.sol\":2889:2943  uint256 holdersShare = (_vigAmount * holdersVig )/ 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":2976:2977  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":2961:2973  holdersShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2961:2977  holdersShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":2953:3019  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7682:7684   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2953:3019  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7664:7685   */\n      mstore\n        /* \"#utility.yul\":7721:7723   */\n      0x25\n        /* \"#utility.yul\":7701:7719   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7694:7724   */\n      mstore\n        /* \"#utility.yul\":7760:7794   */\n      0x686f6c6465727327207368617265206d75737420626520677265617465722074\n        /* \"#utility.yul\":7740:7758   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7733:7795   */\n      mstore\n      shl(0xdc, 0x068616e203)\n        /* \"#utility.yul\":7811:7829   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7804:7839   */\n      mstore\n        /* \"#utility.yul\":7856:7875   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":2953:3019  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n      tag_154\n        /* \"#utility.yul\":7654:7881   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2953:3019  require(holdersShare > 0, \"holders' share must be greater than 0\") */\n    tag_223:\n        /* \"contracts/Web3BetsFO.sol\":3029:3051  uint256 ecosystemShare */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3084:3087  100 */\n      0x64\n        /* \"contracts/Web3BetsFO.sol\":3068:3080  ecosystemVig */\n      sload(0x07)\n        /* \"contracts/Web3BetsFO.sol\":3055:3065  _vigAmount */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":3055:3080  _vigAmount * ecosystemVig */\n      tag_226\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_226:\n        /* \"contracts/Web3BetsFO.sol\":3054:3087  (_vigAmount * ecosystemVig) / 100 */\n      tag_227\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_227:\n        /* \"contracts/Web3BetsFO.sol\":3029:3087  uint256 ecosystemShare = (_vigAmount * ecosystemVig) / 100 */\n      swap1\n      pop\n        /* \"contracts/Web3BetsFO.sol\":3122:3123  0 */\n      0x00\n        /* \"contracts/Web3BetsFO.sol\":3105:3119  ecosystemShare */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":3105:3123  ecosystemShare > 0 */\n      gt\n        /* \"contracts/Web3BetsFO.sol\":3097:3166  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6389:6391   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":3097:3166  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6371:6392   */\n      mstore\n        /* \"#utility.yul\":6428:6430   */\n      0x26\n        /* \"#utility.yul\":6408:6426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6401:6431   */\n      mstore\n        /* \"#utility.yul\":6467:6501   */\n      0x65636f73797374656d207368617265206d757374206265206772656174657220\n        /* \"#utility.yul\":6447:6465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6440:6502   */\n      mstore\n      shl(0xd4, 0x07468616e203)\n        /* \"#utility.yul\":6518:6536   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6511:6547   */\n      mstore\n        /* \"#utility.yul\":6564:6583   */\n      0x84\n      add\n        /* \"contracts/Web3BetsFO.sol\":3097:3166  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n      tag_154\n        /* \"#utility.yul\":6361:6589   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":3097:3166  require(ecosystemShare > 0, \"ecosystem share must be greater than 0\") */\n    tag_228:\n        /* \"contracts/Web3BetsFO.sol\":3209:3225  ecosystemAddress */\n      sload(0x03)\n        /* \"contracts/Web3BetsFO.sol\":3177:3195  _stableCoinWrapper */\n      sload(0x09)\n        /* \"contracts/Web3BetsFO.sol\":3177:3242  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      tag_231\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":3177:3195  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":3209:3225  ecosystemAddress */\n      and\n        /* \"contracts/Web3BetsFO.sol\":3227:3241  ecosystemShare */\n      dup4\n        /* \"contracts/Web3BetsFO.sol\":3177:3208  _stableCoinWrapper.safeTransfer */\n      tag_232\n        /* \"contracts/Web3BetsFO.sol\":3177:3242  _stableCoinWrapper.safeTransfer(ecosystemAddress, ecosystemShare) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/Web3BetsFO.sol\":3285:3299  holdersAddress */\n      sload(0x04)\n        /* \"contracts/Web3BetsFO.sol\":3253:3271  _stableCoinWrapper */\n      sload(0x09)\n        /* \"contracts/Web3BetsFO.sol\":3253:3314  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      tag_163\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Web3BetsFO.sol\":3253:3271  _stableCoinWrapper */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/Web3BetsFO.sol\":3285:3299  holdersAddress */\n      and\n        /* \"contracts/Web3BetsFO.sol\":3301:3313  holdersShare */\n      dup5\n        /* \"contracts/Web3BetsFO.sol\":3253:3284  _stableCoinWrapper.safeTransfer */\n      tag_232\n        /* \"contracts/Web3BetsFO.sol\":3253:3314  _stableCoinWrapper.safeTransfer(holdersAddress, holdersShare) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5381  _revokeRole(role, account) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5367:5371  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5373:5380  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5366  _revokeRole */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5381  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/Web3BetsFO.sol\":2019:2272  function setVigPercentage(uint256 _percentage) public onlySystemAdmin {... */\n    tag_144:\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      tag_240\n      0x00\n      dup1\n      mload\n      0x20\n      data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/Web3BetsFO.sol\":1043:1053  msg.sender */\n      caller\n        /* \"contracts/Web3BetsFO.sol\":1021:1028  hasRole */\n      tag_104\n        /* \"contracts/Web3BetsFO.sol\":1021:1054  hasRole(SYSTEM_ADMIN, msg.sender) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/Web3BetsFO.sol\":1000:1122  require(... */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_241:\n        /* \"contracts/Web3BetsFO.sol\":2134:2136  10 */\n      0x0a\n        /* \"contracts/Web3BetsFO.sol\":2120:2131  _percentage */\n      dup2\n        /* \"contracts/Web3BetsFO.sol\":2120:2136  _percentage < 10 */\n      lt\n        /* \"contracts/Web3BetsFO.sol\":2099:2228  require(... */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6796:6798   */\n      0x20\n        /* \"contracts/Web3BetsFO.sol\":2099:2228  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6778:6799   */\n      mstore\n        /* \"#utility.yul\":6835:6837   */\n      0x42\n        /* \"#utility.yul\":6815:6833   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6808:6838   */\n      mstore\n        /* \"#utility.yul\":6874:6908   */\n      0x5669672070657263656e74616765206d75737420626520657870726573736564\n        /* \"#utility.yul\":6854:6872   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6847:6909   */\n      mstore\n        /* \"#utility.yul\":6945:6979   */\n      0x20696e203020746f2031302070657263656e746167652e204578616d706c653a\n        /* \"#utility.yul\":6925:6943   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6918:6980   */\n      mstore\n      shl(0xf1, 0x101b)\n        /* \"#utility.yul\":6996:7015   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6989:7022   */\n      mstore\n        /* \"#utility.yul\":7039:7058   */\n      0xa4\n      add\n        /* \"contracts/Web3BetsFO.sol\":2099:2228  require(... */\n      tag_154\n        /* \"#utility.yul\":6768:7064   */\n      jump\n        /* \"contracts/Web3BetsFO.sol\":2099:2228  require(... */\n    tag_244:\n        /* \"contracts/Web3BetsFO.sol\":2238:2251  vigPercentage */\n      0x08\n        /* \"contracts/Web3BetsFO.sol\":2238:2265  vigPercentage = _percentage */\n      sstore\n        /* \"contracts/Web3BetsFO.sol\":2019:2272  function setVigPercentage(uint256 _percentage) public onlySystemAdmin {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n      tag_248\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7565:7569  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7571:7578  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7564  hasRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7601  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7627:7631  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7668:7675  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7662:7666  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8028:8178  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8098:8102  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8126:8129  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8146:8169  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8125  _add */\n      tag_253\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8121:8171  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_149\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":1978:2144  function _grantRole(bytes32 role, address account) internal virtual override {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2065:2096  super._grantRole(role, account) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2082:2086  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2088:2095  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2065:2081  super._grantRole */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2065:2096  super._grantRole(role, account) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2124  _roleMembers[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2118  _roleMembers */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2124  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2137  _roleMembers[role].add(account) */\n      tag_163\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2129:2136  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2128  _roleMembers[role].add */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2106:2137  _roleMembers[role].add(account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2233:2404  function _revokeRole(bytes32 role, address account) internal virtual override {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2321:2353  super._revokeRole(role, account) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2339:2343  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2345:2352  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2321:2338  super._revokeRole */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2321:2353  super._revokeRole(role, account) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2363:2381  _roleMembers[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2363:2375  _roleMembers */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2363:2381  _roleMembers[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2363:2397  _roleMembers[role].remove(account) */\n      tag_163\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2389:2396  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2363:2388  _roleMembers[role].remove */\n      tag_270\n        /* \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":2363:2397  _roleMembers[role].remove(account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9286:9442  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9360:9367  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9432  _at(set._inner, index) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9414:9417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9426:9431  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9413  _at */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9410:9432  _at(set._inner, index) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8829:8944  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8892:8899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8918:8937  _length(set._inner) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8926:8929  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4444:4462  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4362:4469  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3661:3693   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3694   */\n      mstore\n        /* \"#utility.yul\":3710:3728   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3703:3737   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3616:3634   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_163\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2113:2517  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2176:2180  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4262  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4250:4269  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n      tag_285\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2245  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2234:2257  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2414:2432  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2404  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2411  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2392:2432  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2446:2457  return true */\n      jump(tag_149)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2192:2511  if (!_contains(set, value)) {... */\n    tag_285:\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2495:2500  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2488:2500  return false */\n      jump(tag_149)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_290\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_292\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_293\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_294\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_293\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_295\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      dup3\n      mstore\n      tag_154\n      swap2\n      0x04\n      add\n      tag_298\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7878:8112  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7983  hasRole(role, account) */\n      tag_300\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7969:7973  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7975:7982  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7968  hasRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7983  hasRole(role, account) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7957:8106  if (hasRole(role, account)) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8031:8036  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8011  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8028  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8036  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8011  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8031:8036  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7878:8112  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8346:8502  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8419:8423  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8495  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8453  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8470:8493  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8449  _remove */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8442:8495  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4811:4929  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4878:4885  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4907  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4915  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4916:4921  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:4922  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_307\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_307:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4897:4922  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4811:4929  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_312\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8446:8448   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8428:8449   */\n      mstore\n        /* \"#utility.yul\":8485:8487   */\n      0x2a\n        /* \"#utility.yul\":8465:8483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8458:8488   */\n      mstore\n        /* \"#utility.yul\":8524:8558   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8504:8522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8497:8559   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":8575:8593   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8568:8608   */\n      mstore\n        /* \"#utility.yul\":8625:8644   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_154\n        /* \"#utility.yul\":8418:8650   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1727:1740  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1771  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1788:1794  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1785  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_220\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_322\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1797:1798  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_197\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1774:1799  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_323\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_323:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_324\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_324:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1799  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1815  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1817  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1818  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_325\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_325:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1840  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1841:1842  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1843  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_326\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_326:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1864:1873  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1880:1886  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1877  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_220\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_331\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1889:1890  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_197\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1864:1890  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1896:1897  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1892:1893  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1892:1897  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_328\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1943:1948  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1951:1954  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1943:1954  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1930:1955  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_332\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_332:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1924  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1925:1926  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1927  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_333\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_333:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1955  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1979:1980  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1969:1980  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1899:1902  --i */\n      tag_334\n      dup2\n      tag_335\n      jump\t// in\n    tag_334:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_327)\n    tag_328:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2008:2018  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4712:4714   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4694:4715   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4731:4749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4724:4754   */\n      mstore\n        /* \"#utility.yul\":4790:4824   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":4770:4788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4763:4825   */\n      mstore\n        /* \"#utility.yul\":4842:4860   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_154\n        /* \"#utility.yul\":4684:4866   */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2685:4073  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2751:2755  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2900  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2888:2907  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2922:2937  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3291:3312  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3328:3329  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3325  valueIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3315:3329  valueIndex - 1 */\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3381  set._values.length */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3291:3329  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3343:3360  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_343\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3385  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3363:3385  set._values.length - 1 */\n      tag_342\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3343:3385  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3417:3430  toDeleteIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3404:3413  lastIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3404:3430  lastIndex != toDeleteIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3450:3467  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3473  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3481  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3482:3491  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3470:3492  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_345\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_345:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3450:3492  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3621:3630  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3595  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3603  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3604:3617  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3618  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_347\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_347:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3592:3630  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3716  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3727  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3704:3740  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3400:3798  if (lastIndex != toDeleteIndex) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3879  set */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3876:3893  set._values.pop() */\n      dup1\n      tag_349\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_349:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3971  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3980  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3981:3986  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3968:3987  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3961:3987  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4009:4013  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4002:4013  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_149)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2918:4067  if (valueIndex != 0) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4051:4056  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4044:4056  return false */\n      swap2\n      pop\n      pop\n      jump(tag_149)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_353\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_354\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5964:5985   */\n      mstore\n        /* \"#utility.yul\":6021:6023   */\n      0x26\n        /* \"#utility.yul\":6001:6019   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5994:6024   */\n      mstore\n        /* \"#utility.yul\":6060:6094   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":6040:6058   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6033:6095   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":6111:6129   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6104:6140   */\n      mstore\n        /* \"#utility.yul\":6157:6176   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_154\n        /* \"#utility.yul\":5954:6182   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8088:8090   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8070:8091   */\n      mstore\n        /* \"#utility.yul\":8127:8129   */\n      0x1d\n        /* \"#utility.yul\":8107:8125   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8100:8130   */\n      mstore\n        /* \"#utility.yul\":8166:8197   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8146:8164   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8139:8198   */\n      mstore\n        /* \"#utility.yul\":8215:8233   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_154\n        /* \"#utility.yul\":8060:8239   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_364\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_368\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_367)\n    tag_368:\n      0x60\n      swap2\n      pop\n    tag_367:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_369\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_370\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_202)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8069:8214  {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_379:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_381:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_54:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_383:\n        /* \"#utility.yul\":353:382   */\n      tag_202\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_379\n      jump\t// in\n        /* \"#utility.yul\":393:690   */\n    tag_315:\n        /* \"#utility.yul\":460:466   */\n      0x00\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":501:510   */\n      dup3\n        /* \"#utility.yul\":492:499   */\n      dup5\n        /* \"#utility.yul\":488:511   */\n      sub\n        /* \"#utility.yul\":484:516   */\n      slt\n        /* \"#utility.yul\":481:483   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":534:540   */\n      dup1\n        /* \"#utility.yul\":526:532   */\n      dup2\n        /* \"#utility.yul\":519:541   */\n      revert\n        /* \"#utility.yul\":481:483   */\n    tag_386:\n        /* \"#utility.yul\":571:580   */\n      dup2\n        /* \"#utility.yul\":565:581   */\n      mload\n        /* \"#utility.yul\":624:629   */\n      dup1\n        /* \"#utility.yul\":617:630   */\n      iszero\n        /* \"#utility.yul\":610:631   */\n      iszero\n        /* \"#utility.yul\":603:608   */\n      dup2\n        /* \"#utility.yul\":600:632   */\n      eq\n        /* \"#utility.yul\":590:592   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":651:657   */\n      dup2\n        /* \"#utility.yul\":643:649   */\n      dup3\n        /* \"#utility.yul\":636:658   */\n      revert\n        /* \"#utility.yul\":695:885   */\n    tag_58:\n        /* \"#utility.yul\":754:760   */\n      0x00\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":795:804   */\n      dup3\n        /* \"#utility.yul\":786:793   */\n      dup5\n        /* \"#utility.yul\":782:805   */\n      sub\n        /* \"#utility.yul\":778:810   */\n      slt\n        /* \"#utility.yul\":775:777   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":828:834   */\n      dup1\n        /* \"#utility.yul\":820:826   */\n      dup2\n        /* \"#utility.yul\":813:835   */\n      revert\n        /* \"#utility.yul\":775:777   */\n    tag_389:\n      pop\n        /* \"#utility.yul\":856:879   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":765:885   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:1154   */\n    tag_64:\n        /* \"#utility.yul\":958:964   */\n      0x00\n        /* \"#utility.yul\":966:972   */\n      dup1\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1007:1016   */\n      dup4\n        /* \"#utility.yul\":998:1005   */\n      dup6\n        /* \"#utility.yul\":994:1017   */\n      sub\n        /* \"#utility.yul\":990:1022   */\n      slt\n        /* \"#utility.yul\":987:989   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1040:1046   */\n      dup1\n        /* \"#utility.yul\":1032:1038   */\n      dup2\n        /* \"#utility.yul\":1025:1047   */\n      revert\n        /* \"#utility.yul\":987:989   */\n    tag_391:\n        /* \"#utility.yul\":1081:1090   */\n      dup3\n        /* \"#utility.yul\":1068:1091   */\n      calldataload\n        /* \"#utility.yul\":1058:1091   */\n      swap2\n      pop\n        /* \"#utility.yul\":1110:1148   */\n      tag_392\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1133:1142   */\n      dup5\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"#utility.yul\":1110:1148   */\n      tag_379\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1100:1148   */\n      swap1\n      pop\n        /* \"#utility.yul\":977:1154   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1159:1417   */\n    tag_99:\n        /* \"#utility.yul\":1227:1233   */\n      0x00\n        /* \"#utility.yul\":1235:1241   */\n      dup1\n        /* \"#utility.yul\":1288:1290   */\n      0x40\n        /* \"#utility.yul\":1276:1285   */\n      dup4\n        /* \"#utility.yul\":1267:1274   */\n      dup6\n        /* \"#utility.yul\":1263:1286   */\n      sub\n        /* \"#utility.yul\":1259:1291   */\n      slt\n        /* \"#utility.yul\":1256:1258   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":1309:1315   */\n      dup2\n        /* \"#utility.yul\":1301:1307   */\n      dup3\n        /* \"#utility.yul\":1294:1316   */\n      revert\n        /* \"#utility.yul\":1256:1258   */\n    tag_394:\n      pop\n      pop\n        /* \"#utility.yul\":1337:1360   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1407:1409   */\n      0x20\n        /* \"#utility.yul\":1392:1410   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1379:1411   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1246:1417   */\n      jump\t// out\n        /* \"#utility.yul\":1422:1728   */\n    tag_41:\n        /* \"#utility.yul\":1480:1486   */\n      0x00\n        /* \"#utility.yul\":1533:1535   */\n      0x20\n        /* \"#utility.yul\":1521:1530   */\n      dup3\n        /* \"#utility.yul\":1512:1519   */\n      dup5\n        /* \"#utility.yul\":1508:1531   */\n      sub\n        /* \"#utility.yul\":1504:1536   */\n      slt\n        /* \"#utility.yul\":1501:1503   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":1554:1560   */\n      dup1\n        /* \"#utility.yul\":1546:1552   */\n      dup2\n        /* \"#utility.yul\":1539:1561   */\n      revert\n        /* \"#utility.yul\":1501:1503   */\n    tag_396:\n        /* \"#utility.yul\":1585:1608   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1637:1669   */\n      dup2\n      and\n        /* \"#utility.yul\":1627:1670   */\n      dup2\n      eq\n        /* \"#utility.yul\":1617:1619   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1689:1695   */\n      dup2\n        /* \"#utility.yul\":1681:1687   */\n      dup3\n        /* \"#utility.yul\":1674:1696   */\n      revert\n        /* \"#utility.yul\":2191:2465   */\n    tag_365:\n        /* \"#utility.yul\":2320:2323   */\n      0x00\n        /* \"#utility.yul\":2358:2364   */\n      dup3\n        /* \"#utility.yul\":2352:2365   */\n      mload\n        /* \"#utility.yul\":2374:2427   */\n      tag_403\n        /* \"#utility.yul\":2420:2426   */\n      dup2\n        /* \"#utility.yul\":2415:2418   */\n      dup5\n        /* \"#utility.yul\":2408:2412   */\n      0x20\n        /* \"#utility.yul\":2400:2406   */\n      dup8\n        /* \"#utility.yul\":2396:2413   */\n      add\n        /* \"#utility.yul\":2374:2427   */\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2443:2459   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2328:2465   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2470:3256   */\n    tag_296:\n        /* \"#utility.yul\":2881:2906   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":2876:2879   */\n      dup2\n        /* \"#utility.yul\":2869:2907   */\n      mstore\n        /* \"#utility.yul\":2851:2854   */\n      0x00\n        /* \"#utility.yul\":2936:2942   */\n      dup4\n        /* \"#utility.yul\":2930:2943   */\n      mload\n        /* \"#utility.yul\":2952:3014   */\n      tag_406\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":3002:3004   */\n      0x17\n        /* \"#utility.yul\":2997:3000   */\n      dup6\n        /* \"#utility.yul\":2993:3005   */\n      add\n        /* \"#utility.yul\":2986:2990   */\n      0x20\n        /* \"#utility.yul\":2978:2984   */\n      dup9\n        /* \"#utility.yul\":2974:2991   */\n      add\n        /* \"#utility.yul\":2952:3014   */\n      tag_404\n      jump\t// in\n    tag_406:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":3073:3075   */\n      0x17\n        /* \"#utility.yul\":3033:3049   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":3065:3076   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3058:3098   */\n      mstore\n        /* \"#utility.yul\":3123:3136   */\n      dup4\n      mload\n        /* \"#utility.yul\":3145:3208   */\n      tag_407\n        /* \"#utility.yul\":3123:3136   */\n      dup2\n        /* \"#utility.yul\":3194:3196   */\n      0x28\n        /* \"#utility.yul\":3186:3197   */\n      dup5\n      add\n        /* \"#utility.yul\":3179:3183   */\n      0x20\n        /* \"#utility.yul\":3167:3184   */\n      dup9\n      add\n        /* \"#utility.yul\":3145:3208   */\n      tag_404\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3228:3245   */\n      add\n        /* \"#utility.yul\":3247:3249   */\n      0x28\n        /* \"#utility.yul\":3224:3250   */\n      add\n      swap5\n        /* \"#utility.yul\":2859:3256   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4122:4505   */\n    tag_298:\n        /* \"#utility.yul\":4271:4273   */\n      0x20\n        /* \"#utility.yul\":4260:4269   */\n      dup2\n        /* \"#utility.yul\":4253:4274   */\n      mstore\n        /* \"#utility.yul\":4234:4238   */\n      0x00\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4297:4310   */\n      mload\n        /* \"#utility.yul\":4346:4352   */\n      dup1\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4330:4339   */\n      dup5\n        /* \"#utility.yul\":4326:4344   */\n      add\n        /* \"#utility.yul\":4319:4353   */\n      mstore\n        /* \"#utility.yul\":4362:4428   */\n      tag_413\n        /* \"#utility.yul\":4421:4427   */\n      dup2\n        /* \"#utility.yul\":4416:4418   */\n      0x40\n        /* \"#utility.yul\":4405:4414   */\n      dup6\n        /* \"#utility.yul\":4401:4419   */\n      add\n        /* \"#utility.yul\":4396:4398   */\n      0x20\n        /* \"#utility.yul\":4388:4394   */\n      dup8\n        /* \"#utility.yul\":4384:4399   */\n      add\n        /* \"#utility.yul\":4362:4428   */\n      tag_404\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4489:4491   */\n      0x1f\n        /* \"#utility.yul\":4468:4483   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4464:4493   */\n      and\n        /* \"#utility.yul\":4449:4494   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4496:4498   */\n      0x40\n        /* \"#utility.yul\":4445:4499   */\n      add\n      swap3\n        /* \"#utility.yul\":4243:4505   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7475   */\n    tag_155:\n        /* \"#utility.yul\":7271:7273   */\n      0x20\n        /* \"#utility.yul\":7253:7274   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7310:7312   */\n      0x2a\n        /* \"#utility.yul\":7290:7308   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7283:7313   */\n      mstore\n        /* \"#utility.yul\":7349:7383   */\n      0x596f752068617665206e6f2070726976696c65676520746f2072756e20746869\n        /* \"#utility.yul\":7344:7346   */\n      0x40\n        /* \"#utility.yul\":7329:7347   */\n      dup3\n      add\n        /* \"#utility.yul\":7322:7384   */\n      mstore\n      shl(0xb1, 0x3990333ab731ba34b7b7)\n        /* \"#utility.yul\":7415:7417   */\n      0x60\n        /* \"#utility.yul\":7400:7418   */\n      dup3\n      add\n        /* \"#utility.yul\":7393:7433   */\n      mstore\n        /* \"#utility.yul\":7465:7468   */\n      0x80\n        /* \"#utility.yul\":7450:7469   */\n      add\n      swap1\n        /* \"#utility.yul\":7243:7475   */\n      jump\t// out\n        /* \"#utility.yul\":9657:9785   */\n    tag_197:\n        /* \"#utility.yul\":9697:9700   */\n      0x00\n        /* \"#utility.yul\":9728:9729   */\n      dup3\n        /* \"#utility.yul\":9724:9730   */\n      not\n        /* \"#utility.yul\":9721:9722   */\n      dup3\n        /* \"#utility.yul\":9718:9731   */\n      gt\n        /* \"#utility.yul\":9715:9717   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9734:9752   */\n      tag_429\n      tag_430\n      jump\t// in\n    tag_429:\n      pop\n        /* \"#utility.yul\":9770:9779   */\n      add\n      swap1\n        /* \"#utility.yul\":9705:9785   */\n      jump\t// out\n        /* \"#utility.yul\":9790:10007   */\n    tag_222:\n        /* \"#utility.yul\":9830:9831   */\n      0x00\n        /* \"#utility.yul\":9856:9857   */\n      dup3\n        /* \"#utility.yul\":9846:9848   */\n      tag_432\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":9881:9912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9935:9939   */\n      0x12\n        /* \"#utility.yul\":9932:9933   */\n      0x04\n        /* \"#utility.yul\":9925:9940   */\n      mstore\n        /* \"#utility.yul\":9963:9967   */\n      0x24\n        /* \"#utility.yul\":9888:9889   */\n      dup2\n        /* \"#utility.yul\":9953:9968   */\n      revert\n        /* \"#utility.yul\":9846:9848   */\n    tag_432:\n      pop\n        /* \"#utility.yul\":9992:10001   */\n      div\n      swap1\n        /* \"#utility.yul\":9836:10007   */\n      jump\t// out\n        /* \"#utility.yul\":10012:10180   */\n    tag_220:\n        /* \"#utility.yul\":10052:10059   */\n      0x00\n        /* \"#utility.yul\":10118:10119   */\n      dup2\n        /* \"#utility.yul\":10114:10115   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      not\n        /* \"#utility.yul\":10106:10120   */\n      div\n        /* \"#utility.yul\":10103:10104   */\n      dup4\n        /* \"#utility.yul\":10100:10121   */\n      gt\n        /* \"#utility.yul\":10095:10096   */\n      dup3\n        /* \"#utility.yul\":10088:10097   */\n      iszero\n        /* \"#utility.yul\":10081:10098   */\n      iszero\n        /* \"#utility.yul\":10077:10122   */\n      and\n        /* \"#utility.yul\":10074:10076   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":10125:10143   */\n      tag_435\n      tag_430\n      jump\t// in\n    tag_435:\n      pop\n        /* \"#utility.yul\":10165:10174   */\n      mul\n      swap1\n        /* \"#utility.yul\":10064:10180   */\n      jump\t// out\n        /* \"#utility.yul\":10185:10310   */\n    tag_342:\n        /* \"#utility.yul\":10225:10229   */\n      0x00\n        /* \"#utility.yul\":10253:10254   */\n      dup3\n        /* \"#utility.yul\":10250:10251   */\n      dup3\n        /* \"#utility.yul\":10247:10255   */\n      lt\n        /* \"#utility.yul\":10244:10246   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10258:10276   */\n      tag_438\n      tag_430\n      jump\t// in\n    tag_438:\n      pop\n        /* \"#utility.yul\":10295:10304   */\n      sub\n      swap1\n        /* \"#utility.yul\":10234:10310   */\n      jump\t// out\n        /* \"#utility.yul\":10315:10573   */\n    tag_404:\n        /* \"#utility.yul\":10387:10388   */\n      0x00\n        /* \"#utility.yul\":10397:10510   */\n    tag_440:\n        /* \"#utility.yul\":10411:10417   */\n      dup4\n        /* \"#utility.yul\":10408:10409   */\n      dup2\n        /* \"#utility.yul\":10405:10418   */\n      lt\n        /* \"#utility.yul\":10397:10510   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":10487:10498   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10481:10499   */\n      mload\n        /* \"#utility.yul\":10468:10479   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10461:10500   */\n      mstore\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10426:10436   */\n      add\n        /* \"#utility.yul\":10397:10510   */\n      jump(tag_440)\n    tag_442:\n        /* \"#utility.yul\":10528:10534   */\n      dup4\n        /* \"#utility.yul\":10525:10526   */\n      dup2\n        /* \"#utility.yul\":10522:10535   */\n      gt\n        /* \"#utility.yul\":10519:10521   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":10563:10564   */\n      0x00\n        /* \"#utility.yul\":10554:10560   */\n      dup5\n        /* \"#utility.yul\":10549:10552   */\n      dup5\n        /* \"#utility.yul\":10545:10561   */\n      add\n        /* \"#utility.yul\":10538:10565   */\n      mstore\n        /* \"#utility.yul\":10519:10521   */\n    tag_443:\n      pop\n        /* \"#utility.yul\":10368:10573   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10578:10714   */\n    tag_335:\n        /* \"#utility.yul\":10617:10620   */\n      0x00\n        /* \"#utility.yul\":10645:10650   */\n      dup2\n        /* \"#utility.yul\":10635:10637   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":10654:10672   */\n      tag_446\n      tag_430\n      jump\t// in\n    tag_446:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":10690:10708   */\n      add\n      swap1\n        /* \"#utility.yul\":10625:10714   */\n      jump\t// out\n        /* \"#utility.yul\":10719:10846   */\n    tag_430:\n        /* \"#utility.yul\":10780:10790   */\n      0x4e487b71\n        /* \"#utility.yul\":10775:10778   */\n      0xe0\n        /* \"#utility.yul\":10771:10791   */\n      shl\n        /* \"#utility.yul\":10768:10769   */\n      0x00\n        /* \"#utility.yul\":10761:10792   */\n      mstore\n        /* \"#utility.yul\":10811:10815   */\n      0x11\n        /* \"#utility.yul\":10808:10809   */\n      0x04\n        /* \"#utility.yul\":10801:10816   */\n      mstore\n        /* \"#utility.yul\":10835:10839   */\n      0x24\n        /* \"#utility.yul\":10832:10833   */\n      0x00\n        /* \"#utility.yul\":10825:10840   */\n      revert\n    stop\n    data_4917d2ec71fc5b9d888a6caf3db5fe22f73ae7b547e1189edf853bedc86a586f 74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639\n\n    auxdata: 0xa264697066735822122013f8badcb935180116ff3569d7196438b3b0f136bcbffd64d92c144f9e3bc1a064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260326006819055600755600a600855600554600980546001600160a01b0319166001600160a01b039092169190911790553480156200004257600080fd5b5062000050600033620000fc565b6200006b600080516020620018d383398151915233620000fc565b62000086600080516020620018b383398151915233620000fc565b620000b0600080516020620018b3833981519152600080516020620018d38339815191526200010c565b620000cc600080516020620018f38339815191526000620000fc565b620000f6600080516020620018f3833981519152600080516020620018d38339815191526200010c565b620002ac565b62000108828262000157565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6200016e82826200019a60201b62000aa81760201c565b60008281526001602090815260409091206200019591839062000b2c6200023a821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000108576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001f63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000251836001600160a01b0384166200025a565b90505b92915050565b6000818152600183016020526040812054620002a35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000254565b50600062000254565b6115f780620002bc6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063852757ad11610104578063b501ec97116100a2578063cb14662211610071578063cb146622146103ea578063cbf89c63146103fd578063d547741f14610410578063d6c1ca261461042357600080fd5b8063b501ec9714610376578063c45a01551461039d578063c8b0cf68146103b0578063ca15c873146103d757600080fd5b80639376b94c116100de5780639376b94c1461033f578063992642e514610348578063a217fddf1461035b578063a8e01b281461036357600080fd5b8063852757ad146103045780639010d07c1461031957806391d148541461032c57600080fd5b8063332daccf11610171578063486d1e501161014b578063486d1e50146102c25780634fb43199146102cb5780635bb47808146102de57806364886880146102f157600080fd5b8063332daccf1461029357806336568abe146102a6578063387440e6146102b957600080fd5b806323af4e17116101ad57806323af4e171461023a578063248a9ca31461024f5780632f2ff15d14610280578063327372e41461023a57600080fd5b806301ffc9a7146101d457806306a5cb3a146101fc5780630da4ee5014610227575b600080fd5b6101e76101e23660046113a0565b610436565b60405190151581526020015b60405180910390f35b60035461020f906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b60045461020f906001600160a01b031681565b61024d610248366004611302565b610461565b005b61027261025d36600461133c565b60009081526020819052604090206001015490565b6040519081526020016101f3565b61024d61028e366004611354565b6104c0565b6101e76102a1366004611302565b6104ea565b61024d6102b4366004611354565b610516565b61027260085481565b61027260065481565b6101e76102d9366004611302565b610594565b61024d6102ec366004611302565b6105ae565b61024d6102ff36600461137f565b610604565b6102726000805160206115a283398151915281565b61020f61032736600461137f565b610759565b6101e761033a366004611354565b610778565b61027260075481565b60055461020f906001600160a01b031681565b610272600081565b61024d610371366004611302565b6107a1565b6102727fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb081565b60025461020f906001600160a01b031681565b6102727fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c81565b6102726103e536600461133c565b6107f7565b6101e76103f8366004611302565b61080e565b61024d61040b36600461133c565b61083a565b61024d61041e366004611354565b6109c9565b61024d61043136600461133c565b6109ee565b60006001600160e01b03198216635a05180f60e01b148061045b575061045b82610b41565b92915050565b6104796000805160206115a283398151915233610778565b61049e5760405162461bcd60e51b81526004016104959061148c565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152602081905260409020600101546104db81610b76565b6104e58383610b83565b505050565b600061045b7fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c83610778565b6001600160a01b03811633146105865760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610495565b6105908282610ba5565b5050565b600061045b6000805160206115a283398151915283610778565b6105c66000805160206115a283398151915233610778565b6105e25760405162461bcd60e51b81526004016104959061148c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061c6000805160206115a283398151915233610778565b6106385760405162461bcd60e51b81526004016104959061148c565b6064821115801561064a575060648111155b6106cf5760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a401610495565b6106d981836114d6565b60641461074e5760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f20313030000000000000006064820152608401610495565b600691909155600755565b60008281526001602052604081206107719083610bc7565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6107b96000805160206115a283398151915233610778565b6107d55760405162461bcd60e51b81526004016104959061148c565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600081815260016020526040812061045b90610bd3565b600061045b7fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb083610778565b600081116108965760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610495565b60006064600654836108a8919061150e565b6108b291906114ee565b9050600081116109125760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610495565b6000606460075484610924919061150e565b61092e91906114ee565b90506000811161098f5760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610495565b6003546009546109ac916001600160a01b03918216911683610bdd565b6004546009546104e5916001600160a01b03918216911684610bdd565b6000828152602081905260409020600101546109e481610b76565b6104e58383610ba5565b610a066000805160206115a283398151915233610778565b610a225760405162461bcd60e51b81526004016104959061148c565b600a8110610aa35760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a401610495565b600855565b610ab28282610778565b610590576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610ae83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610771836001600160a01b038416610c2f565b60006001600160e01b03198216637965db0b60e01b148061045b57506301ffc9a760e01b6001600160e01b031983161461045b565b610b808133610c7e565b50565b610b8d8282610aa8565b60008281526001602052604090206104e59082610b2c565b610baf8282610ce2565b60008281526001602052604090206104e59082610d47565b60006107718383610d5c565b600061045b825490565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104e5908490610d94565b6000818152600183016020526040812054610c765750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561045b565b50600061045b565b610c888282610778565b61059057610ca0816001600160a01b03166014610e66565b610cab836020610e66565b604051602001610cbc9291906113e4565b60408051601f198184030181529082905262461bcd60e51b825261049591600401611459565b610cec8282610778565b15610590576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610771836001600160a01b038416611048565b6000826000018281548110610d8157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000610de9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111659092919063ffffffff16565b8051909150156104e55780806020019051810190610e07919061131c565b6104e55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610495565b60606000610e7583600261150e565b610e809060026114d6565b67ffffffffffffffff811115610ea657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ed0576020820181803683370190505b509050600360fc1b81600081518110610ef957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610f3657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610f5a84600261150e565b610f659060016114d6565b90505b6001811115610ff9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610fa757634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610fcb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ff281611574565b9050610f68565b5083156107715760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610495565b6000818152600183016020526040812054801561115b57600061106c60018361152d565b85549091506000906110809060019061152d565b90508181146111015760008660000182815481106110ae57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106110df57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061112057634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061045b565b600091505061045b565b6060611174848460008561117c565b949350505050565b6060824710156111dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610495565b6001600160a01b0385163b6112345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610495565b600080866001600160a01b0316858760405161125091906113c8565b60006040518083038185875af1925050503d806000811461128d576040519150601f19603f3d011682016040523d82523d6000602084013e611292565b606091505b50915091506112a28282866112ad565b979650505050505050565b606083156112bc575081610771565b8251156112cc5782518084602001fd5b8160405162461bcd60e51b81526004016104959190611459565b80356001600160a01b03811681146112fd57600080fd5b919050565b600060208284031215611313578081fd5b610771826112e6565b60006020828403121561132d578081fd5b81518015158114610771578182fd5b60006020828403121561134d578081fd5b5035919050565b60008060408385031215611366578081fd5b82359150611376602084016112e6565b90509250929050565b60008060408385031215611391578182fd5b50508035926020909101359150565b6000602082840312156113b1578081fd5b81356001600160e01b031981168114610771578182fd5b600082516113da818460208701611544565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161141c816017850160208801611544565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161144d816028840160208801611544565b01602801949350505050565b6020815260008251806020840152611478816040850160208701611544565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b600082198211156114e9576114e961158b565b500190565b60008261150957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156115285761152861158b565b500290565b60008282101561153f5761153f61158b565b500390565b60005b8381101561155f578181015183820152602001611547565b8381111561156e576000848401525b50505050565b6000816115835761158361158b565b506000190190565b634e487b7160e01b600052601160045260246000fdfe74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639a264697066735822122013f8badcb935180116ff3569d7196438b3b0f136bcbffd64d92c144f9e3bc1a064736f6c63430008040033b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb074966176c367549066de941fecec46be0069530384452daa9c31d709c544e639c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 SSTORE PUSH1 0xA PUSH1 0x8 SSTORE PUSH1 0x5 SLOAD PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x50 PUSH1 0x0 CALLER PUSH3 0xFC JUMP JUMPDEST PUSH3 0x6B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18D3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH3 0xFC JUMP JUMPDEST PUSH3 0x86 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18B3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH3 0xFC JUMP JUMPDEST PUSH3 0xB0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18B3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18D3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0x10C JUMP JUMPDEST PUSH3 0xCC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18F3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 PUSH3 0xFC JUMP JUMPDEST PUSH3 0xF6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18F3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x18D3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH3 0x10C JUMP JUMPDEST PUSH3 0x2AC JUMP JUMPDEST PUSH3 0x108 DUP3 DUP3 PUSH3 0x157 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP7 SWAP2 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP2 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH3 0x16E DUP3 DUP3 PUSH3 0x19A PUSH1 0x20 SHL PUSH3 0xAA8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x195 SWAP2 DUP4 SWAP1 PUSH3 0xB2C PUSH3 0x23A DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x108 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x1F6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x251 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x25A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x2A3 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x254 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x254 JUMP JUMPDEST PUSH2 0x15F7 DUP1 PUSH3 0x2BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x852757AD GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB501EC97 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCB146622 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xCBF89C63 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB501EC97 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xC8B0CF68 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9376B94C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x852757AD EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x332DACCF GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x486D1E50 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x5BB47808 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x332DACCF EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x387440E6 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x327372E4 EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x272 PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH2 0x24D PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH2 0x24D PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45B JUMPI POP PUSH2 0x45B DUP3 PUSH2 0xB41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x479 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4DB DUP2 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x4E5 DUP4 DUP4 PUSH2 0xB83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH2 0x590 DUP3 DUP3 PUSH2 0xBA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x5C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x61C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x495 JUMP JUMPDEST PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x771 SWAP1 DUP4 PUSH2 0xBC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7B9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x45B SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP5 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x9 SLOAD PUSH2 0x9AC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SLOAD PUSH2 0x4E5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9E4 DUP2 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x4E5 DUP4 DUP4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xA06 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xAB2 DUP3 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xAE8 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x45B JUMP JUMPDEST PUSH2 0xB80 DUP2 CALLER PUSH2 0xC7E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB8D DUP3 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4E5 SWAP1 DUP3 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xBAF DUP3 DUP3 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4E5 SWAP1 DUP3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP4 DUP4 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x4E5 SWAP1 DUP5 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xC76 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x45B JUMP JUMPDEST PUSH2 0xC88 DUP3 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH2 0xCA0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xCAB DUP4 PUSH1 0x20 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCBC SWAP3 SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x495 SWAP2 PUSH1 0x4 ADD PUSH2 0x1459 JUMP JUMPDEST PUSH2 0xCEC DUP3 DUP3 PUSH2 0x778 JUMP JUMPDEST ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1165 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x4E5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE75 DUP4 PUSH1 0x2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xE80 SWAP1 PUSH1 0x2 PUSH2 0x14D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xED0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEF9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xF5A DUP5 PUSH1 0x2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xF65 SWAP1 PUSH1 0x1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xFA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xFF2 DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH2 0xF68 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 PUSH2 0x106C PUSH1 0x1 DUP4 PUSH2 0x152D JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1080 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x152D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1101 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1120 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1174 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x117C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12A2 DUP3 DUP3 DUP7 PUSH2 0x12AD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12BC JUMPI POP DUP2 PUSH2 0x771 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x12CC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1313 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x771 DUP3 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x771 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1366 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1376 PUSH1 0x20 DUP5 ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1391 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x771 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13DA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x141C DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x144D DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1478 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14E9 JUMPI PUSH2 0x14E9 PUSH2 0x158B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1509 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1528 PUSH2 0x158B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153F PUSH2 0x158B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x155F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1547 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x156E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x158B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH21 0x966176C367549066DE941FECEC46BE006953038445 0x2D 0xAA SWAP13 BALANCE 0xD7 MULMOD 0xC5 DIFFICULTY 0xE6 CODECOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xF8 0xBA 0xDC 0xB9 CALLDATALOAD XOR ADD AND SELFDESTRUCT CALLDATALOAD PUSH10 0xD7196438B3B0F136BCBF REVERT PUSH5 0xD92C144F9E EXTCODESIZE 0xC1 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER 0xB5 0xB4 PUSH23 0x44C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23 0xBB 0xB1 PUSH9 0xC5DEB074966176C367 SLOAD SWAP1 PUSH7 0xDE941FECEC46BE STOP PUSH10 0x530384452DAA9C31D709 0xC5 DIFFICULTY 0xE6 CODECOPY 0xC8 DUP15 DELEGATECALL EQ 0xE1 0xD5 0xAD SAR GASLIMIT DUP16 0xDF LOG4 0x2B POP DUP8 CALLDATACOPY OR PUSH21 0x70135860C2A2CE45583CE28F207C00000000000000 ",
							"sourceMap": "289:3444:15:-:0;;;596:2;559:39;;;;604:41;;691:2;651:42;;742:10;;699:54;;;-1:-1:-1;;;;;;699:54:15;-1:-1:-1;;;;;742:10:15;;;699:54;;;;;;1146:425;;;;;;;;;-1:-1:-1;1290:42:15;2072:4:0;1321:10:15;1290;:42::i;:::-;1342:36;-1:-1:-1;;;;;;;;;;;1367:10:15;1342;:36::i;:::-;1388:35;-1:-1:-1;;;;;;;;;;;1412:10:15;1388;:35::i;:::-;1433:40;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1433:13:15;:40::i;:::-;1483:33;-1:-1:-1;;;;;;;;;;;1513:1:15;1483:10;:33::i;:::-;1526:38;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;1526:13:15;:38::i;:::-;289:3444;;6824:110:0;6902:25;6913:4;6919:7;6902:10;:25::i;:::-;6824:110;;:::o;7059:247::-;7142:25;4491:12;;;;;;;;;;;:22;;;;7198:34;;;;7247:52;;4491:22;;7198:34;;4491:22;;:12;;7247:52;;7142:25;7247:52;7059:247;;;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7474:233:0:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:8;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;8028:150:12:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:12;;8121:4;:50::i;:::-;8114:57;;8028:150;;;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:12;2488:12;;289:3444:15;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10848:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:19"
															},
															"nodeType": "YulIf",
															"src": "111:2:19"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:19",
														"type": ""
													}
												],
												"src": "14:173:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:19"
															},
															"nodeType": "YulIf",
															"src": "272:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:19",
														"type": ""
													}
												],
												"src": "192:196:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "471:219:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "526:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "534:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "492:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "488:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "513:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "484:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:32:19"
															},
															"nodeType": "YulIf",
															"src": "481:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "565:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "556:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "634:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "643:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "651:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "636:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "636:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "636:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "603:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "624:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "617:6:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "617:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "610:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "610:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "600:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:40:19"
															},
															"nodeType": "YulIf",
															"src": "590:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "669:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "679:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "669:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "437:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "448:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "460:6:19",
														"type": ""
													}
												],
												"src": "393:297:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:120:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "820:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "828:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "786:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "807:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:32:19"
															},
															"nodeType": "YulIf",
															"src": "775:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "856:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "731:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "742:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "754:6:19",
														"type": ""
													}
												],
												"src": "695:190:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:177:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1032:6:19"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1040:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "998:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1007:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "994:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "994:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "990:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "990:32:19"
															},
															"nodeType": "YulIf",
															"src": "987:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1058:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1100:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1110:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:38:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "935:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "946:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "958:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "966:6:19",
														"type": ""
													}
												],
												"src": "890:264:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:171:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1292:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1301:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1309:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1294:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1294:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1294:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1267:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1276:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:32:19"
															},
															"nodeType": "YulIf",
															"src": "1256:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1327:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1337:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1327:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1369:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1407:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1379:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1369:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1204:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1215:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1227:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1235:6:19",
														"type": ""
													}
												],
												"src": "1159:258:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:237:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1537:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1546:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1554:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1539:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1539:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1512:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1508:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1508:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1504:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:32:19"
															},
															"nodeType": "YulIf",
															"src": "1501:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1572:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1576:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1672:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1681:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1689:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1674:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1674:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1674:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1630:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1641:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1652:3:19",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1657:10:19",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1648:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1648:20:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1637:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1637:32:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1627:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1627:43:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:51:19"
															},
															"nodeType": "YulIf",
															"src": "1617:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1717:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1457:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1468:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1480:6:19",
														"type": ""
													}
												],
												"src": "1422:306:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1803:120:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1849:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1858:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1866:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1851:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1851:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1851:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1824:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1833:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1820:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:32:19"
															},
															"nodeType": "YulIf",
															"src": "1813:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1884:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1907:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1894:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1884:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1769:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1780:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1792:6:19",
														"type": ""
													}
												],
												"src": "1733:190:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:171:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:26:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2070:6:19"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2078:6:19"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2063:22:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:22:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:32:19"
															},
															"nodeType": "YulIf",
															"src": "2025:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2096:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2106:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2138:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2165:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2176:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2148:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1973:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1984:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1996:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2004:6:19",
														"type": ""
													}
												],
												"src": "1928:258:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2328:137:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2338:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2352:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2342:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2400:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2408:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:17:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2415:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2420:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2374:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:53:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2374:53:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2447:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2452:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2436:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2304:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2309:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2320:3:19",
														"type": ""
													}
												],
												"src": "2191:274:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2859:397:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2876:3:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2881:25:19",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2869:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:38:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2869:38:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2916:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2936:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2930:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2920:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2986:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2974:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2974:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2997:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3002:2:19",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2993:12:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2952:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:62:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3023:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3037:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3042:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:16:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3027:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3069:2:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3073:2:19",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3065:11:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3078:19:19",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3058:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:40:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3058:40:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3107:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3123:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:13:19"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "3111:8:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3190:2:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3194:2:19",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:11:19"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "3199:8:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3145:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:63:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:63:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3217:33:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3232:2:19"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "3236:8:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:17:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:19",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3224:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:26:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3217:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2827:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2840:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2851:3:19",
														"type": ""
													}
												],
												"src": "2470:786:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3362:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3372:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3395:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3380:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3372:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3414:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3429:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3445:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3450:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3441:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3441:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3454:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3437:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3437:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3425:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3407:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3331:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3342:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3353:4:19",
														"type": ""
													}
												],
												"src": "3261:203:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3598:145:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3608:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3608:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3650:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3681:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3686:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3677:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3677:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3690:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3673:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3673:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3661:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3661:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3714:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3725:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3710:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3710:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3730:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3703:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3703:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3559:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3570:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3578:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3589:4:19",
														"type": ""
													}
												],
												"src": "3469:274:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3843:92:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3853:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3865:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3876:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3861:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3861:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3853:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3895:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3920:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3913:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3913:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3906:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3888:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3812:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3823:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3834:4:19",
														"type": ""
													}
												],
												"src": "3748:187:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4041:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4051:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4051:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4093:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4010:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4021:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4032:4:19",
														"type": ""
													}
												],
												"src": "3940:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4243:262:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4283:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4297:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4287:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4330:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4326:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4326:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4346:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4319:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4319:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4388:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4396:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4384:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4384:15:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4405:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4416:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4421:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4362:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4362:66:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4437:62:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4453:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4472:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4480:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4468:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4468:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4489:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4485:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4485:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4464:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4464:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4449:45:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4496:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4445:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:54:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4437:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4212:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4223:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4234:4:19",
														"type": ""
													}
												],
												"src": "4122:383:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4684:182:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4701:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4712:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4694:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4694:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4746:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4731:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4751:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4790:34:19",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:62:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4834:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4846:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4842:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4834:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4675:4:19",
														"type": ""
													}
												],
												"src": "4510:356:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5045:247:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5062:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5073:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5055:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5096:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5107:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5092:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5092:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5112:2:19",
																		"type": "",
																		"value": "57"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5085:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5085:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5151:34:19",
																		"type": "",
																		"value": "The sum of all Vig percentage sh"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5124:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5217:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5202:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5202:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5222:27:19",
																		"type": "",
																		"value": "ares must be equal to 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5195:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5195:55:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5195:55:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5259:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5271:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5259:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5022:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5036:4:19",
														"type": ""
													}
												],
												"src": "4871:421:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5471:304:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5488:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5499:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5481:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5481:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:2:19",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5561:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5572:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5577:34:19",
																		"type": "",
																		"value": "Vig percentages shares must be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5550:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5643:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5628:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5628:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5648:34:19",
																		"type": "",
																		"value": "xpressed in a  0 to 100 ratio. E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5621:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5621:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5714:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:19:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5720:12:19",
																		"type": "",
																		"value": "xample: 30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:41:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5742:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5742:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5448:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5462:4:19",
														"type": ""
													}
												],
												"src": "5297:478:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5971:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5964:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6044:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6055:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6060:34:19",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6126:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6111:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6111:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6131:8:19",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6104:36:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6149:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6161:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6149:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5931:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5945:4:19",
														"type": ""
													}
												],
												"src": "5780:402:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6378:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6371:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6412:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6423:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6408:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6408:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6401:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6401:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6451:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6462:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6447:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6447:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6467:34:19",
																		"type": "",
																		"value": "ecosystem share must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6440:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6440:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6522:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6533:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6518:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6538:8:19",
																		"type": "",
																		"value": "than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6511:36:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6556:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6568:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6579:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6564:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6556:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6338:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6352:4:19",
														"type": ""
													}
												],
												"src": "6187:402:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6768:296:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6785:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6796:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6778:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6778:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6830:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6815:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6815:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:19",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6808:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6808:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6808:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6858:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6869:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6854:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6854:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6874:34:19",
																		"type": "",
																		"value": "Vig percentage must be expressed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6945:34:19",
																		"type": "",
																		"value": " in 0 to 10 percentage. Example:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7000:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7011:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6996:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6996:19:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7017:4:19",
																		"type": "",
																		"value": " 6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6989:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6989:33:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7031:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7043:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7054:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7031:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6745:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6759:4:19",
														"type": ""
													}
												],
												"src": "6594:470:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7243:232:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7260:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7271:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7253:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7294:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7305:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7290:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7290:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7310:2:19",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7283:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7283:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7333:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7344:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7329:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7329:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7349:34:19",
																		"type": "",
																		"value": "You have no privilege to run thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7322:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7322:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7322:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7404:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7415:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7400:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7400:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7420:12:19",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:40:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:40:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7442:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7454:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7465:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7450:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7442:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7220:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7234:4:19",
														"type": ""
													}
												],
												"src": "7069:406:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7654:227:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7671:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7682:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7664:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7705:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7716:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7701:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7721:2:19",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7694:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7694:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7694:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7744:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7755:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7740:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7740:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7760:34:19",
																		"type": "",
																		"value": "holders' share must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7733:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7733:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7733:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7815:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7826:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7811:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7831:7:19",
																		"type": "",
																		"value": "han 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7804:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7804:35:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7848:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7860:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7871:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7856:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7848:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7631:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7645:4:19",
														"type": ""
													}
												],
												"src": "7480:401:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8060:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8077:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8088:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8070:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8111:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8122:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8107:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8107:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8127:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8100:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8100:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8100:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8150:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8161:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8146:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8166:31:19",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8139:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8139:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8207:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8219:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8230:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8207:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8037:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8051:4:19",
														"type": ""
													}
												],
												"src": "7886:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8418:232:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8435:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8446:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8428:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8428:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8469:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8480:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8465:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8465:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8485:2:19",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8458:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8458:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8508:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8519:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8524:34:19",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8497:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8497:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8579:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8590:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8575:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8595:12:19",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8568:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8568:40:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8568:40:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8617:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8629:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8640:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8625:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8617:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8395:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8409:4:19",
														"type": ""
													}
												],
												"src": "8244:406:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:225:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8846:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8857:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8839:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8880:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8891:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8896:2:19",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8869:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8869:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8869:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8919:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8930:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8915:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8915:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8935:34:19",
																		"type": "",
																		"value": "bet earnings must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8908:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8908:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8990:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9001:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8986:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8986:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9006:5:19",
																		"type": "",
																		"value": "n 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8979:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8979:33:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9021:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9033:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9029:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9021:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8806:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8820:4:19",
														"type": ""
													}
												],
												"src": "8655:399:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9233:237:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9250:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9261:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9243:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9284:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9295:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9280:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9280:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9300:2:19",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9273:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9273:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9273:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9323:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9334:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9319:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9319:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9339:34:19",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9312:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9394:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9390:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9390:18:19"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9410:17:19",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9383:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9383:45:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9437:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9449:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9460:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9445:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9445:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9437:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9210:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9224:4:19",
														"type": ""
													}
												],
												"src": "9059:411:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9576:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9586:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9598:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9609:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9594:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9586:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9628:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9639:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9621:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9545:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9556:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9567:4:19",
														"type": ""
													}
												],
												"src": "9475:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9705:80:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9732:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9734:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9734:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9734:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9728:1:19"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9724:6:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9718:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:13:19"
															},
															"nodeType": "YulIf",
															"src": "9715:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9763:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9774:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9777:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9770:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9770:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9763:3:19"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9688:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9691:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9697:3:19",
														"type": ""
													}
												],
												"src": "9657:128:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9836:171:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9867:111:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9888:1:19"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9895:3:19",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9900:10:19",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9891:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9891:20:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9881:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9881:31:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9881:31:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9932:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9935:4:19",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9925:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9925:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9925:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "9960:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9963:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9953:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9953:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9953:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9856:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9849:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9849:9:19"
															},
															"nodeType": "YulIf",
															"src": "9846:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9987:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9996:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9987:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9821:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9824:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9830:1:19",
														"type": ""
													}
												],
												"src": "9790:217:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10064:116:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10123:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10125:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10125:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10125:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10095:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10088:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10088:9:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10081:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10081:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10103:1:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10114:1:19",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10110:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10110:6:19"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10118:1:19"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10106:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10106:14:19"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10100:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10100:21:19"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10077:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:45:19"
															},
															"nodeType": "YulIf",
															"src": "10074:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10154:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10169:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10172:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10165:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:9:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10154:7:19"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10043:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10046:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10052:7:19",
														"type": ""
													}
												],
												"src": "10012:168:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10234:76:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10256:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10258:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10258:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10258:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10250:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10253:1:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10247:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10247:8:19"
															},
															"nodeType": "YulIf",
															"src": "10244:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10287:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10299:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10302:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10295:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10295:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10287:4:19"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10216:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10219:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10225:4:19",
														"type": ""
													}
												],
												"src": "10185:125:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:205:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10378:10:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10387:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10382:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10447:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10472:3:19"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10477:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10468:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10468:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10491:3:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10496:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10487:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10487:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10481:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10481:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10461:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10461:39:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10461:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10408:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10411:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10405:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10419:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10421:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10430:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10433:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10426:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10426:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10421:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10401:3:19",
																"statements": []
															},
															"src": "10397:113:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10536:31:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10549:3:19"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10554:6:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10545:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10545:16:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10563:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10538:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10538:27:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10538:27:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10525:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10528:6:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10522:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10522:13:19"
															},
															"nodeType": "YulIf",
															"src": "10519:2:19"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10346:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10351:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10356:6:19",
														"type": ""
													}
												],
												"src": "10315:258:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10625:89:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10652:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10654:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10654:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10654:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10645:5:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10638:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:13:19"
															},
															"nodeType": "YulIf",
															"src": "10635:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10683:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10694:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10705:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10701:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10690:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:18:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:19"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10607:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10617:3:19",
														"type": ""
													}
												],
												"src": "10578:136:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10768:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10775:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10780:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10761:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10761:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10808:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10811:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10801:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10835:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10825:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10719:127:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"The sum of all Vig percentage sh\")\n        mstore(add(headStart, 96), \"ares must be equal to 100\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Vig percentages shares must be e\")\n        mstore(add(headStart, 96), \"xpressed in a  0 to 100 ratio. E\")\n        mstore(add(headStart, 128), \"xample: 30\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ecosystem share must be greater \")\n        mstore(add(headStart, 96), \"than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"Vig percentage must be expressed\")\n        mstore(add(headStart, 96), \" in 0 to 10 percentage. Example:\")\n        mstore(add(headStart, 128), \" 6\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"You have no privilege to run thi\")\n        mstore(add(headStart, 96), \"s function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"holders' share must be greater t\")\n        mstore(add(headStart, 96), \"han 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"bet earnings must be greater tha\")\n        mstore(add(headStart, 96), \"n 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063852757ad11610104578063b501ec97116100a2578063cb14662211610071578063cb146622146103ea578063cbf89c63146103fd578063d547741f14610410578063d6c1ca261461042357600080fd5b8063b501ec9714610376578063c45a01551461039d578063c8b0cf68146103b0578063ca15c873146103d757600080fd5b80639376b94c116100de5780639376b94c1461033f578063992642e514610348578063a217fddf1461035b578063a8e01b281461036357600080fd5b8063852757ad146103045780639010d07c1461031957806391d148541461032c57600080fd5b8063332daccf11610171578063486d1e501161014b578063486d1e50146102c25780634fb43199146102cb5780635bb47808146102de57806364886880146102f157600080fd5b8063332daccf1461029357806336568abe146102a6578063387440e6146102b957600080fd5b806323af4e17116101ad57806323af4e171461023a578063248a9ca31461024f5780632f2ff15d14610280578063327372e41461023a57600080fd5b806301ffc9a7146101d457806306a5cb3a146101fc5780630da4ee5014610227575b600080fd5b6101e76101e23660046113a0565b610436565b60405190151581526020015b60405180910390f35b60035461020f906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b60045461020f906001600160a01b031681565b61024d610248366004611302565b610461565b005b61027261025d36600461133c565b60009081526020819052604090206001015490565b6040519081526020016101f3565b61024d61028e366004611354565b6104c0565b6101e76102a1366004611302565b6104ea565b61024d6102b4366004611354565b610516565b61027260085481565b61027260065481565b6101e76102d9366004611302565b610594565b61024d6102ec366004611302565b6105ae565b61024d6102ff36600461137f565b610604565b6102726000805160206115a283398151915281565b61020f61032736600461137f565b610759565b6101e761033a366004611354565b610778565b61027260075481565b60055461020f906001600160a01b031681565b610272600081565b61024d610371366004611302565b6107a1565b6102727fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb081565b60025461020f906001600160a01b031681565b6102727fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c81565b6102726103e536600461133c565b6107f7565b6101e76103f8366004611302565b61080e565b61024d61040b36600461133c565b61083a565b61024d61041e366004611354565b6109c9565b61024d61043136600461133c565b6109ee565b60006001600160e01b03198216635a05180f60e01b148061045b575061045b82610b41565b92915050565b6104796000805160206115a283398151915233610778565b61049e5760405162461bcd60e51b81526004016104959061148c565b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152602081905260409020600101546104db81610b76565b6104e58383610b83565b505050565b600061045b7fc88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c83610778565b6001600160a01b03811633146105865760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610495565b6105908282610ba5565b5050565b600061045b6000805160206115a283398151915283610778565b6105c66000805160206115a283398151915233610778565b6105e25760405162461bcd60e51b81526004016104959061148c565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61061c6000805160206115a283398151915233610778565b6106385760405162461bcd60e51b81526004016104959061148c565b6064821115801561064a575060648111155b6106cf5760405162461bcd60e51b815260206004820152604a60248201527f5669672070657263656e746167657320736861726573206d757374206265206560448201527f787072657373656420696e206120203020746f2031303020726174696f2e2045606482015269078616d706c653a2033360b41b608482015260a401610495565b6106d981836114d6565b60641461074e5760405162461bcd60e51b815260206004820152603960248201527f5468652073756d206f6620616c6c205669672070657263656e7461676520736860448201527f61726573206d75737420626520657175616c20746f20313030000000000000006064820152608401610495565b600691909155600755565b60008281526001602052604081206107719083610bc7565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6107b96000805160206115a283398151915233610778565b6107d55760405162461bcd60e51b81526004016104959061148c565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600081815260016020526040812061045b90610bd3565b600061045b7fb5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb083610778565b600081116108965760405162461bcd60e51b815260206004820152602360248201527f626574206561726e696e6773206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608401610495565b60006064600654836108a8919061150e565b6108b291906114ee565b9050600081116109125760405162461bcd60e51b815260206004820152602560248201527f686f6c6465727327207368617265206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610495565b6000606460075484610924919061150e565b61092e91906114ee565b90506000811161098f5760405162461bcd60e51b815260206004820152602660248201527f65636f73797374656d207368617265206d75737420626520677265617465722060448201526507468616e20360d41b6064820152608401610495565b6003546009546109ac916001600160a01b03918216911683610bdd565b6004546009546104e5916001600160a01b03918216911684610bdd565b6000828152602081905260409020600101546109e481610b76565b6104e58383610ba5565b610a066000805160206115a283398151915233610778565b610a225760405162461bcd60e51b81526004016104959061148c565b600a8110610aa35760405162461bcd60e51b815260206004820152604260248201527f5669672070657263656e74616765206d7573742062652065787072657373656460448201527f20696e203020746f2031302070657263656e746167652e204578616d706c653a606482015261101b60f11b608482015260a401610495565b600855565b610ab28282610778565b610590576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610ae83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610771836001600160a01b038416610c2f565b60006001600160e01b03198216637965db0b60e01b148061045b57506301ffc9a760e01b6001600160e01b031983161461045b565b610b808133610c7e565b50565b610b8d8282610aa8565b60008281526001602052604090206104e59082610b2c565b610baf8282610ce2565b60008281526001602052604090206104e59082610d47565b60006107718383610d5c565b600061045b825490565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104e5908490610d94565b6000818152600183016020526040812054610c765750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561045b565b50600061045b565b610c888282610778565b61059057610ca0816001600160a01b03166014610e66565b610cab836020610e66565b604051602001610cbc9291906113e4565b60408051601f198184030181529082905262461bcd60e51b825261049591600401611459565b610cec8282610778565b15610590576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610771836001600160a01b038416611048565b6000826000018281548110610d8157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000610de9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111659092919063ffffffff16565b8051909150156104e55780806020019051810190610e07919061131c565b6104e55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610495565b60606000610e7583600261150e565b610e809060026114d6565b67ffffffffffffffff811115610ea657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ed0576020820181803683370190505b509050600360fc1b81600081518110610ef957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610f3657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610f5a84600261150e565b610f659060016114d6565b90505b6001811115610ff9576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610fa757634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610fcb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610ff281611574565b9050610f68565b5083156107715760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610495565b6000818152600183016020526040812054801561115b57600061106c60018361152d565b85549091506000906110809060019061152d565b90508181146111015760008660000182815481106110ae57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808760000184815481106110df57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b855486908061112057634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061045b565b600091505061045b565b6060611174848460008561117c565b949350505050565b6060824710156111dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610495565b6001600160a01b0385163b6112345760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610495565b600080866001600160a01b0316858760405161125091906113c8565b60006040518083038185875af1925050503d806000811461128d576040519150601f19603f3d011682016040523d82523d6000602084013e611292565b606091505b50915091506112a28282866112ad565b979650505050505050565b606083156112bc575081610771565b8251156112cc5782518084602001fd5b8160405162461bcd60e51b81526004016104959190611459565b80356001600160a01b03811681146112fd57600080fd5b919050565b600060208284031215611313578081fd5b610771826112e6565b60006020828403121561132d578081fd5b81518015158114610771578182fd5b60006020828403121561134d578081fd5b5035919050565b60008060408385031215611366578081fd5b82359150611376602084016112e6565b90509250929050565b60008060408385031215611391578182fd5b50508035926020909101359150565b6000602082840312156113b1578081fd5b81356001600160e01b031981168114610771578182fd5b600082516113da818460208701611544565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161141c816017850160208801611544565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161144d816028840160208801611544565b01602801949350505050565b6020815260008251806020840152611478816040850160208701611544565b601f01601f19169190910160400192915050565b6020808252602a908201527f596f752068617665206e6f2070726976696c65676520746f2072756e207468696040820152693990333ab731ba34b7b760b11b606082015260800190565b600082198211156114e9576114e961158b565b500190565b60008261150957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156115285761152861158b565b500290565b60008282101561153f5761153f61158b565b500390565b60005b8381101561155f578181015183820152602001611547565b8381111561156e576000848401525b50505050565b6000816115835761158361158b565b506000190190565b634e487b7160e01b600052601160045260246000fdfe74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639a264697066735822122013f8badcb935180116ff3569d7196438b3b0f136bcbffd64d92c144f9e3bc1a064736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x852757AD GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB501EC97 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCB146622 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCB146622 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xCBF89C63 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xD6C1CA26 EQ PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB501EC97 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xC8B0CF68 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9376B94C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9376B94C EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xA8E01B28 EQ PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x852757AD EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x332DACCF GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x486D1E50 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x486D1E50 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x4FB43199 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x5BB47808 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x64886880 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x332DACCF EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x387440E6 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AF4E17 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x23AF4E17 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x327372E4 EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6A5CB3A EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xDA4EE50 EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A0 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x461 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH2 0x24D PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x137F JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x272 PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x20F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP2 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x3F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1302 JUMP JUMPDEST PUSH2 0x80E JUMP JUMPDEST PUSH2 0x24D PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH2 0x24D PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x431 CALLDATASIZE PUSH1 0x4 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45B JUMPI POP PUSH2 0x45B DUP3 PUSH2 0xB41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x479 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x4DB DUP2 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x4E5 DUP4 DUP4 PUSH2 0xB83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B PUSH32 0xC88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C DUP4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH2 0x590 DUP3 DUP3 PUSH2 0xBA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x5C6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x61C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x64 DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x6CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E746167657320736861726573206D7573742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x787072657373656420696E206120203020746F2031303020726174696F2E2045 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x78616D706C653A20333 PUSH1 0xB4 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x495 JUMP JUMPDEST PUSH2 0x6D9 DUP2 DUP4 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x64 EQ PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073756D206F6620616C6C205669672070657263656E74616765207368 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61726573206D75737420626520657175616C20746F2031303000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x771 SWAP1 DUP4 PUSH2 0xBC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x7B9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x45B SWAP1 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B PUSH32 0xB5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0 DUP4 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626574206561726E696E6773206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x6 SLOAD DUP4 PUSH2 0x8A8 SWAP2 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x686F6C6465727327207368617265206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP5 PUSH2 0x924 SWAP2 SWAP1 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x65636F73797374656D207368617265206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x9 SLOAD PUSH2 0x9AC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x9 SLOAD PUSH2 0x4E5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP5 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x9E4 DUP2 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x4E5 DUP4 DUP4 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xA06 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15A2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x778 JUMP JUMPDEST PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP1 PUSH2 0x148C JUMP JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5669672070657263656E74616765206D75737420626520657870726573736564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E203020746F2031302070657263656E746167652E204578616D706C653A PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x101B PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xAB2 DUP3 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xAE8 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x45B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x45B JUMP JUMPDEST PUSH2 0xB80 DUP2 CALLER PUSH2 0xC7E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB8D DUP3 DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4E5 SWAP1 DUP3 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0xBAF DUP3 DUP3 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4E5 SWAP1 DUP3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP4 DUP4 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x4E5 SWAP1 DUP5 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xC76 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x45B JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x45B JUMP JUMPDEST PUSH2 0xC88 DUP3 DUP3 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x590 JUMPI PUSH2 0xCA0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0xCAB DUP4 PUSH1 0x20 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCBC SWAP3 SWAP2 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x495 SWAP2 PUSH1 0x4 ADD PUSH2 0x1459 JUMP JUMPDEST PUSH2 0xCEC DUP3 DUP3 PUSH2 0x778 JUMP JUMPDEST ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1048 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1165 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x4E5 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE75 DUP4 PUSH1 0x2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xE80 SWAP1 PUSH1 0x2 PUSH2 0x14D6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xED0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xEF9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF36 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0xF5A DUP5 PUSH1 0x2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xF65 SWAP1 PUSH1 0x1 PUSH2 0x14D6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xFF9 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0xFA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFCB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0xFF2 DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP PUSH2 0xF68 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 PUSH2 0x106C PUSH1 0x1 DUP4 PUSH2 0x152D JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1080 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x152D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1101 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1120 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1174 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x117C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP2 SWAP1 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12A2 DUP3 DUP3 DUP7 PUSH2 0x12AD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12BC JUMPI POP DUP2 PUSH2 0x771 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x12CC JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1313 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x771 DUP3 PUSH2 0x12E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x771 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1366 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1376 PUSH1 0x20 DUP5 ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1391 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x771 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x13DA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x141C DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x144D DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1544 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1478 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F2070726976696C65676520746F2072756E20746869 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x3990333AB731BA34B7B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x14E9 JUMPI PUSH2 0x14E9 PUSH2 0x158B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1509 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1528 PUSH2 0x158B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153F PUSH2 0x158B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x155F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1547 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x156E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x158B JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH21 0x966176C367549066DE941FECEC46BE006953038445 0x2D 0xAA SWAP13 BALANCE 0xD7 MULMOD 0xC5 DIFFICULTY 0xE6 CODECOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xF8 0xBA 0xDC 0xB9 CALLDATALOAD XOR ADD AND SELFDESTRUCT CALLDATALOAD PUSH10 0xD7196438B3B0F136BCBF REVERT PUSH5 0xD92C144F9E EXTCODESIZE 0xC1 LOG0 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "289:3444:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:1;;;;;;:::i;:::-;;:::i;:::-;;;3913:14:19;;3906:22;3888:41;;3876:2;3861:18;634:212:1;;;;;;;;429:40:15;;;;;-1:-1:-1;;;;;429:40:15;;;;;;-1:-1:-1;;;;;3425:32:19;;;3407:51;;3395:2;3380:18;429:40:15;3362:102:19;475:38:15;;;;;-1:-1:-1;;;;;475:38:15;;;1679:102;;;;;;:::i;:::-;;:::i;:::-;;4391:129:0;;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;;;;4086:25:19;;;4074:2;4059:18;4391:129:0;4041:76:19;4816:145:0;;;;;;:::i;:::-;;:::i;3605:125:15:-;;;;;;:::i;:::-;;:::i;5925:214:0:-;;;;;;:::i;:::-;;:::i;651:42:15:-;;;;;;559:39;;;;;;3327:134;;;;;;:::i;:::-;;:::i;1577:96::-;;;;;;:::i;:::-;;:::i;2278:459::-;;;;;;:::i;:::-;;:::i;760:64::-;;-1:-1:-1;;;;;;;;;;;760:64:15;;1431:151:1;;;;;;:::i;:::-;;:::i;2895:145:0:-;;;;;;:::i;:::-;;:::i;604:41:15:-;;;;;;519:34;;;;;-1:-1:-1;;;;;519:34:15;;;2027:49:0;;2072:4;2027:49;;1903:110:15;;;;;;:::i;:::-;;:::i;830:62::-;;868:24;830:62;;392:31;;;;;-1:-1:-1;;;;;392:31:15;;;898:58;;934:22;898:58;;1750:140:1;;;;;;:::i;:::-;;:::i;3467:132:15:-;;;;;;:::i;:::-;;:::i;2743:578::-;;;;;;:::i;:::-;;:::i;5241:147:0:-;;;;;;:::i;:::-;;:::i;2019:253:15:-;;;;;;:::i;:::-;;:::i;634:212:1:-;719:4;-1:-1:-1;;;;;;742:57:1;;-1:-1:-1;;;742:57:1;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:1:o;1679:102:15:-;1021:33;-1:-1:-1;;;;;;;;;;;1043:10:15;1021:7;:33::i;:::-;1000:122;;;;-1:-1:-1;;;1000:122:15;;;;;;;:::i;:::-;;;;;;;;;1751:14:::1;:23:::0;;-1:-1:-1;;;;;;1751:23:15::1;-1:-1:-1::0;;;;;1751:23:15;;;::::1;::::0;;;::::1;::::0;;1679:102::o;4816:145:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;3605:125:15:-;3672:4;3695:28;934:22;3714:8;3695:7;:28::i;5925:214:0:-;-1:-1:-1;;;;;6020:23:0;;719:10:8;6020:23:0;6012:83;;;;-1:-1:-1;;;6012:83:0;;9261:2:19;6012:83:0;;;9243:21:19;9300:2;9280:18;;;9273:30;9339:34;9319:18;;;9312:62;-1:-1:-1;;;9390:18:19;;;9383:45;9445:19;;6012:83:0;9233:237:19;6012:83:0;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;3327:134:15:-;3400:4;3423:31;-1:-1:-1;;;;;;;;;;;3445:8:15;3423:7;:31::i;1577:96::-;1021:33;-1:-1:-1;;;;;;;;;;;1043:10:15;1021:7;:33::i;:::-;1000:122;;;;-1:-1:-1;;;1000:122:15;;;;;;;:::i;:::-;1648:7:::1;:18:::0;;-1:-1:-1;;;;;;1648:18:15::1;-1:-1:-1::0;;;;;1648:18:15;;;::::1;::::0;;;::::1;::::0;;1577:96::o;2278:459::-;1021:33;-1:-1:-1;;;;;;;;;;;1043:10:15;1021:7;:33::i;:::-;1000:122;;;;-1:-1:-1;;;1000:122:15;;;;;;;:::i;:::-;2422:3:::1;2414:4;:11;;:26;;;;;2437:3;2429:4;:11;;2414:26;2393:147;;;::::0;-1:-1:-1;;;2393:147:15;;5499:2:19;2393:147:15::1;::::0;::::1;5481:21:19::0;5538:2;5518:18;;;5511:30;5577:34;5557:18;;;5550:62;5648:34;5628:18;;;5621:62;-1:-1:-1;;;5699:19:19;;;5692:41;5750:19;;2393:147:15::1;5471:304:19::0;2393:147:15::1;2571:11;2578:4:::0;2571;:11:::1;:::i;:::-;2587:3;2571:19;2550:123;;;::::0;-1:-1:-1;;;2550:123:15;;5073:2:19;2550:123:15::1;::::0;::::1;5055:21:19::0;5112:2;5092:18;;;5085:30;5151:34;5131:18;;;5124:62;5222:27;5202:18;;;5195:55;5267:19;;2550:123:15::1;5045:247:19::0;2550:123:15::1;2684:10;:17:::0;;;;2711:12:::1;:19:::0;2278:459::o;1431:151:1:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;2895:145:0:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;1903:110:15:-;1021:33;-1:-1:-1;;;;;;;;;;;1043:10:15;1021:7;:33::i;:::-;1000:122;;;;-1:-1:-1;;;1000:122:15;;;;;;;:::i;:::-;1981:16:::1;:25:::0;;-1:-1:-1;;;;;;1981:25:15::1;-1:-1:-1::0;;;;;1981:25:15;;;::::1;::::0;;;::::1;::::0;;1903:110::o;1750:140:1:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;3467:132:15:-;3539:4;3562:30;868:24;3583:8;3562:7;:30::i;2743:578::-;2838:1;2825:10;:14;2817:62;;;;-1:-1:-1;;;2817:62:15;;8857:2:19;2817:62:15;;;8839:21:19;8896:2;8876:18;;;8869:30;8935:34;8915:18;;;8908:62;-1:-1:-1;;;8986:18:19;;;8979:33;9029:19;;2817:62:15;8829:225:19;2817:62:15;2889:20;2940:3;2926:10;;2913;:23;;;;:::i;:::-;2912:31;;;;:::i;:::-;2889:54;;2976:1;2961:12;:16;2953:66;;;;-1:-1:-1;;;2953:66:15;;7682:2:19;2953:66:15;;;7664:21:19;7721:2;7701:18;;;7694:30;7760:34;7740:18;;;7733:62;-1:-1:-1;;;7811:18:19;;;7804:35;7856:19;;2953:66:15;7654:227:19;2953:66:15;3029:22;3084:3;3068:12;;3055:10;:25;;;;:::i;:::-;3054:33;;;;:::i;:::-;3029:58;;3122:1;3105:14;:18;3097:69;;;;-1:-1:-1;;;3097:69:15;;6389:2:19;3097:69:15;;;6371:21:19;6428:2;6408:18;;;6401:30;6467:34;6447:18;;;6440:62;-1:-1:-1;;;6518:18:19;;;6511:36;6564:19;;3097:69:15;6361:228:19;3097:69:15;3209:16;;3177:18;;:65;;-1:-1:-1;;;;;3177:18:15;;;;3209:16;3227:14;3177:31;:65::i;:::-;3285:14;;3253:18;;:61;;-1:-1:-1;;;;;3253:18:15;;;;3285:14;3301:12;3253:31;:61::i;5241:147:0:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;2019:253:15:-:0;1021:33;-1:-1:-1;;;;;;;;;;;1043:10:15;1021:7;:33::i;:::-;1000:122;;;;-1:-1:-1;;;1000:122:15;;;;;;;:::i;:::-;2134:2:::1;2120:11;:16;2099:129;;;::::0;-1:-1:-1;;;2099:129:15;;6796:2:19;2099:129:15::1;::::0;::::1;6778:21:19::0;6835:2;6815:18;;;6808:30;6874:34;6854:18;;;6847:62;6945:34;6925:18;;;6918:62;-1:-1:-1;;;6996:19:19;;;6989:33;7039:19;;2099:129:15::1;6768:296:19::0;2099:129:15::1;2238:13;:27:::0;2019:253::o;7474:233:0:-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7595:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:8;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;8028:150:12:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:12;;8121:4;:50::i;2606:202:0:-;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:10;;;2765:36:0;829:155:10;3334:103:0;3400:30;3411:4;719:10:8;3400::0;:30::i;:::-;3334:103;:::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;9286:156:12:-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;8829:115::-;8892:7;8918:19;8926:3;4444:18;;4362:107;763:205:6;902:58;;;-1:-1:-1;;;;;3661:32:19;;902:58:6;;;3643:51:19;3710:18;;;;3703:34;;;902:58:6;;;;;;;;;;3616:18:19;;;;902:58:6;;;;;;;;-1:-1:-1;;;;;902:58:6;-1:-1:-1;;;902:58:6;;;875:86;;895:5;;875:19;:86::i;2113:404:12:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:12;2488:12;;3718:492:0;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;7878:234::-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:12;;;;;;;;;;;-1:-1:-1;;;;;7999:29:0;;;;;;;;;;:37;;-1:-1:-1;;7999:37:0;;;8055:40;719:10:8;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;8346:156:12:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:12;;8442:7;:53::i;4811:118::-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;-1:-1:-1;;;4904:18:12;;;;;;;;;;;;;;;;;4897:25;;4811:118;;;;:::o;3747:706:6:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:6;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:6;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:6;;8446:2:19;4351:85:6;;;8428:21:19;8485:2;8465:18;;;8458:30;8524:34;8504:18;;;8497:62;-1:-1:-1;;;8575:18:19;;;8568:40;8625:19;;4351:85:6;8418:232:19;1652:441:9;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;-1:-1:-1;;;1774:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:9;;1752:47;;-1:-1:-1;;;1809:6:9;1816:1;1809:9;;;;;;-1:-1:-1;;;1809:9:9;;;;;;;;;;;;:15;-1:-1:-1;;;;;1809:15:9;;;;;;;;;-1:-1:-1;;;1834:6:9;1841:1;1834:9;;;;;;-1:-1:-1;;;1834:9:9;;;;;;;;;;;;:15;-1:-1:-1;;;;;1834:15:9;;;;;;;;-1:-1:-1;1864:9:9;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:9;1951:3;1943:11;1930:25;;;;;-1:-1:-1;;;1930:25:9;;;;;;;;;;;;1918:6;1925:1;1918:9;;;;;;-1:-1:-1;;;1918:9:9;;;;;;;;;;;;:37;-1:-1:-1;;;;;1918:37:9;;;;;;;;-1:-1:-1;1979:1:9;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:9;;2000:55;;;;-1:-1:-1;;;2000:55:9;;4712:2:19;2000:55:9;;;4694:21:19;;;4731:18;;;4724:30;4790:34;4770:18;;;4763:62;4842:18;;2000:55:9;4684:182:19;2685:1388:12;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:12;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;-1:-1:-1;;;3470:22:12;;;;;;;;;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;-1:-1:-1;;;3592:26:12;;;;;;;;;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;-1:-1:-1;;;3876:17:12;;;;;;;;;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;3861:223:7;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:7:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:7;;5982:2:19;5137:81:7;;;5964:21:19;6021:2;6001:18;;;5994:30;6060:34;6040:18;;;6033:62;-1:-1:-1;;;6111:18:19;;;6104:36;6157:19;;5137:81:7;5954:228:19;5137:81:7;-1:-1:-1;;;;;1465:19:7;;;5228:60;;;;-1:-1:-1;;;5228:60:7;;8088:2:19;5228:60:7;;;8070:21:19;8127:2;8107:18;;;8100:30;8166:31;8146:18;;;8139:59;8215:18;;5228:60:7;8060:179:19;5228:60:7;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:7;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:7:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:7;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;-1:-1:-1;;;8252:20:7;;;;;;;;:::i;14:173:19:-;82:20;;-1:-1:-1;;;;;131:31:19;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:297::-;460:6;513:2;501:9;492:7;488:23;484:32;481:2;;;534:6;526;519:22;481:2;571:9;565:16;624:5;617:13;610:21;603:5;600:32;590:2;;651:6;643;636:22;695:190;754:6;807:2;795:9;786:7;782:23;778:32;775:2;;;828:6;820;813:22;775:2;-1:-1:-1;856:23:19;;765:120;-1:-1:-1;765:120:19:o;890:264::-;958:6;966;1019:2;1007:9;998:7;994:23;990:32;987:2;;;1040:6;1032;1025:22;987:2;1081:9;1068:23;1058:33;;1110:38;1144:2;1133:9;1129:18;1110:38;:::i;:::-;1100:48;;977:177;;;;;:::o;1159:258::-;1227:6;1235;1288:2;1276:9;1267:7;1263:23;1259:32;1256:2;;;1309:6;1301;1294:22;1256:2;-1:-1:-1;;1337:23:19;;;1407:2;1392:18;;;1379:32;;-1:-1:-1;1246:171:19:o;1422:306::-;1480:6;1533:2;1521:9;1512:7;1508:23;1504:32;1501:2;;;1554:6;1546;1539:22;1501:2;1585:23;;-1:-1:-1;;;;;;1637:32:19;;1627:43;;1617:2;;1689:6;1681;1674:22;2191:274;2320:3;2358:6;2352:13;2374:53;2420:6;2415:3;2408:4;2400:6;2396:17;2374:53;:::i;:::-;2443:16;;;;;2328:137;-1:-1:-1;;2328:137:19:o;2470:786::-;2881:25;2876:3;2869:38;2851:3;2936:6;2930:13;2952:62;3007:6;3002:2;2997:3;2993:12;2986:4;2978:6;2974:17;2952:62;:::i;:::-;-1:-1:-1;;;3073:2:19;3033:16;;;3065:11;;;3058:40;3123:13;;3145:63;3123:13;3194:2;3186:11;;3179:4;3167:17;;3145:63;:::i;:::-;3228:17;3247:2;3224:26;;2859:397;-1:-1:-1;;;;2859:397:19:o;4122:383::-;4271:2;4260:9;4253:21;4234:4;4303:6;4297:13;4346:6;4341:2;4330:9;4326:18;4319:34;4362:66;4421:6;4416:2;4405:9;4401:18;4396:2;4388:6;4384:15;4362:66;:::i;:::-;4489:2;4468:15;-1:-1:-1;;4464:29:19;4449:45;;;;4496:2;4445:54;;4243:262;-1:-1:-1;;4243:262:19:o;7069:406::-;7271:2;7253:21;;;7310:2;7290:18;;;7283:30;7349:34;7344:2;7329:18;;7322:62;-1:-1:-1;;;7415:2:19;7400:18;;7393:40;7465:3;7450:19;;7243:232::o;9657:128::-;9697:3;9728:1;9724:6;9721:1;9718:13;9715:2;;;9734:18;;:::i;:::-;-1:-1:-1;9770:9:19;;9705:80::o;9790:217::-;9830:1;9856;9846:2;;-1:-1:-1;;;9881:31:19;;9935:4;9932:1;9925:15;9963:4;9888:1;9953:15;9846:2;-1:-1:-1;9992:9:19;;9836:171::o;10012:168::-;10052:7;10118:1;10114;10110:6;10106:14;10103:1;10100:21;10095:1;10088:9;10081:17;10077:45;10074:2;;;10125:18;;:::i;:::-;-1:-1:-1;10165:9:19;;10064:116::o;10185:125::-;10225:4;10253:1;10250;10247:8;10244:2;;;10258:18;;:::i;:::-;-1:-1:-1;10295:9:19;;10234:76::o;10315:258::-;10387:1;10397:113;10411:6;10408:1;10405:13;10397:113;;;10487:11;;;10481:18;10468:11;;;10461:39;10433:2;10426:10;10397:113;;;10528:6;10525:1;10522:13;10519:2;;;10563:1;10554:6;10549:3;10545:16;10538:27;10519:2;;10368:205;;;:::o;10578:136::-;10617:3;10645:5;10635:2;;10654:18;;:::i;:::-;-1:-1:-1;;;10690:18:19;;10625:89::o;10719:127::-;10780:10;10775:3;10771:20;10768:1;10761:31;10811:4;10808:1;10801:15;10835:4;10832:1;10825:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1124600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BLACKLIST()": "284",
								"DEFAULT_ADMIN_ROLE()": "284",
								"EVENT_ADMIN()": "240",
								"SYSTEM_ADMIN()": "infinite",
								"ecosystemAddress()": "1106",
								"ecosystemVig()": "1040",
								"factory()": "1104",
								"getRoleAdmin(bytes32)": "1215",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "1441",
								"holdersAddress()": "1128",
								"holdersVig()": "1040",
								"isBlack(address)": "1414",
								"isEventAdmin(address)": "1412",
								"isSystemAdmin(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setEcosystemAddress(address)": "infinite",
								"setFactory(address)": "infinite",
								"setHoldersAddress(address)": "infinite",
								"setStableCoin(address)": "infinite",
								"setVigPercentage(uint256)": "infinite",
								"setVigPercentageShares(uint256,uint256)": "infinite",
								"shareBetEarnings(uint256)": "infinite",
								"stableCoin()": "1104",
								"supportsInterface(bytes4)": "infinite",
								"vigPercentage()": "1085"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 596,
									"end": 598,
									"name": "PUSH",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 559,
									"end": 598,
									"name": "PUSH",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 559,
									"end": 598,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 559,
									"end": 598,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 559,
									"end": 598,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 604,
									"end": 645,
									"name": "PUSH",
									"source": 15,
									"value": "7"
								},
								{
									"begin": 604,
									"end": 645,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 15,
									"value": "A"
								},
								{
									"begin": 651,
									"end": 693,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 651,
									"end": 693,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 742,
									"end": 752,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 742,
									"end": 752,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "PUSH",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 699,
									"end": 753,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 699,
									"end": 753,
									"name": "AND",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 742,
									"end": 752,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 742,
									"end": 752,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 742,
									"end": 752,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 699,
									"end": 753,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1146,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1290,
									"end": 1332,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 1331,
									"name": "CALLER",
									"source": 15
								},
								{
									"begin": 1290,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1290,
									"end": 1332,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1290,
									"end": 1332,
									"name": "tag",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1290,
									"end": 1332,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "6"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1367,
									"end": 1377,
									"name": "CALLER",
									"source": 15
								},
								{
									"begin": 1342,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1388,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1509970658320CF711C24D98099E2B1D5DFD240BA4E3E67EEDD50A039033D4BF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "CALLER",
									"source": 15
								},
								{
									"begin": 1388,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1388,
									"end": 1423,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1388,
									"end": 1423,
									"name": "tag",
									"source": 15,
									"value": "7"
								},
								{
									"begin": 1388,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1433,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1509970658320CF711C24D98099E2B1D5DFD240BA4E3E67EEDD50A039033D4BF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 1433,
									"end": 1473,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1433,
									"end": 1473,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 1433,
									"end": 1473,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1483,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "66DE2D57F1E19309316D1BEC7E9BDEE6DCD35EE6D22DE30E180FB9858210C7E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1483,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1483,
									"end": 1516,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1483,
									"end": 1516,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 1483,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "66DE2D57F1E19309316D1BEC7E9BDEE6DCD35EE6D22DE30E180FB9858210C7E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1526,
									"end": 1539,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 1526,
									"end": 1564,
									"name": "JUMP",
									"source": 15,
									"value": "[in]"
								},
								{
									"begin": 1526,
									"end": 1564,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 1526,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6913,
									"end": 6917,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6919,
									"end": 6926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6902,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6902,
									"end": 6927,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 6934,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7059,
									"end": 7306,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7059,
									"end": 7306,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7142,
									"end": 7167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7232,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7232,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7247,
									"end": 7299,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7247,
									"end": 7299,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7232,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7232,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4513,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 4491,
									"end": 4503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7247,
									"end": 7299,
									"name": "PUSH",
									"source": 0,
									"value": "BD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
								},
								{
									"begin": 7247,
									"end": 7299,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7142,
									"end": 7167,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7247,
									"end": 7299,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7059,
									"end": 7306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7059,
									"end": 7306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7059,
									"end": 7306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7059,
									"end": 7306,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1978,
									"end": 2144,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1978,
									"end": 2144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2082,
									"end": 2086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2065,
									"end": 2081,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2081,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551761"
								},
								{
									"begin": 2065,
									"end": 2081,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2096,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2096,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2096,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2065,
									"end": 2096,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2118,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2124,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2136,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2129,
									"end": 2136,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551762"
								},
								{
									"begin": 2106,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2106,
									"end": 2128,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2128,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2128,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2106,
									"end": 2137,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2144,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7627,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7668,
									"end": 7675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7662,
									"end": 7666,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8098,
									"end": 8102,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8121,
									"end": 8171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 8126,
									"end": 8129,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8146,
									"end": 8169,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8146,
									"end": 8169,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8121,
									"end": 8125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 8121,
									"end": 8171,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 8121,
									"end": 8171,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 8121,
									"end": 8171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8114,
									"end": 8171,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8114,
									"end": 8171,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8028,
									"end": 8178,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 2113,
									"end": 2517,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2113,
									"end": 2517,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2176,
									"end": 2180,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4262,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4250,
									"end": 4262,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4262,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 4250,
									"end": 4269,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2192,
									"end": 2511,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2192,
									"end": 2511,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2245,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2257,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2414,
									"end": 2432,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2414,
									"end": 2432,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2404,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2404,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2404,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2411,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2432,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2432,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2392,
									"end": 2432,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2446,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2446,
									"end": 2457,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2192,
									"end": 2511,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2192,
									"end": 2511,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2495,
									"end": 2500,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2500,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2488,
									"end": 2500,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3733,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013f8badcb935180116ff3569d7196438b3b0f136bcbffd64d92c144f9e3bc1a064736f6c63430008040033",
									".code": [
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "852757AD"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "B501EC97"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "CB146622"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "CB146622"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "CBF89C63"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "D6C1CA26"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "B501EC97"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "C45A0155"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "C8B0CF68"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "CA15C873"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "9376B94C"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "9376B94C"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "992642E5"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "A8E01B28"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "852757AD"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "9010D07C"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "332DACCF"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "486D1E50"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "486D1E50"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "4FB43199"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "5BB47808"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "64886880"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "332DACCF"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "387440E6"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "23AF4E17"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "23AF4E17"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "327372E4"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "6A5CB3A"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "DA4EE50"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 289,
											"end": 3733,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 634,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3888,
											"end": 3929,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3888,
											"end": 3929,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3879,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 634,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 429,
											"end": 469,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 429,
											"end": 469,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 469,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 429,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 469,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 429,
											"end": 469,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 429,
											"end": 469,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 429,
											"end": 469,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 429,
											"end": 469,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 429,
											"end": 469,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 469,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3407,
											"end": 3458,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3407,
											"end": 3458,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 429,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 3362,
											"end": 3464,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 475,
											"end": 513,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 475,
											"end": 513,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 475,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 475,
											"end": 513,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 475,
											"end": 513,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 475,
											"end": 513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 475,
											"end": 513,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4111,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4086,
											"end": 4111,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4086,
											"end": 4111,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4041,
											"end": 4117,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 693,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 651,
											"end": 693,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 651,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 651,
											"end": 693,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 651,
											"end": 693,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 651,
											"end": 693,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 651,
											"end": 693,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 559,
											"end": 598,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 559,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 559,
											"end": 598,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 559,
											"end": 598,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 559,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 559,
											"end": 598,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 519,
											"end": 553,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 519,
											"end": 553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 519,
											"end": 553,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 519,
											"end": 553,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 519,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 519,
											"end": 553,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 519,
											"end": 553,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 519,
											"end": 553,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 519,
											"end": 553,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 830,
											"end": 892,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 830,
											"end": 892,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 830,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 868,
											"end": 892,
											"name": "PUSH",
											"source": 15,
											"value": "B5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0"
										},
										{
											"begin": 830,
											"end": 892,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 830,
											"end": 892,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 392,
											"end": 423,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 392,
											"end": 423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 392,
											"end": 423,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 392,
											"end": 423,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 392,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 392,
											"end": 423,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 392,
											"end": 423,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 392,
											"end": 423,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 392,
											"end": 423,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 898,
											"end": 956,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 898,
											"end": 956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 898,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 934,
											"end": 956,
											"name": "PUSH",
											"source": 15,
											"value": "C88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C"
										},
										{
											"begin": 898,
											"end": 956,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 898,
											"end": 956,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 742,
											"end": 799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 799,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A05180F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 742,
											"end": 799,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 742,
											"end": 799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 742,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 742,
											"end": 839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 742,
											"end": 839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 803,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 827,
											"end": 838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 803,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 803,
											"end": 839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 803,
											"end": 839,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 803,
											"end": 839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 839,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 634,
											"end": 846,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "tag",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "tag",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1765,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1679,
											"end": 1781,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 934,
											"end": 956,
											"name": "PUSH",
											"source": 15,
											"value": "C88EF414E1D5AD1D458FDFA42B508737177470135860C2A2CE45583CE28F207C"
										},
										{
											"begin": 3714,
											"end": 3722,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9261,
											"end": 9263,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9243,
											"end": 9264,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9300,
											"end": 9302,
											"name": "PUSH",
											"source": 19,
											"value": "2F"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9273,
											"end": 9303,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9339,
											"end": 9373,
											"name": "PUSH",
											"source": 19,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9312,
											"end": 9374,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9390,
											"end": 9408,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9383,
											"end": 9428,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 9445,
											"end": 9464,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 9233,
											"end": 9470,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6124,
											"end": 6131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6106,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3327,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3400,
											"end": 3404,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3445,
											"end": 3453,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3423,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3423,
											"end": 3454,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1648,
											"end": 1666,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1577,
											"end": 1673,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2422,
											"end": 2425,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2429,
											"end": 2433,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 2414,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5481,
											"end": 5502,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "PUSH",
											"source": 19,
											"value": "4A"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5511,
											"end": 5541,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5577,
											"end": 5611,
											"name": "PUSH",
											"source": 19,
											"value": "5669672070657263656E746167657320736861726573206D7573742062652065"
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5557,
											"end": 5575,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5550,
											"end": 5612,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5648,
											"end": 5682,
											"name": "PUSH",
											"source": 19,
											"value": "787072657373656420696E206120203020746F2031303020726174696F2E2045"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5621,
											"end": 5683,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78616D706C653A20333"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5699,
											"end": 5718,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5692,
											"end": 5733,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5750,
											"end": 5769,
											"name": "PUSH",
											"source": 19,
											"value": "A4"
										},
										{
											"begin": 5750,
											"end": 5769,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 5471,
											"end": 5775,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 2393,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2578,
											"end": 2582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2587,
											"end": 2590,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2571,
											"end": 2590,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5073,
											"end": 5075,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5055,
											"end": 5076,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5112,
											"end": 5114,
											"name": "PUSH",
											"source": 19,
											"value": "39"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5092,
											"end": 5110,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5085,
											"end": 5115,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH",
											"source": 19,
											"value": "5468652073756D206F6620616C6C205669672070657263656E74616765207368"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5124,
											"end": 5186,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5222,
											"end": 5249,
											"name": "PUSH",
											"source": 19,
											"value": "61726573206D75737420626520657175616C20746F2031303000000000000000"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5195,
											"end": 5250,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5267,
											"end": 5286,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 5267,
											"end": 5286,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 5045,
											"end": 5292,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 2550,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2694,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2701,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2723,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 2711,
											"end": 2730,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2737,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1574,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1575,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1431,
											"end": 1582,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 1997,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "AND",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1903,
											"end": 2013,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1750,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1874,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3467,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3539,
											"end": 3543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 868,
											"end": 892,
											"name": "PUSH",
											"source": 15,
											"value": "B5B47644C905F9C9F971BBB9C430FE3B99FE3674E04E8312AF23BBB168C5DEB0"
										},
										{
											"begin": 3583,
											"end": 3591,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3562,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3562,
											"end": 3592,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 2743,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8859,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8839,
											"end": 8860,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8896,
											"end": 8898,
											"name": "PUSH",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8894,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8869,
											"end": 8899,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8935,
											"end": 8969,
											"name": "PUSH",
											"source": 19,
											"value": "626574206561726E696E6773206D757374206265206772656174657220746861"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8915,
											"end": 8933,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8908,
											"end": 8970,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8979,
											"end": 9012,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9029,
											"end": 9048,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 9029,
											"end": 9048,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 8829,
											"end": 9054,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 2817,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2943,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2926,
											"end": 2936,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2926,
											"end": 2936,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 2912,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2943,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2943,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2973,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2961,
											"end": 2977,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7682,
											"end": 7684,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7664,
											"end": 7685,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7701,
											"end": 7719,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7694,
											"end": 7724,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7760,
											"end": 7794,
											"name": "PUSH",
											"source": 19,
											"value": "686F6C6465727327207368617265206D75737420626520677265617465722074"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7733,
											"end": 7795,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7804,
											"end": 7839,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7856,
											"end": 7875,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 7856,
											"end": 7875,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 7654,
											"end": 7881,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 2953,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3029,
											"end": 3051,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3065,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 3055,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3029,
											"end": 3087,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3029,
											"end": 3087,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3122,
											"end": 3123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3119,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6371,
											"end": 6392,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6428,
											"end": 6430,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6401,
											"end": 6431,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6467,
											"end": 6501,
											"name": "PUSH",
											"source": 19,
											"value": "65636F73797374656D207368617265206D757374206265206772656174657220"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6447,
											"end": 6465,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6440,
											"end": 6502,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7468616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6518,
											"end": 6536,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6511,
											"end": 6547,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6564,
											"end": 6583,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 6564,
											"end": 6583,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 6361,
											"end": 6589,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 3097,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3225,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3209,
											"end": 3225,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 3177,
											"end": 3242,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3195,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3225,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3227,
											"end": 3241,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 3177,
											"end": 3242,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 3177,
											"end": 3242,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 3177,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3285,
											"end": 3299,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3285,
											"end": 3299,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 3253,
											"end": 3314,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3285,
											"end": 3299,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3301,
											"end": 3313,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3253,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 3253,
											"end": 3314,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 1021,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 1000,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2120,
											"end": 2136,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6778,
											"end": 6799,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6815,
											"end": 6833,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6838,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6874,
											"end": 6908,
											"name": "PUSH",
											"source": 19,
											"value": "5669672070657263656E74616765206D75737420626520657870726573736564"
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6847,
											"end": 6909,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6945,
											"end": 6979,
											"name": "PUSH",
											"source": 19,
											"value": "20696E203020746F2031302070657263656E746167652E204578616D706C653A"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6918,
											"end": 6980,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "101B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6996,
											"end": 7015,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6989,
											"end": 7022,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7039,
											"end": 7058,
											"name": "PUSH",
											"source": 19,
											"value": "A4"
										},
										{
											"begin": 7039,
											"end": 7058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "154"
										},
										{
											"begin": 6768,
											"end": 7064,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 2099,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2238,
											"end": 2251,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2272,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7565,
											"end": 7569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7666,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8028,
											"end": 8178,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 8028,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8098,
											"end": 8102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 8126,
											"end": 8129,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8146,
											"end": 8169,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8121,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8121,
											"end": 8171,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1978,
											"end": 2144,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1978,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2082,
											"end": 2086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2106,
											"end": 2137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2106,
											"end": 2137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2404,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2233,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2339,
											"end": 2343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2321,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2375,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2381,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2363,
											"end": 2397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2363,
											"end": 2397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9286,
											"end": 9442,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 9286,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9360,
											"end": 9367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 9414,
											"end": 9417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9426,
											"end": 9431,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8829,
											"end": 8944,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8829,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8892,
											"end": 8899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8918,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 8926,
											"end": 8929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4444,
											"end": 4462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4469,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3703,
											"end": 3737,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2113,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2432,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2411,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2192,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2488,
											"end": 2500,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7969,
											"end": 7973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7975,
											"end": 7982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8346,
											"end": 8502,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 8346,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 8450,
											"end": 8453,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8470,
											"end": 8493,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8442,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 8442,
											"end": 8495,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4878,
											"end": 4885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4897,
											"end": 4922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4811,
											"end": 4929,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8446,
											"end": 8448,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8449,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8485,
											"end": 8487,
											"name": "PUSH",
											"source": 19,
											"value": "2A"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8465,
											"end": 8483,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8458,
											"end": 8488,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8524,
											"end": 8558,
											"name": "PUSH",
											"source": 19,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8504,
											"end": 8522,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8497,
											"end": 8559,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8568,
											"end": 8608,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 8625,
											"end": 8644,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8418,
											"end": 8650,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1740,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 1943,
											"end": 1954,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4724,
											"end": 4754,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4790,
											"end": 4824,
											"name": "PUSH",
											"source": 19,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4763,
											"end": 4825,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4842,
											"end": 4860,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4684,
											"end": 4866,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2685,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2751,
											"end": 2755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2907,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2937,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3291,
											"end": 3329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3363,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3473,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3470,
											"end": 3492,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3630,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3740,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3400,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3893,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3968,
											"end": 3980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3986,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3987,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3987,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2918,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4051,
											"end": 4056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5994,
											"end": 6024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6060,
											"end": 6094,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6033,
											"end": 6095,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6104,
											"end": 6140,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 5954,
											"end": 6182,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8091,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8129,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8107,
											"end": 8125,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8100,
											"end": 8130,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8166,
											"end": 8197,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8164,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8139,
											"end": 8198,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 8215,
											"end": 8233,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8060,
											"end": 8239,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 690,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 393,
											"end": 690,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 460,
											"end": 466,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 510,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 492,
											"end": 499,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 484,
											"end": 516,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 481,
											"end": 483,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 534,
											"end": 540,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 519,
											"end": 541,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 481,
											"end": 483,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 571,
											"end": 580,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 565,
											"end": 581,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 624,
											"end": 629,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 617,
											"end": 630,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 610,
											"end": 631,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 603,
											"end": 608,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 600,
											"end": 632,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 590,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 590,
											"end": 592,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 651,
											"end": 657,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 643,
											"end": 649,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 636,
											"end": 658,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 695,
											"end": 885,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 695,
											"end": 885,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 754,
											"end": 760,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 795,
											"end": 804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 786,
											"end": 793,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 782,
											"end": 805,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 778,
											"end": 810,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 775,
											"end": 777,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 775,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 775,
											"end": 777,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 813,
											"end": 835,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 775,
											"end": 777,
											"name": "tag",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 775,
											"end": 777,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 856,
											"end": 879,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 856,
											"end": 879,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 765,
											"end": 885,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 885,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 1154,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 958,
											"end": 964,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1016,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 998,
											"end": 1005,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 990,
											"end": 1022,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 987,
											"end": 989,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 987,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 987,
											"end": 989,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1025,
											"end": 1047,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 987,
											"end": 989,
											"name": "tag",
											"source": 19,
											"value": "391"
										},
										{
											"begin": 987,
											"end": 989,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1068,
											"end": 1091,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1091,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1058,
											"end": 1091,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "379"
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1110,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1148,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1100,
											"end": 1148,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 977,
											"end": 1154,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1159,
											"end": 1417,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 1159,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1285,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1294,
											"end": 1316,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "tag",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1246,
											"end": 1417,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1422,
											"end": 1728,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 1422,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1512,
											"end": 1519,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1508,
											"end": 1531,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1504,
											"end": 1536,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1546,
											"end": 1552,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1637,
											"end": 1669,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1627,
											"end": 1670,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1627,
											"end": 1670,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2191,
											"end": 2465,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 2191,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2408,
											"end": 2412,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2396,
											"end": 2413,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2443,
											"end": 2459,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2328,
											"end": 2465,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2465,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2470,
											"end": 3256,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 2470,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2881,
											"end": 2906,
											"name": "PUSH",
											"source": 19,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 2907,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2942,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2930,
											"end": 2943,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2993,
											"end": 3005,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2986,
											"end": 2990,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2974,
											"end": 2991,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "tag",
											"source": 19,
											"value": "406"
										},
										{
											"begin": 2952,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3033,
											"end": 3049,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3065,
											"end": 3076,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3065,
											"end": 3076,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3065,
											"end": 3076,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3194,
											"end": 3196,
											"name": "PUSH",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3197,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3179,
											"end": 3183,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 3145,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3228,
											"end": 3245,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 19,
											"value": "28"
										},
										{
											"begin": 3224,
											"end": 3250,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3224,
											"end": 3250,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 2859,
											"end": 3256,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 3256,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4122,
											"end": 4505,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 4122,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4326,
											"end": 4344,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4319,
											"end": 4353,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 4362,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4468,
											"end": 4483,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4449,
											"end": 4494,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4496,
											"end": 4498,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4445,
											"end": 4499,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4445,
											"end": 4499,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4243,
											"end": 4505,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4505,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7069,
											"end": 7475,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 7069,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7253,
											"end": 7274,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7310,
											"end": 7312,
											"name": "PUSH",
											"source": 19,
											"value": "2A"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7283,
											"end": 7313,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7349,
											"end": 7383,
											"name": "PUSH",
											"source": 19,
											"value": "596F752068617665206E6F2070726976696C65676520746F2072756E20746869"
										},
										{
											"begin": 7344,
											"end": 7346,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7322,
											"end": 7384,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7415,
											"end": 7417,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7400,
											"end": 7418,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7393,
											"end": 7433,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7243,
											"end": 7475,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 9657,
											"end": 9785,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 9657,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9697,
											"end": 9700,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 9721,
											"end": 9722,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9718,
											"end": 9731,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 9715,
											"end": 9717,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 9734,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9705,
											"end": 9785,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 9790,
											"end": 10007,
											"name": "tag",
											"source": 19,
											"value": "222"
										},
										{
											"begin": 9790,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9857,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9881,
											"end": 9912,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9881,
											"end": 9912,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 9932,
											"end": 9933,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 9925,
											"end": 9940,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9953,
											"end": 9968,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "tag",
											"source": 19,
											"value": "432"
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9836,
											"end": 10007,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "tag",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 10012,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10052,
											"end": 10059,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 10106,
											"end": 10120,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 10103,
											"end": 10104,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10100,
											"end": 10121,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10081,
											"end": 10098,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10077,
											"end": 10122,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10165,
											"end": 10174,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 10165,
											"end": 10174,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10064,
											"end": 10180,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10185,
											"end": 10310,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 10185,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10225,
											"end": 10229,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10250,
											"end": 10251,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10247,
											"end": 10255,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 10258,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10295,
											"end": 10304,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10295,
											"end": 10304,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10234,
											"end": 10310,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10315,
											"end": 10573,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 10315,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10408,
											"end": 10409,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10405,
											"end": 10418,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10487,
											"end": 10498,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10481,
											"end": 10499,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 10468,
											"end": 10479,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10468,
											"end": 10479,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10468,
											"end": 10479,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10461,
											"end": 10500,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 10436,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 10397,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10528,
											"end": 10534,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10522,
											"end": 10535,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10560,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10549,
											"end": 10552,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10545,
											"end": 10561,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10538,
											"end": 10565,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10519,
											"end": 10521,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10368,
											"end": 10573,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10578,
											"end": 10714,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 10578,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10635,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 10635,
											"end": 10637,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10625,
											"end": 10714,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10719,
											"end": 10846,
											"name": "tag",
											"source": 19,
											"value": "430"
										},
										{
											"begin": 10719,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10780,
											"end": 10790,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B71"
										},
										{
											"begin": 10775,
											"end": 10778,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 10768,
											"end": 10769,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10761,
											"end": 10792,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10811,
											"end": 10815,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10801,
											"end": 10816,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10835,
											"end": 10839,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10825,
											"end": 10840,
											"name": "REVERT",
											"source": 19
										}
									],
									".data": {
										"4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F": "74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639"
									}
								},
								"1509970658320CF711C24D98099E2B1D5DFD240BA4E3E67EEDD50A039033D4BF": "b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0",
								"4917D2EC71FC5B9D888A6CAF3DB5FE22F73AE7B547E1189EDF853BEDC86A586F": "74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639",
								"66DE2D57F1E19309316D1BEC7E9BDEE6DCD35EE6D22DE30E180FB9858210C7E5": "c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c"
							}
						},
						"methodIdentifiers": {
							"BLACKLIST()": "c8b0cf68",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"EVENT_ADMIN()": "b501ec97",
							"SYSTEM_ADMIN()": "852757ad",
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"factory()": "c45a0155",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setEcosystemAddress(address)": "a8e01b28",
							"setFactory(address)": "5bb47808",
							"setHoldersAddress(address)": "327372e4",
							"setStableCoin(address)": "23af4e17",
							"setVigPercentage(uint256)": "d6c1ca26",
							"setVigPercentageShares(uint256,uint256)": "64886880",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLACKLIST\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EVENT_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYSTEM_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setHoldersAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"setStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setVigPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hVig\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eVig\",\"type\":\"uint256\"}],\"name\":\"setVigPercentageShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Web3BetsFO.sol\":\"Web3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/Web3BetsFO.sol\":{\"keccak256\":\"0xdf2d8da635a027c032b422ba2cd5a559095f44036c1e47274bbf403f717eddf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f744a1ba974f719f895440266918ecb2abbab274685001b42fb1ca21f8e200f\",\"dweb:/ipfs/QmdngciFYmb7tpFeV65AeNLZnBrrYAM3ejczK5xrBghNkD\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0x7416e4a04af3bdfdad54246180d322fc4aa12a73fd183576faa06cce3efd66b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ed3fb186515a6546f1f016adc61be2874dbc1964531bf66e9469ef80209414\",\"dweb:/ipfs/QmQspA6qDCZoct316imYrdJvDrdVhmbQ5yLpgrE3LNFWXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 338,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "_roleMembers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(AddressSet)1828_storage)"
							},
							{
								"astId": 2453,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "factory",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2456,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2459,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2462,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "stableCoin",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 2466,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "holdersVig",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2470,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "ecosystemVig",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2474,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "vigPercentage",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2480,
								"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
								"label": "_stableCoinWrapper",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IERC20)620"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)620": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(AddressSet)1828_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressSet)1828_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1828_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1827,
										"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)1527_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)1527_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 1522,
										"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 1526,
										"contract": "contracts/Web3BetsFO.sol:Web3BetsFO",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IBet.sol": {
				"IBet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pairAddress",
									"type": "address"
								}
							],
							"name": "addPair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "better",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBetPairs",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "market",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketSide",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "matched",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "odds",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMatched",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPair(address)": "c2b7bbb6",
							"better()": "718c7d44",
							"getBetPairs()": "12713ee4",
							"market()": "80f55605",
							"marketSide()": "fa6ead20",
							"matched()": "8aac9cca",
							"odds()": "233de126",
							"setMatched(uint256)": "5a4cfc06",
							"stake()": "3a4b66f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"}],\"name\":\"addPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"better\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBetPairs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketSide\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"odds\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMatched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IBet.sol\":\"IBet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IBet.sol\":{\"keccak256\":\"0x2c21a42a1340fcdfd25037d486a4f920c20ee8de203d0c28db92e3ef186c0571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://585969eb05acee4faa42bab41c115cc2834156f36396dd0d7c752df7d2b600d4\",\"dweb:/ipfs/QmZ68XgPkX1ecCKTCZxgtvH4YrLR7E27msfAedZ99St4bU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IBetPair.sol": {
				"IBetPair": {
					"abi": [
						{
							"inputs": [],
							"name": "amountA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "market",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "setWinnerBet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideABet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideBBet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerBet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"amountA()": "156dcbf0",
							"amountB()": "2efe91ef",
							"market()": "80f55605",
							"setWinnerBet(address)": "6d83a71f",
							"sideABet()": "15e894ab",
							"sideBBet()": "0f765e6d",
							"winnerAddress()": "ed7a4e0b",
							"winnerBet()": "baa1a3ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"amountA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setWinnerBet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideABet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideBBet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerBet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IBetPair.sol\":\"IBetPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IBetPair.sol\":{\"keccak256\":\"0x856f35ffffe237c22cc04dea0c0909346fa7cea1318a195488af92aaa851083c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8d1fcf33e25e655338a10463ce4f10f4233b13fafc48513df387ef20c947326\",\"dweb:/ipfs/QmVxGA64KtQuyz2AqLpEa9PjfvspJLT6JUjor35YQobicJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"IWeb3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"factory()": "c45a0155",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IWeb3BetsFO.sol\":\"IWeb3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0x7416e4a04af3bdfdad54246180d322fc4aa12a73fd183576faa06cce3efd66b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ed3fb186515a6546f1f016adc61be2874dbc1964531bf66e9469ef80209414\",\"dweb:/ipfs/QmQspA6qDCZoct316imYrdJvDrdVhmbQ5yLpgrE3LNFWXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							1254
						],
						"ERC165": [
							1504
						],
						"IAccessControl": [
							517
						],
						"IERC165": [
							1516
						],
						"Strings": [
							1480
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 518,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1255,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1481,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1505,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1254,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 517,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1504,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								1504,
								1516,
								517,
								1254
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1503
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$517_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$517_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$517",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1503,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										484
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1480,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1480_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1480,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1480_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										492
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										500
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4919:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4929:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4929:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4929:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4899:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4899:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4890:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4890:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4825:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4881:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4843:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4835:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4834:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4919:0:0"
									},
									"scope": 319,
									"src": "4816:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										508
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5345:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5355:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4967:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5316:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5316:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5250:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5307:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5345:0:0"
									},
									"scope": 319,
									"src": "5241:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										516
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "6002:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "6020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "6031:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6031:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6020:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6045:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6012:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "6012:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "6118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "6106:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6106:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6106:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5394:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5934:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5993:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5947:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5969:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5961:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6002:0:0"
									},
									"scope": 319,
									"src": "5925:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6892:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6902:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6902:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6902:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6145:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6833:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6843:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6892:0:0"
									},
									"scope": 319,
									"src": "6824:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "7132:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7150:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "7142:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "7170:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7170:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7142:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7205:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7198:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7198:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7198:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7198:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7270:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7289:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "7247:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7247:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7242:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6940:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7068:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7082:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7104:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7096:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7081:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7132:0:0"
									},
									"scope": 319,
									"src": "7059:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7542:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7556:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7565:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7557:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7552:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7581:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7595:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7602:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7595:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7595:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7616:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7595:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7627:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7595:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7595:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7662:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7668:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1244,
																			"src": "7677:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7677:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "7650:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7650:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7645:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7312:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7483:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7494:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7542:0:0"
									},
									"scope": 319,
									"src": "7474:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7947:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7969:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7961:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7957:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7985:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7999:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "8006:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7999:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7999:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8020:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7999:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8031:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7999:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7999:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8067:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8073:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1244,
																			"src": "8082:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8082:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "8055:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8055:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "8050:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7713:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7887:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7907:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7899:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7947:0:0"
									},
									"scope": 319,
									"src": "7878:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6308:0",
							"usedErrors": []
						}
					],
					"src": "108:8007:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"AccessControlEnumerable": [
							444
						],
						"Context": [
							1254
						],
						"ERC165": [
							1504
						],
						"EnumerableSet": [
							2115
						],
						"IAccessControl": [
							517
						],
						"IAccessControlEnumerable": [
							542
						],
						"IERC165": [
							1516
						],
						"Strings": [
							1480
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol",
							"file": "./IAccessControlEnumerable.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 445,
							"sourceUnit": 543,
							"src": "143:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "./AccessControl.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 445,
							"sourceUnit": 320,
							"src": "184:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "../utils/structs/EnumerableSet.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 445,
							"sourceUnit": 2116,
							"src": "214:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "IAccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 542,
										"src": "400:24:1"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "400:24:1"
								},
								{
									"baseName": {
										"id": 328,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "426:13:1"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "426:13:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "260:94:1",
								"text": " @dev Extension of {AccessControl} that allows enumerating the members of each role."
							},
							"fullyImplemented": true,
							"id": 444,
							"linearizedBaseContracts": [
								444,
								319,
								1504,
								1516,
								542,
								517,
								1254
							],
							"name": "AccessControlEnumerable",
							"nameLocation": "373:23:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 333,
									"libraryName": {
										"id": 330,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2115,
										"src": "452:13:1"
									},
									"nodeType": "UsingForDirective",
									"src": "446:49:1",
									"typeName": {
										"id": 332,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 331,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1828,
											"src": "470:24:1"
										},
										"referencedDeclaration": 1828,
										"src": "470:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_roleMembers",
									"nameLocation": "554:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 444,
									"src": "501:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1828_storage_$",
										"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
									},
									"typeName": {
										"id": 337,
										"keyType": {
											"id": 334,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "501:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1828_storage_$",
											"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet)"
										},
										"valueType": {
											"id": 336,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 335,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1828,
												"src": "520:24:1"
											},
											"referencedDeclaration": 1828,
											"src": "520:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "725:121:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 347,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "742:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 349,
																		"name": "IAccessControlEnumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "762:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$542_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlEnumerable_$542_$",
																			"typeString": "type(contract IAccessControlEnumerable)"
																		}
																	],
																	"id": 348,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "757:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "757:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlEnumerable_$542",
																	"typeString": "type(contract IAccessControlEnumerable)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "757:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "742:57:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 355,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "827:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 353,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "803:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$444_$",
																	"typeString": "type(contract super AccessControlEnumerable)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "803:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "803:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "742:97:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 346,
												"id": 358,
												"nodeType": "Return",
												"src": "735:104:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "573:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "643:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "701:8:1"
									},
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "668:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "661:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 340,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "661:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:20:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "719:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "719:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:6:1"
									},
									"scope": 444,
									"src": "634:212:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										533
									],
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "1530:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "1569:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 371,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "1547:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1828_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 373,
															"indexExpression": {
																"id": 372,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "1560:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1828_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1951,
														"src": "1547:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1828_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1828_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1547:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 370,
												"id": 377,
												"nodeType": "Return",
												"src": "1540:35:1"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "852:574:1",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "1440:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1503:8:1"
									},
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1454:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 362,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1476:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1468:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:29:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1521:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:9:1"
									},
									"scope": 444,
									"src": "1431:151:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										541
									],
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1839:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 388,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "1856:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1828_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 390,
															"indexExpression": {
																"id": 389,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "1869:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1856:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1828_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1924,
														"src": "1856:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1828_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1828_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 393,
												"nodeType": "Return",
												"src": "1849:34:1"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "1588:157:1",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "1759:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 384,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1812:8:1"
									},
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1786:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1778:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:14:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1830:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:9:1"
									},
									"scope": 444,
									"src": "1750:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										287
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2055:89:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2082:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 408,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2088:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 404,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2065:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$444_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_grantRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 287,
														"src": "2065:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "2065:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2129:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 411,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2106:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1828_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 413,
															"indexExpression": {
																"id": 412,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "2119:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2106:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1828_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1855,
														"src": "2106:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1828_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1828_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2106:31:1"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "1896:77:1",
										"text": " @dev Overload {_grantRole} to track enumerable memberships"
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "1987:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 402,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2046:8:1"
									},
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1998:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:31:1"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2055:0:1"
									},
									"scope": 444,
									"src": "1978:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										318
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "2311:93:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "2339:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 432,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "2345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 428,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2321:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_AccessControlEnumerable_$444_$",
																"typeString": "type(contract super AccessControlEnumerable)"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_revokeRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 318,
														"src": "2321:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "2321:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "2389:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 435,
																"name": "_roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "2363:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_AddressSet_$1828_storage_$",
																	"typeString": "mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"
																}
															},
															"id": 437,
															"indexExpression": {
																"id": 436,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "2376:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2363:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1828_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1882,
														"src": "2363:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1828_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1828_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2363:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "2363:34:1"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2150:78:1",
										"text": " @dev Overload {_revokeRole} to track enumerable memberships"
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "2242:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 426,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2302:8:1"
									},
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2262:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2254:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2276:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2268:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2253:31:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2311:0:1"
									},
									"scope": 444,
									"src": "2233:171:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 445,
							"src": "355:2051:1",
							"usedErrors": []
						}
					],
					"src": "118:2289:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							517
						]
					},
					"id": 518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 447,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 517,
							"linearizedBaseContracts": [
								517
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 456,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "560:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "582:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "617:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 453,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:2"
									},
									"src": "537:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 465,
									"name": "RoleGranted",
									"nameLocation": "876:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 458,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "910:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "935:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:2"
									},
									"src": "870:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 474,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 467,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1285:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1310:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:2"
									},
									"src": "1245:89:2"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 517,
									"src": "1421:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1715:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:2"
									},
									"scope": 517,
									"src": "1693:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2030:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 494,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2044:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:2"
									},
									"scope": 517,
									"src": "2011:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2324:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:2"
									},
									"scope": 517,
									"src": "2304:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2877:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 510,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:2"
									},
									"scope": 517,
									"src": "2855:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 518,
							"src": "209:2710:2",
							"usedErrors": []
						}
					],
					"src": "94:2826:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol",
					"exportedSymbols": {
						"IAccessControl": [
							517
						],
						"IAccessControlEnumerable": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 543,
							"sourceUnit": 518,
							"src": "129:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 522,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 517,
										"src": "299:14:3"
									},
									"id": 523,
									"nodeType": "InheritanceSpecifier",
									"src": "299:14:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 521,
								"nodeType": "StructuredDocumentation",
								"src": "161:99:3",
								"text": " @dev External interface of AccessControlEnumerable declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 542,
							"linearizedBaseContracts": [
								542,
								517
							],
							"name": "IAccessControlEnumerable",
							"nameLocation": "271:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "320:574:3",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "908:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "930:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "922:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:29:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "974:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:9:3"
									},
									"scope": 542,
									"src": "899:84:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "989:157:3",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "1160:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1187:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1179:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 535,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:14:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1216:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1215:9:3"
									},
									"scope": 542,
									"src": "1151:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 543,
							"src": "261:966:3",
							"usedErrors": []
						}
					],
					"src": "104:1124:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							620
						]
					},
					"id": 621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 545,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 620,
							"linearizedBaseContracts": [
								620
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 554,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 563,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 620,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 620,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 620,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 620,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 620,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 620,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 621,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2661:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 622,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 623,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1494:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1519:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1542:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1568:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 633,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1585:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1604:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 637,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:5"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:5"
									},
									"scope": 656,
									"src": "1446:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1950:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:5"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "1988:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:5"
									},
									"scope": 656,
									"src": "1934:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:5"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2240:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 652,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:5"
									},
									"scope": 656,
									"src": "2189:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 657,
							"src": "620:1631:5",
							"usedErrors": []
						}
					],
					"src": "114:2138:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1232
						],
						"IERC20": [
							620
						],
						"IERC20Permit": [
							656
						],
						"SafeERC20": [
							937
						]
					},
					"id": 938,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 621,
							"src": "140:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 657,
							"src": "164:46:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 661,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 1233,
							"src": "211:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 662,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 937,
							"linearizedBaseContracts": [
								937
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 665,
									"libraryName": {
										"id": 663,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1232,
										"src": "737:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:6",
									"typeName": {
										"id": 664,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "865:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 676,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "895:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 679,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "925:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$620",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 587,
																		"src": "925:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 682,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "950:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 683,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "954:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 677,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 675,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "875:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "875:86:6"
											}
										]
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$620",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 666,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "794:6:6"
													},
													"referencedDeclaration": 620,
													"src": "794:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$620",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "816:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "836:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:6"
									},
									"scope": 937,
									"src": "763:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "1102:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "1132:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 704,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "1162:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$620",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 619,
																		"src": "1162:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 707,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "1191:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 708,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "1197:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "1201:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 702,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 700,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "1112:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:6"
											}
										]
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1009:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$620",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 690,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 689,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "1009:6:6"
													},
													"referencedDeclaration": 620,
													"src": "1009:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$620",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1031:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1053:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1073:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:6"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:6"
									},
									"scope": 937,
									"src": "974:241:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "1581:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 726,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "1830:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 729,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 734,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$937",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$937",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 732,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 720,
																					"src": "1877:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 730,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 718,
																					"src": "1846:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$620",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 597,
																				"src": "1846:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 746,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "2001:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 749,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "2031:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$620",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 607,
																		"src": "2031:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 752,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "2055:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "2064:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 747,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 745,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "1981:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:6"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1505:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$620",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 716,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "1505:6:6"
													},
													"referencedDeclaration": 620,
													"src": "1505:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$620",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1527:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1552:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:6"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:6"
									},
									"scope": 937,
									"src": "1475:603:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "2200:194:6",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "2210:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 774,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$937",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$937",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 772,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 776,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2264:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 770,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "2233:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$620",
																	"typeString": "contract IERC20"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 597,
															"src": "2233:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 778,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2275:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "2310:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 785,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 761,
																			"src": "2340:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$620",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 607,
																		"src": "2340:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 788,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "2364:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 789,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "2373:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2290:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:6"
											}
										]
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2124:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$620",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "2124:6:6"
													},
													"referencedDeclaration": 620,
													"src": "2124:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$620",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2146:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "2171:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:6"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:6"
									},
									"scope": 937,
									"src": "2084:310:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2516:370:6",
										"statements": [
											{
												"id": 840,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:6",
												"statements": [
													{
														"assignments": [
															805
														],
														"declarations": [
															{
																"constant": false,
																"id": 805,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 840,
																"src": "2550:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 804,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 814,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 810,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$937",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$937",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 808,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 812,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "2604:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 806,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "2573:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$620",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 597,
																"src": "2573:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 816,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "2634:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "2650:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 815,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 821,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:6"
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 840,
																"src": "2715:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 827,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "2738:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 825,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "2753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "2792:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$620",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 832,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 797,
																					"src": "2822:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$620",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 607,
																				"src": "2822:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 835,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "2846:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 836,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "2855:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 830,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$620",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 828,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "2772:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 839,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:6"
													}
												]
											}
										]
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2440:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$620",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 795,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "2440:6:6"
													},
													"referencedDeclaration": 620,
													"src": "2440:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$620",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2462:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2487:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:6"
									},
									"scope": 937,
									"src": "2400:486:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "3107:257:6",
										"statements": [
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "3117:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"arguments": [
														{
															"id": 866,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3152:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 864,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "3139:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$656",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 649,
														"src": "3139:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3181:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "3188:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "3197:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 875,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3204:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 876,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3214:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 877,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3217:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 878,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3220:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 869,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "3168:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$656",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 641,
														"src": "3168:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:6"
											},
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "3232:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"id": 885,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "3266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 883,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "3253:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$656",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 649,
														"src": "3253:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 882,
																"src": "3290:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "3304:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:6"
											}
										]
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2921:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$656",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 843,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 656,
														"src": "2921:12:6"
													},
													"referencedDeclaration": 656,
													"src": "2921:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$656",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2949:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2972:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2997:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3020:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3046:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 854,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3063:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3082:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:6"
									},
									"scope": 937,
									"src": "2892:472:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3817:636:6",
										"statements": [
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "4166:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"arguments": [
														{
															"id": 914,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "4220:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 911,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$620",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$620",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1026,
														"src": "4192:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 918,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "4275:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "4271:176:6",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "4298:149:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 925,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "4370:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 927,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 926,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 928,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 923,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 922,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$620",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 900,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 620,
														"src": "3776:6:6"
													},
													"referencedDeclaration": 620,
													"src": "3776:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$620",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3790:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:6"
									},
									"scope": 937,
									"src": "3747:706:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 938,
							"src": "707:3748:6",
							"usedErrors": []
						}
					],
					"src": "115:4341:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1232
						]
					},
					"id": 1233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 939,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 940,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1232,
							"linearizedBaseContracts": [
								1232
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 948,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 947,
												"id": 953,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1232,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 966,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1232",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1232",
																				"typeString": "library Address"
																			}
																		],
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 964,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 969,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													975,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 988,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 974,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 982,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 976,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 978,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 984,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1232,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3555:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "3585:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "3593:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 999,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1006,
															1026
														],
														"referencedDeclaration": 1026,
														"src": "3572:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 998,
												"id": 1004,
												"nodeType": "Return",
												"src": "3565:67:7"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1232,
									"src": "3466:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "4008:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1019,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "4047:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "4055:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1022,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "4064:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1018,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1046,
															1096
														],
														"referencedDeclaration": 1096,
														"src": "4025:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1024,
												"nodeType": "Return",
												"src": "4018:59:7"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1010,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1012,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:7"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "3994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:7"
									},
									"scope": 1232,
									"src": "3861:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "4589:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1039,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "4628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1040,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "4636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1041,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "4642:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1038,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1046,
															1096
														],
														"referencedDeclaration": 1096,
														"src": "4606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1044,
												"nodeType": "Return",
												"src": "4599:94:7"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4486:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4510:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:7"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "4575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:7"
									},
									"scope": 1232,
									"src": "4446:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "5127:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1063,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1232",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1232",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1061,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1066,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "5170:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1073,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5247:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1072,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5236:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:7"
											},
											{
												"assignments": [
													1079,
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "5300:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "5314:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1080,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "5367:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1082,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "5341:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "5360:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "5406:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1091,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "5415:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1092,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "5427:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1089,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "5389:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1094,
												"nodeType": "Return",
												"src": "5382:58:7"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "4988:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5012:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5039:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5062:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:7"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5113:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:7"
									},
									"scope": 1232,
									"src": "4948:499:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "5724:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5760:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "5768:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1106,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1113,
															1148
														],
														"referencedDeclaration": 1148,
														"src": "5741:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1111,
												"nodeType": "Return",
												"src": "5734:80:7"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5668:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:7"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5710:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:7"
									},
									"scope": 1232,
									"src": "5624:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "6163:228:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1127,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "6192:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1126,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "6181:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:7"
											},
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "6252:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1147,
														"src": "6266:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "6311:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6293:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "6350:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1143,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "6359:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1144,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "6371:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1141,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "6333:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1146,
												"nodeType": "Return",
												"src": "6326:58:7"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "6042:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "6066:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "6093:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:7"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "6149:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:7"
									},
									"scope": 1232,
									"src": "6005:386:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "6667:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "6705:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "6713:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1158,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1165,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "6684:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1163,
												"nodeType": "Return",
												"src": "6677:84:7"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "6600:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:7"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "6653:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:7"
									},
									"scope": 1232,
									"src": "6570:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "7109:232:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1179,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "7138:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1178,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "7127:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:7"
											},
											{
												"assignments": [
													1185,
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "7200:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1184,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1199,
														"src": "7214:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1186,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"arguments": [
														{
															"id": 1190,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "7261:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "7241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "7300:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1195,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "7309:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1196,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "7321:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1193,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "7283:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1198,
												"nodeType": "Return",
												"src": "7276:58:7"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "6993:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "7017:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "7044:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:7"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "7095:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:7"
									},
									"scope": 1232,
									"src": "6954:387:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "7721:582:7",
										"statements": [
											{
												"condition": {
													"id": 1212,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1203,
													"src": "7735:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "7792:505:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1216,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1205,
																		"src": "7876:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1226,
																"nodeType": "Block",
																"src": "8234:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1223,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "8259:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1222,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1225,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:7"
																	}
																]
															},
															"id": 1227,
															"nodeType": "IfStatement",
															"src": "7872:415:7",
															"trueBody": {
																"id": 1221,
																"nodeType": "Block",
																"src": "7899:329:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:7"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1205,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1205,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1220,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "7731:566:7",
												"trueBody": {
													"id": 1215,
													"nodeType": "Block",
													"src": "7744:42:7",
													"statements": [
														{
															"expression": {
																"id": 1213,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "7765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1211,
															"id": 1214,
															"nodeType": "Return",
															"src": "7758:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:7",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "7596:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "7618:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "7651:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:7"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "7707:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:7"
									},
									"scope": 1232,
									"src": "7561:742:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1233,
							"src": "194:8111:7",
							"usedErrors": []
						}
					],
					"src": "101:8205:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1254
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1235,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1240,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1242,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1254,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1249,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1248,
												"id": 1251,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1254,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1255,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							1480
						]
					},
					"id": 1481,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1480,
							"linearizedBaseContracts": [
								1480
							],
							"name": "Strings",
							"nameLocation": "169:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1260,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1480,
									"src": "183:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1258,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1259,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1263,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1480,
									"src": "247:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1261,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "463:632:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1271,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "665:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1277,
												"nodeType": "IfStatement",
												"src": "661:51:9",
												"trueBody": {
													"id": 1276,
													"nodeType": "Block",
													"src": "677:35:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 1270,
															"id": 1275,
															"nodeType": "Return",
															"src": "691:10:9"
														}
													]
												}
											},
											{
												"assignments": [
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "721:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1281,
												"initialValue": {
													"id": 1280,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1266,
													"src": "736:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:9"
											},
											{
												"assignments": [
													1283
												],
												"declarations": [
													{
														"constant": false,
														"id": 1283,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "751:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:9"
											},
											{
												"body": {
													"id": 1295,
													"nodeType": "Block",
													"src": "793:57:9",
													"statements": [
														{
															"expression": {
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:9",
																"subExpression": {
																	"id": 1288,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "807:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1290,
															"nodeType": "ExpressionStatement",
															"src": "807:8:9"
														},
														{
															"expression": {
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1291,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "829:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1294,
															"nodeType": "ExpressionStatement",
															"src": "829:10:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "782:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "WhileStatement",
												"src": "775:75:9"
											},
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1341,
														"src": "859:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1303,
												"initialValue": {
													"arguments": [
														{
															"id": 1301,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "891:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:9"
											},
											{
												"body": {
													"id": 1334,
													"nodeType": "Block",
													"src": "927:131:9",
													"statements": [
														{
															"expression": {
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1307,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "941:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1310,
															"nodeType": "ExpressionStatement",
															"src": "941:11:9"
														},
														{
															"expression": {
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1311,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "966:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1313,
																	"indexExpression": {
																		"id": 1312,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "973:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 1318,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1323,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1321,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1266,
																									"src": "1009:5:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 1322,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1319,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1316,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1314,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1329,
															"nodeType": "ExpressionStatement",
															"src": "966:56:9"
														},
														{
															"expression": {
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1330,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "1036:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1333,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1304,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "915:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "WhileStatement",
												"src": "908:150:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1338,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "1081:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1336,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1340,
												"nodeType": "Return",
												"src": "1067:21:9"
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "410:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:9"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "448:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:9"
									},
									"scope": 1480,
									"src": "392:703:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "1274:255:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1350,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "1288:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "1284:54:9",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "1300:38:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 1349,
															"id": 1354,
															"nodeType": "Return",
															"src": "1314:13:9"
														}
													]
												}
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "1347:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"id": 1359,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1345,
													"src": "1362:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:9"
											},
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "1377:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1364,
												"initialValue": {
													"hexValue": "30",
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:9"
											},
											{
												"body": {
													"id": 1375,
													"nodeType": "Block",
													"src": "1423:57:9",
													"statements": [
														{
															"expression": {
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:9",
																"subExpression": {
																	"id": 1368,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "1437:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1370,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:9"
														},
														{
															"expression": {
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1371,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "1459:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1365,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "1412:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1376,
												"nodeType": "WhileStatement",
												"src": "1405:75:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "1508:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1379,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "1515:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1377,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1383,
															1459,
															1479
														],
														"referencedDeclaration": 1459,
														"src": "1496:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1381,
												"nodeType": "Return",
												"src": "1489:33:9"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "1221:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:9"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "1259:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:9"
									},
									"scope": 1480,
									"src": "1200:329:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "1742:351:9",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1458,
														"src": "1752:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1393,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1398,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "1788:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1395,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:9"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1404,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "1809:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1406,
														"indexExpression": {
															"hexValue": "30",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:9"
											},
											{
												"expression": {
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1410,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "1834:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1412,
														"indexExpression": {
															"hexValue": "31",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:9"
											},
											{
												"body": {
													"id": 1444,
													"nodeType": "Block",
													"src": "1904:87:9",
													"statements": [
														{
															"expression": {
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1430,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1918:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1432,
																	"indexExpression": {
																		"id": 1431,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "1925:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1433,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "1930:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1437,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1434,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1386,
																			"src": "1943:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1439,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:9"
														},
														{
															"expression": {
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1440,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "1969:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1443,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1424,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1892:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1445,
												"initializationExpression": {
													"assignments": [
														1417
													],
													"declarations": [
														{
															"constant": false,
															"id": 1417,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1445,
															"src": "1864:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1416,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1423,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1419,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "1880:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:9",
														"subExpression": {
															"id": 1427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "1901:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1429,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1447,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "2008:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1455,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "2079:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1453,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1457,
												"nodeType": "Return",
												"src": "2065:21:9"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1673:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1688:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:9"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1727:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:9"
									},
									"scope": 1480,
									"src": "1652:441:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "2318:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1472,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1462,
																			"src": "2363:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1470,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1468,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1475,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "2371:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1467,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1383,
															1459,
															1479
														],
														"referencedDeclaration": 1459,
														"src": "2335:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1466,
												"id": 1477,
												"nodeType": "Return",
												"src": "2328:59:9"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2266:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2303:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:9"
									},
									"scope": 1480,
									"src": "2245:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1481,
							"src": "161:2235:9",
							"usedErrors": []
						}
					],
					"src": "101:2296:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1504
						],
						"IERC165": [
							1516
						]
					},
					"id": 1505,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1482,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1505,
							"sourceUnit": 1517,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1485,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1516,
										"src": "754:7:10"
									},
									"id": 1486,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1484,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1504,
							"linearizedBaseContracts": [
								1504,
								1516
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1515
									],
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1497,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1516_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1516_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1496,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1516",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1501,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1491,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1488,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 1504,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1505,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1516
						]
					},
					"id": 1517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1506,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1507,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1516,
							"linearizedBaseContracts": [
								1516
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1509,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 1516,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1517,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2115
						]
					},
					"id": 2116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1519,
								"nodeType": "StructuredDocumentation",
								"src": "140:1087:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 2115,
							"linearizedBaseContracts": [
								2115
							],
							"name": "EnumerableSet",
							"nameLocation": "1236:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1527,
									"members": [
										{
											"constant": false,
											"id": 1522,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1760:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1527,
											"src": "1750:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1520,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1521,
												"nodeType": "ArrayTypeName",
												"src": "1750:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1526,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1928:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1527,
											"src": "1900:36:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1525,
												"keyType": {
													"id": 1523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1900:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1703:3:12",
									"nodeType": "StructDefinition",
									"scope": 2115,
									"src": "1696:247:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "2182:335:12",
										"statements": [
											{
												"condition": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2196:22:12",
													"subExpression": {
														"arguments": [
															{
																"id": 1539,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "2207:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1540,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "2212:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1538,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "2197:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2197:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1566,
													"nodeType": "Block",
													"src": "2474:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1537,
															"id": 1565,
															"nodeType": "Return",
															"src": "2488:12:12"
														}
													]
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "2192:319:12",
												"trueBody": {
													"id": 1563,
													"nodeType": "Block",
													"src": "2220:248:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1548,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "2251:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1543,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "2234:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1522,
																		"src": "2234:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2234:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2234:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "2234:23:12"
														},
														{
															"expression": {
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1551,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "2392:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1526,
																		"src": "2392:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1555,
																	"indexExpression": {
																		"id": 1553,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "2405:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2392:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1556,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "2414:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1522,
																		"src": "2414:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2414:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2392:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1560,
															"nodeType": "ExpressionStatement",
															"src": "2392:40:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2453:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1537,
															"id": 1562,
															"nodeType": "Return",
															"src": "2446:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "1949:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2122:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2139:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2127:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1529,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "2127:3:12"
													},
													"referencedDeclaration": 1527,
													"src": "2127:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2152:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2144:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:32:12"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "2176:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2176:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:6:12"
									},
									"scope": 2115,
									"src": "2113:404:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "2757:1316:12",
										"statements": [
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2875:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1652,
														"src": "2867:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2867:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1582,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "2888:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1526,
														"src": "2888:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1585,
													"indexExpression": {
														"id": 1584,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "2901:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2888:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2867:40:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2922:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2936:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2922:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1650,
													"nodeType": "Block",
													"src": "4030:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4051:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1579,
															"id": 1649,
															"nodeType": "Return",
															"src": "4044:12:12"
														}
													]
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "2918:1149:12",
												"trueBody": {
													"id": 1647,
													"nodeType": "Block",
													"src": "2939:1085:12",
													"statements": [
														{
															"assignments": [
																1591
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1591,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3299:13:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1647,
																	"src": "3291:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1590,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3291:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1595,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1592,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "3315:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3328:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3315:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3291:38:12"
														},
														{
															"assignments": [
																1597
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1597,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3351:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1647,
																	"src": "3343:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1596,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3343:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1603,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1598,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1573,
																			"src": "3363:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1522,
																		"src": "3363:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3363:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3384:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3363:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3343:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1604,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "3404:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1605,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "3417:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3404:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1631,
															"nodeType": "IfStatement",
															"src": "3400:398:12",
															"trueBody": {
																"id": 1630,
																"nodeType": "Block",
																"src": "3432:366:12",
																"statements": [
																	{
																		"assignments": [
																			1608
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1608,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3458:9:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 1630,
																				"src": "3450:17:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1607,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3450:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1613,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1609,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1573,
																					"src": "3470:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1610,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1522,
																				"src": "3470:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1612,
																			"indexExpression": {
																				"id": 1611,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1597,
																				"src": "3482:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3470:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3450:42:12"
																	},
																	{
																		"expression": {
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1614,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1573,
																						"src": "3592:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1617,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1522,
																					"src": "3592:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1618,
																				"indexExpression": {
																					"id": 1616,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1591,
																					"src": "3604:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3592:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1619,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1608,
																				"src": "3621:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3592:38:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1621,
																		"nodeType": "ExpressionStatement",
																		"src": "3592:38:12"
																	},
																	{
																		"expression": {
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1622,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1573,
																						"src": "3704:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1625,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1526,
																					"src": "3704:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1626,
																				"indexExpression": {
																					"id": 1624,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "3717:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3704:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1627,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1581,
																				"src": "3730:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3704:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1629,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:36:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1632,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1573,
																			"src": "3876:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1522,
																		"src": "3876:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3876:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3876:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1638,
															"nodeType": "ExpressionStatement",
															"src": "3876:17:12"
														},
														{
															"expression": {
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3961:26:12",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1639,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1573,
																			"src": "3968:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1526,
																		"src": "3968:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1642,
																	"indexExpression": {
																		"id": 1641,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "3981:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3968:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "3961:26:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4009:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1579,
															"id": 1646,
															"nodeType": "Return",
															"src": "4002:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "2523:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2694:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2714:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2702:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1571,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "2702:3:12"
													},
													"referencedDeclaration": 1527,
													"src": "2702:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2727:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2719:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1574,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:32:12"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "2751:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2751:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:6:12"
									},
									"scope": 2115,
									"src": "2685:1388:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "4233:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1664,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "4250:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1526,
															"src": "4250:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1667,
														"indexExpression": {
															"id": 1666,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "4263:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4250:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4273:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4250:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1663,
												"id": 1670,
												"nodeType": "Return",
												"src": "4243:31:12"
											}
										]
									},
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "4079:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4163:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4185:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4173:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1655,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "4173:3:12"
													},
													"referencedDeclaration": 1527,
													"src": "4173:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4190:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:32:12"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "4227:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1661,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4227:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:6:12"
									},
									"scope": 2115,
									"src": "4154:127:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "4427:42:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1681,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "4444:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1522,
														"src": "4444:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4444:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1684,
												"nodeType": "Return",
												"src": "4437:25:12"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "4287:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4371:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4391:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "4379:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1674,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "4379:3:12"
													},
													"referencedDeclaration": 1527,
													"src": "4379:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:17:12"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "4418:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:9:12"
									},
									"scope": 2115,
									"src": "4362:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "4887:42:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1697,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "4904:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1522,
														"src": "4904:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1700,
													"indexExpression": {
														"id": 1699,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "4916:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4904:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1701,
												"nodeType": "Return",
												"src": "4897:25:12"
											}
										]
									},
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "4475:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4820:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4836:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "4824:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1689,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1688,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "4824:3:12"
													},
													"referencedDeclaration": 1527,
													"src": "4824:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4849:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "4841:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:32:12"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "4878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:12"
									},
									"scope": 2115,
									"src": "4811:118:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "5543:35:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1713,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "5560:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1522,
													"src": "5560:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1715,
												"nodeType": "Return",
												"src": "5553:18:12"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "4935:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5478:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5498:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "5486:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1705,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "5486:3:12"
													},
													"referencedDeclaration": 1527,
													"src": "5486:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5485:17:12"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "5525:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1709,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5525:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1710,
													"nodeType": "ArrayTypeName",
													"src": "5525:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:18:12"
									},
									"scope": 2115,
									"src": "5469:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1721,
									"members": [
										{
											"constant": false,
											"id": 1720,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5635:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1721,
											"src": "5631:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1719,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1718,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1527,
													"src": "5631:3:12"
												},
												"referencedDeclaration": 1527,
												"src": "5631:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5610:10:12",
									"nodeType": "StructDefinition",
									"scope": 2115,
									"src": "5603:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "5894:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1733,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "5916:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1720,
															"src": "5916:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1735,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "5928:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1732,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "5911:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5911:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1737,
												"nodeType": "Return",
												"src": "5904:30:12"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "5654:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5827:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5850:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5831:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1724,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1723,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "5831:10:12"
													},
													"referencedDeclaration": 1721,
													"src": "5831:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5863:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5855:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:39:12"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "5888:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5888:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:6:12"
									},
									"scope": 2115,
									"src": "5818:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "6188:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1751,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "6213:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1720,
															"src": "6213:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1753,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "6225:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1750,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "6205:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6205:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1755,
												"nodeType": "Return",
												"src": "6198:33:12"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "5947:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6118:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6144:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "6125:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "6125:10:12"
													},
													"referencedDeclaration": 1721,
													"src": "6125:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6157:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "6149:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:39:12"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "6182:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6182:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:6:12"
									},
									"scope": 2115,
									"src": "6109:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "6405:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1769,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "6432:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1720,
															"src": "6432:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1771,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "6444:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1768,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "6422:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6422:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1773,
												"nodeType": "Return",
												"src": "6415:35:12"
											}
										]
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "6244:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6328:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6356:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "6337:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1759,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "6337:10:12"
													},
													"referencedDeclaration": 1721,
													"src": "6337:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6369:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "6361:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1762,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6361:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6336:39:12"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "6399:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:12"
									},
									"scope": 2115,
									"src": "6319:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "6610:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1785,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "6635:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1720,
															"src": "6635:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1784,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "6627:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1788,
												"nodeType": "Return",
												"src": "6620:26:12"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "6463:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6547:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6573:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "6554:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1777,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "6554:10:12"
													},
													"referencedDeclaration": 1721,
													"src": "6554:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:24:12"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "6601:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6600:9:12"
									},
									"scope": 2115,
									"src": "6538:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "7078:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1802,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "7099:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1720,
															"src": "7099:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1804,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "7111:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1801,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "7095:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7095:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1800,
												"id": 1806,
												"nodeType": "Return",
												"src": "7088:29:12"
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "6659:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7004:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7026:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "7007:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1792,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "7007:10:12"
													},
													"referencedDeclaration": 1721,
													"src": "7007:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7039:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "7031:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7031:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7006:39:12"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "7069:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:9:12"
									},
									"scope": 2115,
									"src": "6995:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "7745:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1819,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "7770:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1720,
															"src": "7770:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1818,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "7762:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7762:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1822,
												"nodeType": "Return",
												"src": "7755:26:12"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "7130:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7673:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7699:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "7680:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1811,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1810,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1721,
														"src": "7680:10:12"
													},
													"referencedDeclaration": 1721,
													"src": "7680:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1721_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:24:12"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "7727:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1814,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7727:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1815,
													"nodeType": "ArrayTypeName",
													"src": "7727:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7726:18:12"
									},
									"scope": 2115,
									"src": "7664:124:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1828,
									"members": [
										{
											"constant": false,
											"id": 1827,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "7845:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1828,
											"src": "7841:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1826,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1825,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1527,
													"src": "7841:3:12"
												},
												"referencedDeclaration": 1527,
												"src": "7841:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "7820:10:12",
									"nodeType": "StructDefinition",
									"scope": 2115,
									"src": "7813:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "8104:74:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1840,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "8126:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1827,
															"src": "8126:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1848,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8162:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8154:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1846,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8154:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8154:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8146:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1844,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8146:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8146:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8138:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1842,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8138:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8138:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1839,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "8121:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8121:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1838,
												"id": 1853,
												"nodeType": "Return",
												"src": "8114:57:12"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "7864:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8037:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8060:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "8041:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1830,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "8041:10:12"
													},
													"referencedDeclaration": 1828,
													"src": "8041:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8073:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "8065:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8065:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8040:39:12"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "8098:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8098:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8097:6:12"
									},
									"scope": 2115,
									"src": "8028:150:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "8425:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1867,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "8450:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1827,
															"src": "8450:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1875,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1861,
																					"src": "8486:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8478:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1873,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8478:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8478:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8470:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1871,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8470:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8470:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1869,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1866,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "8442:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8442:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1865,
												"id": 1880,
												"nodeType": "Return",
												"src": "8435:60:12"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "8184:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8355:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8381:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8362:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1857,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "8362:10:12"
													},
													"referencedDeclaration": 1828,
													"src": "8362:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8394:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8386:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8361:39:12"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "8419:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8419:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:6:12"
									},
									"scope": 2115,
									"src": "8346:156:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "8669:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1894,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "8696:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1827,
															"src": "8696:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1902,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1888,
																					"src": "8732:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8724:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1900,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8724:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8724:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8716:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1898,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8716:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8716:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8708:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1896,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8708:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8708:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1893,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "8686:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8686:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1907,
												"nodeType": "Return",
												"src": "8679:62:12"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "8508:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8592:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8620:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "8601:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "8601:10:12"
													},
													"referencedDeclaration": 1828,
													"src": "8601:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "8625:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:39:12"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "8663:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8663:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:6:12"
									},
									"scope": 2115,
									"src": "8583:165:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "8901:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1919,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "8926:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1827,
															"src": "8926:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1918,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "8918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1917,
												"id": 1922,
												"nodeType": "Return",
												"src": "8911:26:12"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "8754:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "8838:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8864:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "8845:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "8845:10:12"
													},
													"referencedDeclaration": 1828,
													"src": "8845:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:24:12"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "8892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8891:9:12"
									},
									"scope": 2115,
									"src": "8829:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "9369:73:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1942,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1928,
																						"src": "9414:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1943,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1827,
																					"src": "9414:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1527_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1944,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1930,
																					"src": "9426:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1527_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1941,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1703,
																				"src": "9410:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9410:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9402:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1939,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9402:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9402:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9394:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1937,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9394:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9394:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9386:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1935,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9386:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1949,
												"nodeType": "Return",
												"src": "9379:56:12"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "8950:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9295:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9317:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "9298:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1927,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1926,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "9298:10:12"
													},
													"referencedDeclaration": 1828,
													"src": "9298:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9330:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "9322:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9297:39:12"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "9360:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9360:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9359:9:12"
									},
									"scope": 2115,
									"src": "9286:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "10063:219:12",
										"statements": [
											{
												"assignments": [
													1965
												],
												"declarations": [
													{
														"constant": false,
														"id": 1965,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10090:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1980,
														"src": "10073:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1963,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10073:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1964,
															"nodeType": "ArrayTypeName",
															"src": "10073:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1970,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1967,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "10106:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1827,
															"src": "10106:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1966,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "10098:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10098:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10073:44:12"
											},
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10144:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1980,
														"src": "10127:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1973,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10127:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1974,
															"nodeType": "ArrayTypeName",
															"src": "10127:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1976,
												"nodeType": "VariableDeclarationStatement",
												"src": "10127:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10213:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10227:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10237:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": false,
														"src": "10227:6:12",
														"valueSize": 1
													},
													{
														"declaration": 1965,
														"isOffset": false,
														"isSlot": false,
														"src": "10237:5:12",
														"valueSize": 1
													}
												],
												"id": 1977,
												"nodeType": "InlineAssembly",
												"src": "10204:48:12"
											},
											{
												"expression": {
													"id": 1978,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1975,
													"src": "10269:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1979,
												"nodeType": "Return",
												"src": "10262:13:12"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "9448:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "9991:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10017:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "9998:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1953,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1828,
														"src": "9998:10:12"
													},
													"referencedDeclaration": 1828,
													"src": "9998:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1828_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9997:24:12"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "10045:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1957,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10045:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1958,
													"nodeType": "ArrayTypeName",
													"src": "10045:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10044:18:12"
									},
									"scope": 2115,
									"src": "9982:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1985,
									"members": [
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10333:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1985,
											"src": "10329:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1983,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1982,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1527,
													"src": "10329:3:12"
												},
												"referencedDeclaration": 1527,
												"src": "10329:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1527_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10311:7:12",
									"nodeType": "StructDefinition",
									"scope": 2115,
									"src": "10304:42:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "10589:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1997,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "10611:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "10611:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2001,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1991,
																	"src": "10631:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10623:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1999,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10623:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10623:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1996,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "10606:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10606:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1995,
												"id": 2004,
												"nodeType": "Return",
												"src": "10599:39:12"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "10352:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10525:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10545:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "10529:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1987,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "10529:7:12"
													},
													"referencedDeclaration": 1985,
													"src": "10529:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10558:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "10550:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10528:36:12"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "10583:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1993,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10583:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:6:12"
									},
									"scope": 2115,
									"src": "10516:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "10889:59:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2018,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "10914:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "10914:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2022,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "10934:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10926:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2020,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10926:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10926:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2017,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "10906:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10906:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2025,
												"nodeType": "Return",
												"src": "10899:42:12"
											}
										]
									},
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "10651:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "10822:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10845:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "10829:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2009,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2008,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "10829:7:12"
													},
													"referencedDeclaration": 1985,
													"src": "10829:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10858:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "10850:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10850:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10828:36:12"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "10883:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10883:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10882:6:12"
									},
									"scope": 2115,
									"src": "10813:135:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "11112:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2039,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2031,
																"src": "11139:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "11139:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2043,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "11159:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11151:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2041,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11151:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11151:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2038,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "11129:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11129:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2046,
												"nodeType": "Return",
												"src": "11122:44:12"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "10954:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11038:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11063:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "11047:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2030,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2029,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "11047:7:12"
													},
													"referencedDeclaration": 1985,
													"src": "11047:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11076:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "11068:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11068:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11046:36:12"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "11106:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2035,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11106:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:6:12"
									},
									"scope": 2115,
									"src": "11029:144:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "11323:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2058,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "11348:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "11348:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2057,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "11340:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11340:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2056,
												"id": 2061,
												"nodeType": "Return",
												"src": "11333:26:12"
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "11179:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11263:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11286:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "11270:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2051,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2050,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "11270:7:12"
													},
													"referencedDeclaration": 1985,
													"src": "11270:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11269:21:12"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "11314:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:9:12"
									},
									"scope": 2115,
									"src": "11254:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "11788:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2077,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "11817:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1984,
																	"src": "11817:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1527_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2079,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "11829:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1527_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2076,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "11813:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11813:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11805:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2074,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11805:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2082,
												"nodeType": "Return",
												"src": "11798:38:12"
											}
										]
									},
									"documentation": {
										"id": 2064,
										"nodeType": "StructuredDocumentation",
										"src": "11372:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11717:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11736:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "11720:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2065,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "11720:7:12"
													},
													"referencedDeclaration": 1985,
													"src": "11720:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "11749:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "11741:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11719:36:12"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "11779:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11778:9:12"
									},
									"scope": 2115,
									"src": "11708:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "12461:219:12",
										"statements": [
											{
												"assignments": [
													2098
												],
												"declarations": [
													{
														"constant": false,
														"id": 2098,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12488:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "12471:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2096,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12471:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2097,
															"nodeType": "ArrayTypeName",
															"src": "12471:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2103,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2100,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2088,
																"src": "12504:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1984,
															"src": "12504:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1527_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2099,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "12496:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1527_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12496:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12471:44:12"
											},
											{
												"assignments": [
													2108
												],
												"declarations": [
													{
														"constant": false,
														"id": 2108,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12542:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "12525:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2106,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12525:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2107,
															"nodeType": "ArrayTypeName",
															"src": "12525:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"nodeType": "VariableDeclarationStatement",
												"src": "12525:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12611:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12625:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12635:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12625:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2108,
														"isOffset": false,
														"isSlot": false,
														"src": "12625:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2098,
														"isOffset": false,
														"isSlot": false,
														"src": "12635:5:12",
														"valueSize": 1
													}
												],
												"id": 2110,
												"nodeType": "InlineAssembly",
												"src": "12602:48:12"
											},
											{
												"expression": {
													"id": 2111,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2108,
													"src": "12667:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2093,
												"id": 2112,
												"nodeType": "Return",
												"src": "12660:13:12"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "11849:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12392:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12415:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "12399:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2086,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "12399:7:12"
													},
													"referencedDeclaration": 1985,
													"src": "12399:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1985_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12398:21:12"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "12443:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2090,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12443:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2091,
													"nodeType": "ArrayTypeName",
													"src": "12443:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12442:18:12"
									},
									"scope": 2115,
									"src": "12383:297:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2116,
							"src": "1228:11454:12",
							"usedErrors": []
						}
					],
					"src": "115:12568:12"
				},
				"id": 12
			},
			"contracts/Bet.sol": {
				"ast": {
					"absolutePath": "contracts/Bet.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"AccessControlEnumerable": [
							444
						],
						"Address": [
							1232
						],
						"Bet": [
							2317
						],
						"BetPair": [
							2436
						],
						"Context": [
							1254
						],
						"ERC165": [
							1504
						],
						"EnumerableSet": [
							2115
						],
						"IAccessControl": [
							517
						],
						"IAccessControlEnumerable": [
							542
						],
						"IBet": [
							2809
						],
						"IBetPair": [
							2854
						],
						"IERC165": [
							1516
						],
						"IERC20": [
							620
						],
						"IERC20Permit": [
							656
						],
						"IWeb3BetsFO": [
							2918
						],
						"SafeERC20": [
							937
						],
						"Strings": [
							1480
						],
						"Web3BetsFO": [
							2756
						]
					},
					"id": 2318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "contracts/BetPair.sol",
							"file": "./BetPair.sol",
							"id": 2118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2318,
							"sourceUnit": 2437,
							"src": "57:23:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2119,
										"name": "IBet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2809,
										"src": "98:4:13"
									},
									"id": 2120,
									"nodeType": "InheritanceSpecifier",
									"src": "98:4:13"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2317,
							"linearizedBaseContracts": [
								2317,
								2809
							],
							"name": "Bet",
							"nameLocation": "91:3:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2122,
									"mutability": "mutable",
									"name": "w3bAddr",
									"nameLocation": "125:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2317,
									"src": "109:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "109:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2778
									],
									"constant": false,
									"functionSelector": "718c7d44",
									"id": 2125,
									"mutability": "mutable",
									"name": "better",
									"nameLocation": "163:6:13",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "154:8:13"
									},
									"scope": 2317,
									"src": "139:30:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2123,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "139:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2788
									],
									"constant": false,
									"functionSelector": "80f55605",
									"id": 2128,
									"mutability": "mutable",
									"name": "market",
									"nameLocation": "200:6:13",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "191:8:13"
									},
									"scope": 2317,
									"src": "176:30:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2126,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "176:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2763
									],
									"constant": false,
									"functionSelector": "3a4b66f1",
									"id": 2131,
									"mutability": "mutable",
									"name": "stake",
									"nameLocation": "237:5:13",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "228:8:13"
									},
									"scope": 2317,
									"src": "213:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2129,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "213:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2773
									],
									"constant": false,
									"functionSelector": "8aac9cca",
									"id": 2134,
									"mutability": "mutable",
									"name": "matched",
									"nameLocation": "273:7:13",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "264:8:13"
									},
									"scope": 2317,
									"src": "249:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2768
									],
									"constant": false,
									"functionSelector": "233de126",
									"id": 2137,
									"mutability": "mutable",
									"name": "odds",
									"nameLocation": "309:4:13",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "300:8:13"
									},
									"scope": 2317,
									"src": "287:26:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2135,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "287:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a89bc05b",
									"id": 2140,
									"mutability": "mutable",
									"name": "betPairs",
									"nameLocation": "337:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2317,
									"src": "320:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 2139,
										"nodeType": "ArrayTypeName",
										"src": "320:9:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2783
									],
									"constant": false,
									"functionSelector": "fa6ead20",
									"id": 2143,
									"mutability": "mutable",
									"name": "marketSide",
									"nameLocation": "376:10:13",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "367:8:13"
									},
									"scope": 2317,
									"src": "352:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2141,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "352:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2149,
									"mutability": "mutable",
									"name": "web3bets",
									"nameLocation": "413:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2317,
									"src": "393:51:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
										"typeString": "contract IWeb3BetsFO"
									},
									"typeName": {
										"id": 2145,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2144,
											"name": "IWeb3BetsFO",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2918,
											"src": "393:11:13"
										},
										"referencedDeclaration": 2918,
										"src": "393:11:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
											"typeString": "contract IWeb3BetsFO"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 2147,
												"name": "w3bAddr",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2122,
												"src": "436:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 2146,
											"name": "IWeb3BetsFO",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2918,
											"src": "424:11:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IWeb3BetsFO_$2918_$",
												"typeString": "type(contract IWeb3BetsFO)"
											}
										},
										"id": 2148,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "424:20:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
											"typeString": "contract IWeb3BetsFO"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "473:106:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2152,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "504:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "504:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2154,
																"name": "better",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "518:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "504:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626574746572206f6e6c79",
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d7ae96bd344ba53da131f805dbe1c813d3514f5cf382628e6b25f5ae6f24d80",
																"typeString": "literal_string \"better only\""
															},
															"value": "better only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d7ae96bd344ba53da131f805dbe1c813d3514f5cf382628e6b25f5ae6f24d80",
																"typeString": "literal_string \"better only\""
															}
														],
														"id": 2151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "483:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "483:78:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "483:78:13"
											},
											{
												"id": 2159,
												"nodeType": "PlaceholderStatement",
												"src": "571:1:13"
											}
										]
									},
									"id": 2161,
									"name": "onlyBetter",
									"nameLocation": "460:10:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:2:13"
									},
									"src": "451:128:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "734:228:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2175,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "752:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "752:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2177,
																		"name": "web3bets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "766:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
																			"typeString": "contract IWeb3BetsFO"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "factory",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2861,
																	"src": "766:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "766:18:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "752:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666163746f7279206f6e6c79",
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "786:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c9207ffa4caa69fdf7eb9baf817593537bbb63a92b8b5bd60fb592f7cb32270",
																"typeString": "literal_string \"factory only\""
															},
															"value": "factory only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c9207ffa4caa69fdf7eb9baf817593537bbb63a92b8b5bd60fb592f7cb32270",
																"typeString": "literal_string \"factory only\""
															}
														],
														"id": 2174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "744:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "744:57:13"
											},
											{
												"expression": {
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2184,
														"name": "market",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "811:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2185,
														"name": "market_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "820:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "811:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "811:16:13"
											},
											{
												"expression": {
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2188,
														"name": "marketSide",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "837:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2189,
														"name": "marketSide_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "850:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "837:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "837:24:13"
											},
											{
												"expression": {
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2192,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2131,
														"src": "871:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2193,
														"name": "stake_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "879:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "871:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2195,
												"nodeType": "ExpressionStatement",
												"src": "871:14:13"
											},
											{
												"expression": {
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2196,
														"name": "odds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "895:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2197,
														"name": "odds_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "902:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "895:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "895:12:13"
											},
											{
												"expression": {
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2200,
														"name": "better",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2125,
														"src": "917:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2201,
														"name": "caller_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "926:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "917:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "917:16:13"
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2204,
														"name": "matched",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "943:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "953:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "943:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "943:11:13"
											}
										]
									},
									"id": 2209,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "caller_",
												"nameLocation": "615:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "607:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "market_",
												"nameLocation": "640:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "632:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "marketSide_",
												"nameLocation": "671:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "657:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "stake_",
												"nameLocation": "700:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "692:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "odds_",
												"nameLocation": "722:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "716:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2170,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "716:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:136:13"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:13"
									},
									"scope": 2317,
									"src": "586:376:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2794
									],
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "1040:32:13",
										"statements": [
											{
												"expression": {
													"id": 2216,
													"name": "betPairs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2140,
													"src": "1057:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2215,
												"id": 2217,
												"nodeType": "Return",
												"src": "1050:15:13"
											}
										]
									},
									"functionSelector": "12713ee4",
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBetPairs",
									"nameLocation": "977:11:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2211,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1005:8:13"
									},
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:2:13"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "1023:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2212,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1023:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2213,
													"nodeType": "ArrayTypeName",
													"src": "1023:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:18:13"
									},
									"scope": 2317,
									"src": "968:104:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "1144:424:13",
										"statements": [
											{
												"assignments": [
													2227
												],
												"declarations": [
													{
														"constant": false,
														"id": 2227,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1161:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2268,
														"src": "1154:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2226,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1154:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2228,
												"nodeType": "VariableDeclarationStatement",
												"src": "1154:11:13"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1184:50:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1198:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "1218:5:13"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1206:11:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:18:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1198:4:13"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2221,
														"isOffset": false,
														"isSlot": false,
														"src": "1218:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2227,
														"isOffset": false,
														"isSlot": false,
														"src": "1198:4:13",
														"valueSize": 1
													}
												],
												"id": 2229,
												"nodeType": "InlineAssembly",
												"src": "1175:59:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2230,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "1246:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1253:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1246:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2266,
													"nodeType": "Block",
													"src": "1525:37:13",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1546:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2225,
															"id": 2265,
															"nodeType": "Return",
															"src": "1539:12:13"
														}
													]
												},
												"id": 2267,
												"nodeType": "IfStatement",
												"src": "1243:319:13",
												"trueBody": {
													"id": 2263,
													"nodeType": "Block",
													"src": "1255:256:13",
													"statements": [
														{
															"assignments": [
																2235
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2235,
																	"mutability": "mutable",
																	"name": "pair",
																	"nameLocation": "1278:4:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2263,
																	"src": "1269:13:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBetPair_$2854",
																		"typeString": "contract IBetPair"
																	},
																	"typeName": {
																		"id": 2234,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2233,
																			"name": "IBetPair",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2854,
																			"src": "1269:8:13"
																		},
																		"referencedDeclaration": 2854,
																		"src": "1269:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBetPair_$2854",
																			"typeString": "contract IBetPair"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2239,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2237,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2221,
																		"src": "1294:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2236,
																	"name": "IBetPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2854,
																	"src": "1285:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IBetPair_$2854_$",
																		"typeString": "type(contract IBetPair)"
																	}
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1285:15:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBetPair_$2854",
																	"typeString": "contract IBetPair"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1269:31:13"
														},
														{
															"assignments": [
																2242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2242,
																	"mutability": "mutable",
																	"name": "betA",
																	"nameLocation": "1319:4:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2263,
																	"src": "1314:9:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBet_$2809",
																		"typeString": "contract IBet"
																	},
																	"typeName": {
																		"id": 2241,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2240,
																			"name": "IBet",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2809,
																			"src": "1314:4:13"
																		},
																		"referencedDeclaration": 2809,
																		"src": "1314:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBet_$2809",
																			"typeString": "contract IBet"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2248,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 2244,
																				"name": "pair",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2235,
																				"src": "1331:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBetPair_$2854",
																					"typeString": "contract IBetPair"
																				}
																			},
																			"id": 2245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sideABet",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2821,
																			"src": "1331:13:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1331:15:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2243,
																	"name": "IBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2809,
																	"src": "1326:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IBet_$2809_$",
																		"typeString": "type(contract IBet)"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1326:21:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBet_$2809",
																	"typeString": "contract IBet"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1314:33:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2249,
																			"name": "pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2235,
																			"src": "1364:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBetPair_$2854",
																				"typeString": "contract IBetPair"
																			}
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "market",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2816,
																		"src": "1364:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1364:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2252,
																			"name": "betA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2242,
																			"src": "1381:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBet_$2809",
																				"typeString": "contract IBet"
																			}
																		},
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "market",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2788,
																		"src": "1381:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1381:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1364:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2261,
																"nodeType": "Block",
																"src": "1456:45:13",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1481:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2225,
																		"id": 2260,
																		"nodeType": "Return",
																		"src": "1474:12:13"
																	}
																]
															},
															"id": 2262,
															"nodeType": "IfStatement",
															"src": "1361:140:13",
															"trueBody": {
																"id": 2258,
																"nodeType": "Block",
																"src": "1395:44:13",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 2256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1420:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 2225,
																		"id": 2257,
																		"nodeType": "Return",
																		"src": "1413:11:13"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidBetPair",
									"nameLocation": "1087:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1110:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "1102:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:15:13"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "1139:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:6:13"
									},
									"scope": 2317,
									"src": "1078:490:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2801
									],
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "1645:131:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2279,
																	"name": "_pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "1678:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2278,
																"name": "isValidBetPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "1663:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1663:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6265747061697220696e76616c6964",
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1693:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13cd67ae995bf0a8eb9ba6b8cd5decabe0baf260647b823e104f0def2566fe6f",
																"typeString": "literal_string \"betpair invalid\""
															},
															"value": "betpair invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_13cd67ae995bf0a8eb9ba6b8cd5decabe0baf260647b823e104f0def2566fe6f",
																"typeString": "literal_string \"betpair invalid\""
															}
														],
														"id": 2277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1655:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1655:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "1655:56:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2287,
															"name": "_pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "1735:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2284,
															"name": "betPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "1721:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1721:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "1721:27:13"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1765:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2276,
												"id": 2291,
												"nodeType": "Return",
												"src": "1758:11:13"
											}
										]
									},
									"functionSelector": "c2b7bbb6",
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addPair",
									"nameLocation": "1583:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2273,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1622:8:13"
									},
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "_pairAddress",
												"nameLocation": "1599:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "1591:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:22:13"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "1639:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1639:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:6:13"
									},
									"scope": 2317,
									"src": "1574:202:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2808
									],
									"body": {
										"id": 2315,
										"nodeType": "Block",
										"src": "1848:148:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2302,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1866:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1866:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2304,
																"name": "market",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "1880:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1866:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206265742773206d61726b657420636f6e74726163742063616e2063616c6c20746869732066756e6374696f6e",
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1888:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d1d281d702e182f75a5c938590d6c5fbdebeaa9cbb961ad9722b238c9e2e18",
																"typeString": "literal_string \"only bet's market contract can call this function\""
															},
															"value": "only bet's market contract can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d1d281d702e182f75a5c938590d6c5fbdebeaa9cbb961ad9722b238c9e2e18",
																"typeString": "literal_string \"only bet's market contract can call this function\""
															}
														],
														"id": 2301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1858:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:82:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2308,
												"nodeType": "ExpressionStatement",
												"src": "1858:82:13"
											},
											{
												"expression": {
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2309,
														"name": "matched",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "1950:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2310,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2295,
														"src": "1961:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1950:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "1950:18:13"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1985:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2300,
												"id": 2314,
												"nodeType": "Return",
												"src": "1978:11:13"
											}
										]
									},
									"functionSelector": "5a4cfc06",
									"id": 2316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMatched",
									"nameLocation": "1791:10:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2297,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1825:8:13"
									},
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1807:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "1802:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1802:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1801:14:13"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "1842:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1842:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:6:13"
									},
									"scope": 2317,
									"src": "1782:214:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2318,
							"src": "82:1921:13",
							"usedErrors": []
						}
					],
					"src": "33:1970:13"
				},
				"id": 13
			},
			"contracts/BetPair.sol": {
				"ast": {
					"absolutePath": "contracts/BetPair.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"AccessControlEnumerable": [
							444
						],
						"Address": [
							1232
						],
						"BetPair": [
							2436
						],
						"Context": [
							1254
						],
						"ERC165": [
							1504
						],
						"EnumerableSet": [
							2115
						],
						"IAccessControl": [
							517
						],
						"IAccessControlEnumerable": [
							542
						],
						"IBet": [
							2809
						],
						"IBetPair": [
							2854
						],
						"IERC165": [
							1516
						],
						"IERC20": [
							620
						],
						"IERC20Permit": [
							656
						],
						"IWeb3BetsFO": [
							2918
						],
						"SafeERC20": [
							937
						],
						"Strings": [
							1480
						],
						"Web3BetsFO": [
							2756
						]
					},
					"id": 2437,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2319,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "contracts/interface/IBetPair.sol",
							"file": "./interface/IBetPair.sol",
							"id": 2320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2437,
							"sourceUnit": 2855,
							"src": "58:34:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IBet.sol",
							"file": "./interface/IBet.sol",
							"id": 2321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2437,
							"sourceUnit": 2810,
							"src": "93:30:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Web3BetsFO.sol",
							"file": "./Web3BetsFO.sol",
							"id": 2322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2437,
							"sourceUnit": 2757,
							"src": "124:26:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2323,
										"name": "IBetPair",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2854,
										"src": "172:8:14"
									},
									"id": 2324,
									"nodeType": "InheritanceSpecifier",
									"src": "172:8:14"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2436,
							"linearizedBaseContracts": [
								2436,
								2854
							],
							"name": "BetPair",
							"nameLocation": "161:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2326,
									"mutability": "mutable",
									"name": "web3betsAddress",
									"nameLocation": "204:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2436,
									"src": "188:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2325,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "188:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2816
									],
									"constant": false,
									"functionSelector": "80f55605",
									"id": 2329,
									"mutability": "mutable",
									"name": "market",
									"nameLocation": "250:6:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2328,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "241:8:14"
									},
									"scope": 2436,
									"src": "226:30:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2327,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "226:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2821
									],
									"constant": false,
									"functionSelector": "15e894ab",
									"id": 2332,
									"mutability": "mutable",
									"name": "sideABet",
									"nameLocation": "287:8:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2331,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "278:8:14"
									},
									"scope": 2436,
									"src": "263:32:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2826
									],
									"constant": false,
									"functionSelector": "0f765e6d",
									"id": 2335,
									"mutability": "mutable",
									"name": "sideBBet",
									"nameLocation": "326:8:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "317:8:14"
									},
									"scope": 2436,
									"src": "302:32:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2831
									],
									"constant": false,
									"functionSelector": "baa1a3ec",
									"id": 2338,
									"mutability": "mutable",
									"name": "winnerBet",
									"nameLocation": "369:9:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "360:8:14"
									},
									"scope": 2436,
									"src": "345:33:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2336,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2836
									],
									"constant": false,
									"functionSelector": "ed7a4e0b",
									"id": 2341,
									"mutability": "mutable",
									"name": "winnerAddress",
									"nameLocation": "409:13:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "400:8:14"
									},
									"scope": 2436,
									"src": "385:37:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2339,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2841
									],
									"constant": false,
									"functionSelector": "156dcbf0",
									"id": 2344,
									"mutability": "mutable",
									"name": "amountA",
									"nameLocation": "450:7:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2343,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "441:8:14"
									},
									"scope": 2436,
									"src": "429:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2342,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "429:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2846
									],
									"constant": false,
									"functionSelector": "2efe91ef",
									"id": 2347,
									"mutability": "mutable",
									"name": "amountB",
									"nameLocation": "485:7:14",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2346,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "476:8:14"
									},
									"scope": 2436,
									"src": "464:28:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2345,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "464:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2353,
									"mutability": "mutable",
									"name": "web3bets",
									"nameLocation": "519:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2436,
									"src": "499:59:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
										"typeString": "contract IWeb3BetsFO"
									},
									"typeName": {
										"id": 2349,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2348,
											"name": "IWeb3BetsFO",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2918,
											"src": "499:11:14"
										},
										"referencedDeclaration": 2918,
										"src": "499:11:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
											"typeString": "contract IWeb3BetsFO"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 2351,
												"name": "web3betsAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2326,
												"src": "542:15:14",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 2350,
											"name": "IWeb3BetsFO",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2918,
											"src": "530:11:14",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IWeb3BetsFO_$2918_$",
												"typeString": "type(contract IWeb3BetsFO)"
											}
										},
										"id": 2352,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "530:28:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
											"typeString": "contract IWeb3BetsFO"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "709:269:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2367,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "727:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "727:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2369,
																		"name": "web3bets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "741:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
																			"typeString": "contract IWeb3BetsFO"
																		}
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "factory",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2861,
																	"src": "741:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "741:18:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "727:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792077656233626574732066697865646f64647320666163746f727920636f6e74726163742063616e20637265617465207468697320636f6e7472616374",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:67:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63",
																"typeString": "literal_string \"only web3bets fixedodds factory contract can create this contract\""
															},
															"value": "only web3bets fixedodds factory contract can create this contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63",
																"typeString": "literal_string \"only web3bets fixedodds factory contract can create this contract\""
															}
														],
														"id": 2366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "719:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "719:110:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2375,
												"nodeType": "ExpressionStatement",
												"src": "719:110:14"
											},
											{
												"expression": {
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2376,
														"name": "market",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "839:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2377,
														"name": "market_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "848:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "839:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "839:16:14"
											},
											{
												"expression": {
													"id": 2382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2380,
														"name": "sideABet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "865:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2381,
														"name": "sideABet_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "876:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "865:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2383,
												"nodeType": "ExpressionStatement",
												"src": "865:20:14"
											},
											{
												"expression": {
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2384,
														"name": "sideBBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2335,
														"src": "895:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2385,
														"name": "sideBBet_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "906:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "895:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "895:20:14"
											},
											{
												"expression": {
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2388,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "925:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2389,
														"name": "amountA_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2361,
														"src": "935:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "925:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "925:18:14"
											},
											{
												"expression": {
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2392,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "953:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2393,
														"name": "amountB_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2363,
														"src": "963:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "953:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "953:18:14"
											}
										]
									},
									"id": 2397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "market_",
												"nameLocation": "595:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "587:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "sideABet_",
												"nameLocation": "620:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "612:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "sideBBet_",
												"nameLocation": "647:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "639:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "amountA_",
												"nameLocation": "671:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "666:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "666:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "amountB_",
												"nameLocation": "694:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "689:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "689:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:131:14"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:0:14"
									},
									"scope": 2436,
									"src": "565:413:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2853
									],
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "1053:251:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2406,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1071:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1071:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2408,
																		"name": "web3bets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "1085:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWeb3BetsFO_$2918",
																			"typeString": "contract IWeb3BetsFO"
																		}
																	},
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "factory",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2861,
																	"src": "1085:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1085:18:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1071:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792077656233626574732066697865646f64647320666163746f727920636f6e74726163742063616e20637265617465207468697320636f6e7472616374",
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1105:67:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63",
																"typeString": "literal_string \"only web3bets fixedodds factory contract can create this contract\""
															},
															"value": "only web3bets fixedodds factory contract can create this contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94eb17f763f54b5a73119f267e0c6662f4672973fcb60eed9f632b0fd42ee63",
																"typeString": "literal_string \"only web3bets fixedodds factory contract can create this contract\""
															}
														],
														"id": 2405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1063:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1063:110:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "1063:110:14"
											},
											{
												"expression": {
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2415,
														"name": "winnerBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "1183:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2416,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "1195:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1183:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2418,
												"nodeType": "ExpressionStatement",
												"src": "1183:17:14"
											},
											{
												"assignments": [
													2421
												],
												"declarations": [
													{
														"constant": false,
														"id": 2421,
														"mutability": "mutable",
														"name": "_bet",
														"nameLocation": "1215:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 2434,
														"src": "1210:9:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBet_$2809",
															"typeString": "contract IBet"
														},
														"typeName": {
															"id": 2420,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2419,
																"name": "IBet",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2809,
																"src": "1210:4:14"
															},
															"referencedDeclaration": 2809,
															"src": "1210:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBet_$2809",
																"typeString": "contract IBet"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2425,
												"initialValue": {
													"arguments": [
														{
															"id": 2423,
															"name": "winnerBet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "1227:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2422,
														"name": "IBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2809,
														"src": "1222:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IBet_$2809_$",
															"typeString": "type(contract IBet)"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBet_$2809",
														"typeString": "contract IBet"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1210:27:14"
											},
											{
												"expression": {
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2426,
														"name": "winnerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "1247:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2427,
																"name": "_bet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2421,
																"src": "1263:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBet_$2809",
																	"typeString": "contract IBet"
																}
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "better",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2778,
															"src": "1263:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1263:13:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1247:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2431,
												"nodeType": "ExpressionStatement",
												"src": "1247:29:14"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1293:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2404,
												"id": 2433,
												"nodeType": "Return",
												"src": "1286:11:14"
											}
										]
									},
									"functionSelector": "6d83a71f",
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWinnerBet",
									"nameLocation": "993:12:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2401,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1031:8:14"
									},
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1015:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "1007:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:16:14"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "1048:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1048:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:6:14"
									},
									"scope": 2436,
									"src": "984:320:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2437,
							"src": "152:1159:14",
							"usedErrors": []
						}
					],
					"src": "33:1278:14"
				},
				"id": 14
			},
			"contracts/Web3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/Web3BetsFO.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"AccessControlEnumerable": [
							444
						],
						"Address": [
							1232
						],
						"Context": [
							1254
						],
						"ERC165": [
							1504
						],
						"EnumerableSet": [
							2115
						],
						"IAccessControl": [
							517
						],
						"IAccessControlEnumerable": [
							542
						],
						"IERC165": [
							1516
						],
						"IERC20": [
							620
						],
						"IERC20Permit": [
							656
						],
						"IWeb3BetsFO": [
							2918
						],
						"SafeERC20": [
							937
						],
						"Strings": [
							1480
						],
						"Web3BetsFO": [
							2756
						]
					},
					"id": 2757,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2438,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
							"file": "./interface/IWeb3BetsFO.sol",
							"id": 2439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2757,
							"sourceUnit": 2919,
							"src": "58:37:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2757,
							"sourceUnit": 621,
							"src": "96:56:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2757,
							"sourceUnit": 938,
							"src": "153:65:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
							"file": "@openzeppelin/contracts/access/AccessControlEnumerable.sol",
							"id": 2442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2757,
							"sourceUnit": 445,
							"src": "219:68:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2443,
										"name": "IWeb3BetsFO",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2918,
										"src": "312:11:15"
									},
									"id": 2444,
									"nodeType": "InheritanceSpecifier",
									"src": "312:11:15"
								},
								{
									"baseName": {
										"id": 2445,
										"name": "AccessControlEnumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "325:23:15"
									},
									"id": 2446,
									"nodeType": "InheritanceSpecifier",
									"src": "325:23:15"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2756,
							"linearizedBaseContracts": [
								2756,
								444,
								319,
								1504,
								1516,
								542,
								517,
								1254,
								2918
							],
							"name": "Web3BetsFO",
							"nameLocation": "298:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2450,
									"libraryName": {
										"id": 2447,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 937,
										"src": "361:9:15"
									},
									"nodeType": "UsingForDirective",
									"src": "355:27:15",
									"typeName": {
										"id": 2449,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2448,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 620,
											"src": "375:6:15"
										},
										"referencedDeclaration": 620,
										"src": "375:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$620",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"baseFunctions": [
										2861
									],
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 2453,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "416:7:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2452,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "407:8:15"
									},
									"scope": 2756,
									"src": "392:31:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2451,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2866
									],
									"constant": false,
									"functionSelector": "06a5cb3a",
									"id": 2456,
									"mutability": "mutable",
									"name": "ecosystemAddress",
									"nameLocation": "453:16:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2455,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "444:8:15"
									},
									"scope": 2756,
									"src": "429:40:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2454,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2871
									],
									"constant": false,
									"functionSelector": "0da4ee50",
									"id": 2459,
									"mutability": "mutable",
									"name": "holdersAddress",
									"nameLocation": "499:14:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2458,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "490:8:15"
									},
									"scope": 2756,
									"src": "475:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2457,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2876
									],
									"constant": false,
									"functionSelector": "992642e5",
									"id": 2462,
									"mutability": "mutable",
									"name": "stableCoin",
									"nameLocation": "543:10:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "534:8:15"
									},
									"scope": 2756,
									"src": "519:34:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2460,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2881
									],
									"constant": false,
									"functionSelector": "486d1e50",
									"id": 2466,
									"mutability": "mutable",
									"name": "holdersVig",
									"nameLocation": "583:10:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2464,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "574:8:15"
									},
									"scope": 2756,
									"src": "559:39:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 2465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "596:2:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2886
									],
									"constant": false,
									"functionSelector": "9376b94c",
									"id": 2470,
									"mutability": "mutable",
									"name": "ecosystemVig",
									"nameLocation": "628:12:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2468,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "619:8:15"
									},
									"scope": 2756,
									"src": "604:41:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 2469,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "643:2:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2891
									],
									"constant": false,
									"functionSelector": "387440e6",
									"id": 2474,
									"mutability": "mutable",
									"name": "vigPercentage",
									"nameLocation": "675:13:15",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 2472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "666:8:15"
									},
									"scope": 2756,
									"src": "651:42:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 2473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "691:2:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2480,
									"mutability": "mutable",
									"name": "_stableCoinWrapper",
									"nameLocation": "714:18:15",
									"nodeType": "VariableDeclaration",
									"scope": 2756,
									"src": "699:54:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$620",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2476,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2475,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 620,
											"src": "699:6:15"
										},
										"referencedDeclaration": 620,
										"src": "699:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$620",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 2478,
												"name": "stableCoin",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2462,
												"src": "742:10:15",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 2477,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 620,
											"src": "735:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$620_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 2479,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:18:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$620",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "852757ad",
									"id": 2485,
									"mutability": "constant",
									"name": "SYSTEM_ADMIN",
									"nameLocation": "784:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 2756,
									"src": "760:64:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2481,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "760:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "53595354454d5f41444d494e",
												"id": 2483,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "809:14:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639",
													"typeString": "literal_string \"SYSTEM_ADMIN\""
												},
												"value": "SYSTEM_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_74966176c367549066de941fecec46be0069530384452daa9c31d709c544e639",
													"typeString": "literal_string \"SYSTEM_ADMIN\""
												}
											],
											"id": 2482,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "799:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "799:25:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b501ec97",
									"id": 2490,
									"mutability": "constant",
									"name": "EVENT_ADMIN",
									"nameLocation": "854:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 2756,
									"src": "830:62:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2486,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4556454e545f41444d494e",
												"id": 2488,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "878:13:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0",
													"typeString": "literal_string \"EVENT_ADMIN\""
												},
												"value": "EVENT_ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b5b47644c905f9c9f971bbb9c430fe3b99fe3674e04e8312af23bbb168c5deb0",
													"typeString": "literal_string \"EVENT_ADMIN\""
												}
											],
											"id": 2487,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "868:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2489,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "868:24:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c8b0cf68",
									"id": 2495,
									"mutability": "constant",
									"name": "BLACKLIST",
									"nameLocation": "922:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 2756,
									"src": "898:58:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2491,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "898:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424c41434b4c495354",
												"id": 2493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "944:11:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c",
													"typeString": "literal_string \"BLACKLIST\""
												},
												"value": "BLACKLIST"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c88ef414e1d5ad1d458fdfa42b508737177470135860c2a2ce45583ce28f207c",
													"typeString": "literal_string \"BLACKLIST\""
												}
											],
											"id": 2492,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "934:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "934:22:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "990:150:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2499,
																	"name": "SYSTEM_ADMIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2485,
																	"src": "1029:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2500,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1043:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1043:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2498,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1021:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1021:33:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f2070726976696c65676520746f2072756e20746869732066756e6374696f6e",
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1068:44:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															},
															"value": "You have no privilege to run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a32508753827975e20a3cb78ea7eb704498ada6e4989facfc2206514cbd8980",
																"typeString": "literal_string \"You have no privilege to run this function\""
															}
														],
														"id": 2497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1000:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1000:122:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2505,
												"nodeType": "ExpressionStatement",
												"src": "1000:122:15"
											},
											{
												"id": 2506,
												"nodeType": "PlaceholderStatement",
												"src": "1132:1:15"
											}
										]
									},
									"id": 2508,
									"name": "onlySystemAdmin",
									"nameLocation": "972:15:15",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:15"
									},
									"src": "963:177:15",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "1160:411:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2512,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1301:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2513,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1321:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1321:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2511,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1290:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2516,
												"nodeType": "ExpressionStatement",
												"src": "1290:42:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2518,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "1353:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1367:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1367:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2517,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1342:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2522,
												"nodeType": "ExpressionStatement",
												"src": "1342:36:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2524,
															"name": "EVENT_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "1399:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1412:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1412:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2523,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1388:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:35:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2528,
												"nodeType": "ExpressionStatement",
												"src": "1388:35:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2530,
															"name": "EVENT_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "1447:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2531,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "1460:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2529,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "1433:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2533,
												"nodeType": "ExpressionStatement",
												"src": "1433:40:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2535,
															"name": "BLACKLIST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "1494:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1513:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1505:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1505:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1505:10:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2534,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1483:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "ExpressionStatement",
												"src": "1483:33:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2543,
															"name": "BLACKLIST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "1540:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2544,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "1551:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2542,
														"name": "_setRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "1526:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32)"
														}
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1526:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2546,
												"nodeType": "ExpressionStatement",
												"src": "1526:38:15"
											}
										]
									},
									"id": 2548,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1157:2:15"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1160:0:15"
									},
									"scope": 2756,
									"src": "1146:425:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2559,
										"nodeType": "Block",
										"src": "1638:35:15",
										"statements": [
											{
												"expression": {
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2555,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "1648:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2556,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "1658:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1648:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2558,
												"nodeType": "ExpressionStatement",
												"src": "1648:18:15"
											}
										]
									},
									"functionSelector": "5bb47808",
									"id": 2560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2552,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "1622:15:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1622:15:15"
										}
									],
									"name": "setFactory",
									"nameLocation": "1586:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "_factory",
												"nameLocation": "1605:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "1597:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:18:15"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:15"
									},
									"scope": 2756,
									"src": "1577:96:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2571,
										"nodeType": "Block",
										"src": "1741:40:15",
										"statements": [
											{
												"expression": {
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2567,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "1751:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2568,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "1768:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1751:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2570,
												"nodeType": "ExpressionStatement",
												"src": "1751:23:15"
											}
										]
									},
									"functionSelector": "23af4e17",
									"id": 2572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2565,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2564,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "1725:15:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1725:15:15"
										}
									],
									"name": "setStableCoin",
									"nameLocation": "1688:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "1710:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "1702:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:16:15"
									},
									"returnParameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:0:15"
									},
									"scope": 2756,
									"src": "1679:102:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "1857:40:15",
										"statements": [
											{
												"expression": {
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2579,
														"name": "holdersAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "1867:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2580,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "1884:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1867:23:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "1867:23:15"
											}
										]
									},
									"functionSelector": "327372e4",
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2577,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2576,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "1841:15:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1841:15:15"
										}
									],
									"name": "setHoldersAddress",
									"nameLocation": "1800:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "1826:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "1818:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1817:16:15"
									},
									"returnParameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:0:15"
									},
									"scope": 2756,
									"src": "1791:106:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "1971:42:15",
										"statements": [
											{
												"expression": {
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2591,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2456,
														"src": "1981:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2592,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2586,
														"src": "2000:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1981:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2594,
												"nodeType": "ExpressionStatement",
												"src": "1981:25:15"
											}
										]
									},
									"functionSelector": "a8e01b28",
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2589,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2588,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "1955:15:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1955:15:15"
										}
									],
									"name": "setEcosystemAddress",
									"nameLocation": "1912:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "1940:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "1932:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:16:15"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1971:0:15"
									},
									"scope": 2756,
									"src": "1903:110:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2614,
										"nodeType": "Block",
										"src": "2089:183:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2604,
																"name": "_percentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "2120:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3130",
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2134:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "2120:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e74616765206d7573742062652065787072657373656420696e203020746f2031302070657263656e746167652e204578616d706c653a2036",
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2150:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															},
															"value": "Vig percentage must be expressed in 0 to 10 percentage. Example: 6"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c81a4385a848c15720cf694c5cbee8421a6aa41771576a7616bbfaf9243065",
																"typeString": "literal_string \"Vig percentage must be expressed in 0 to 10 percentage. Example: 6\""
															}
														],
														"id": 2603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2099:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:129:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "2099:129:15"
											},
											{
												"expression": {
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2610,
														"name": "vigPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2474,
														"src": "2238:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2611,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2598,
														"src": "2254:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2238:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2613,
												"nodeType": "ExpressionStatement",
												"src": "2238:27:15"
											}
										]
									},
									"functionSelector": "d6c1ca26",
									"id": 2615,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2600,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "2073:15:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2073:15:15"
										}
									],
									"name": "setVigPercentage",
									"nameLocation": "2028:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "2053:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "2045:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:21:15"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2089:0:15"
									},
									"scope": 2756,
									"src": "2019:253:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2652,
										"nodeType": "Block",
										"src": "2383:354:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2625,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2617,
																	"src": "2414:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2422:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2414:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2628,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "2429:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2437:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2429:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2414:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5669672070657263656e746167657320736861726573206d7573742062652065787072657373656420696e206120203020746f2031303020726174696f2e204578616d706c653a203330",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2454:76:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															},
															"value": "Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ea722c975dd923ae0b75537d4a6f8d0f8ea761a34abf3ac37b846d3b7f49d9a",
																"typeString": "literal_string \"Vig percentages shares must be expressed in a  0 to 100 ratio. Example: 30\""
															}
														],
														"id": 2624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2393:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2393:147:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "ExpressionStatement",
												"src": "2393:147:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2636,
																	"name": "hVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2617,
																	"src": "2571:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2637,
																	"name": "eVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "2578:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2571:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2587:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2571:19:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652073756d206f6620616c6c205669672070657263656e7461676520736861726573206d75737420626520657175616c20746f20313030",
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2604:59:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															},
															"value": "The sum of all Vig percentage shares must be equal to 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1259fd8c5642b570806e5ff7f9d256e63345574756956799d684a5f17f81362f",
																"typeString": "literal_string \"The sum of all Vig percentage shares must be equal to 100\""
															}
														],
														"id": 2635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2550:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2550:123:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "2550:123:15"
											},
											{
												"expression": {
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2644,
														"name": "holdersVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2466,
														"src": "2684:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2645,
														"name": "hVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2617,
														"src": "2697:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2684:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "2684:17:15"
											},
											{
												"expression": {
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2648,
														"name": "ecosystemVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2470,
														"src": "2711:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2649,
														"name": "eVig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "2726:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2711:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2651,
												"nodeType": "ExpressionStatement",
												"src": "2711:19:15"
											}
										]
									},
									"functionSelector": "64886880",
									"id": 2653,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2622,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2621,
												"name": "onlySystemAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2508,
												"src": "2367:15:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2367:15:15"
										}
									],
									"name": "setVigPercentageShares",
									"nameLocation": "2287:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "hVig",
												"nameLocation": "2327:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "2319:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "eVig",
												"nameLocation": "2349:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "2341:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:50:15"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2383:0:15"
									},
									"scope": 2756,
									"src": "2278:459:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2896
									],
									"body": {
										"id": 2712,
										"nodeType": "Block",
										"src": "2807:514:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "_vigAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "2825:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2838:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2825:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626574206561726e696e6773206d7573742062652067726561746572207468616e2030",
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2841:37:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															},
															"value": "bet earnings must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea0d8c73f223a0b01c3df36ce229bb84c80da681204066053edb0fc262d4988f",
																"typeString": "literal_string \"bet earnings must be greater than 0\""
															}
														],
														"id": 2659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2817:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2817:62:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "2817:62:15"
											},
											{
												"assignments": [
													2667
												],
												"declarations": [
													{
														"constant": false,
														"id": 2667,
														"mutability": "mutable",
														"name": "holdersShare",
														"nameLocation": "2897:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 2712,
														"src": "2889:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2889:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2674,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2668,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2655,
																	"src": "2913:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2669,
																	"name": "holdersVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2466,
																	"src": "2926:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2913:23:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2671,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2912:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2940:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2912:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:54:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2676,
																"name": "holdersShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2667,
																"src": "2961:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2976:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2961:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "686f6c6465727327207368617265206d7573742062652067726561746572207468616e2030",
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2979:39:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															},
															"value": "holders' share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4db35318a7bfd06b87e9cc407f608351727b9b09f84d5df4df95bf66ed078cf",
																"typeString": "literal_string \"holders' share must be greater than 0\""
															}
														],
														"id": 2675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2953:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2953:66:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "2953:66:15"
											},
											{
												"assignments": [
													2683
												],
												"declarations": [
													{
														"constant": false,
														"id": 2683,
														"mutability": "mutable",
														"name": "ecosystemShare",
														"nameLocation": "3037:14:15",
														"nodeType": "VariableDeclaration",
														"scope": 2712,
														"src": "3029:22:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3029:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2690,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2684,
																	"name": "_vigAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2655,
																	"src": "3055:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2685,
																	"name": "ecosystemVig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "3068:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3055:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2687,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3054:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3084:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3054:33:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3029:58:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "ecosystemShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2683,
																"src": "3105:14:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3122:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3105:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "65636f73797374656d207368617265206d7573742062652067726561746572207468616e2030",
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3125:40:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															},
															"value": "ecosystem share must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6345453b5eff66eb9614fcf2d78159a2b71747dab29fc7893becd03bd411a89a",
																"typeString": "literal_string \"ecosystem share must be greater than 0\""
															}
														],
														"id": 2691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3097:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3097:69:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2697,
												"nodeType": "ExpressionStatement",
												"src": "3097:69:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2701,
															"name": "ecosystemAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "3209:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2702,
															"name": "ecosystemShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "3227:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2698,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "3177:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															}
														},
														"id": 2700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 688,
														"src": "3177:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$620_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3177:65:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "3177:65:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2708,
															"name": "holdersAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "3285:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2709,
															"name": "holdersShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "3301:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2705,
															"name": "_stableCoinWrapper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "3253:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$620",
																"typeString": "contract IERC20"
															}
														},
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 688,
														"src": "3253:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$620_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$620_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:61:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "3253:61:15"
											}
										]
									},
									"functionSelector": "cbf89c63",
									"id": 2713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "2752:16:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2657,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2798:8:15"
									},
									"parameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "2777:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2713,
												"src": "2769:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:20:15"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2807:0:15"
									},
									"scope": 2756,
									"src": "2743:578:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2903
									],
									"body": {
										"id": 2726,
										"nodeType": "Block",
										"src": "3406:55:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2722,
															"name": "SYSTEM_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "3431:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2723,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2715,
															"src": "3445:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2721,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3423:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3423:31:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2720,
												"id": 2725,
												"nodeType": "Return",
												"src": "3416:38:15"
											}
										]
									},
									"functionSelector": "4fb43199",
									"id": 2727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "3336:13:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3382:8:15"
									},
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3358:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "3350:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:18:15"
									},
									"returnParameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "3400:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3400:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3399:6:15"
									},
									"scope": 2756,
									"src": "3327:134:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2910
									],
									"body": {
										"id": 2740,
										"nodeType": "Block",
										"src": "3545:54:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2736,
															"name": "EVENT_ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "3570:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2737,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "3583:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2735,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3562:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3562:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2734,
												"id": 2739,
												"nodeType": "Return",
												"src": "3555:37:15"
											}
										]
									},
									"functionSelector": "cb146622",
									"id": 2741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "3476:12:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2731,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3521:8:15"
									},
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3497:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "3489:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:18:15"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "3539:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3539:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:6:15"
									},
									"scope": 2756,
									"src": "3467:132:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2917
									],
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "3678:52:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2750,
															"name": "BLACKLIST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "3703:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2751,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2743,
															"src": "3714:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2749,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3695:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3695:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2748,
												"id": 2753,
												"nodeType": "Return",
												"src": "3688:35:15"
											}
										]
									},
									"functionSelector": "332daccf",
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "3614:7:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2745,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3654:8:15"
									},
									"parameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3630:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "3622:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:18:15"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "3672:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3672:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3671:6:15"
									},
									"scope": 2756,
									"src": "3605:125:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2757,
							"src": "289:3444:15",
							"usedErrors": []
						}
					],
					"src": "33:3700:15"
				},
				"id": 15
			},
			"contracts/interface/IBet.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IBet.sol",
					"exportedSymbols": {
						"IBet": [
							2809
						]
					},
					"id": 2810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2758,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2809,
							"linearizedBaseContracts": [
								2809
							],
							"name": "IBet",
							"nameLocation": "68:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3a4b66f1",
									"id": 2763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "89:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:2:16"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "119:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:6:16"
									},
									"scope": 2809,
									"src": "80:45:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "233de126",
									"id": 2768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "odds",
									"nameLocation": "140:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "144:2:16"
									},
									"returnParameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "169:5:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2765,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "169:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:7:16"
									},
									"scope": 2809,
									"src": "131:45:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8aac9cca",
									"id": 2773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matched",
									"nameLocation": "191:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:16"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "223:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "222:6:16"
									},
									"scope": 2809,
									"src": "182:47:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "718c7d44",
									"id": 2778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "better",
									"nameLocation": "244:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:16"
									},
									"returnParameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "275:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:9:16"
									},
									"scope": 2809,
									"src": "235:49:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fa6ead20",
									"id": 2783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketSide",
									"nameLocation": "299:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:2:16"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "335:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:15:16"
									},
									"scope": 2809,
									"src": "290:60:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "80f55605",
									"id": 2788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "365:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:16"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "397:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:9:16"
									},
									"scope": 2809,
									"src": "356:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "12713ee4",
									"id": 2794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBetPairs",
									"nameLocation": "421:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:16"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "454:16:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2790,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "454:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2791,
													"nodeType": "ArrayTypeName",
													"src": "454:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "453:18:16"
									},
									"scope": 2809,
									"src": "412:60:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2b7bbb6",
									"id": 2801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPair",
									"nameLocation": "487:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "pairAddress",
												"nameLocation": "503:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "495:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:21:16"
									},
									"returnParameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "533:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "533:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:6:16"
									},
									"scope": 2809,
									"src": "478:61:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a4cfc06",
									"id": 2808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMatched",
									"nameLocation": "554:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "570:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "565:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "565:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:14:16"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "596:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "596:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:6:16"
									},
									"scope": 2809,
									"src": "545:57:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2810,
							"src": "58:546:16",
							"usedErrors": []
						}
					],
					"src": "32:572:16"
				},
				"id": 16
			},
			"contracts/interface/IBetPair.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IBetPair.sol",
					"exportedSymbols": {
						"IBetPair": [
							2854
						]
					},
					"id": 2855,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2854,
							"linearizedBaseContracts": [
								2854
							],
							"name": "IBetPair",
							"nameLocation": "68:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "80f55605",
									"id": 2816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "92:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "98:2:17"
									},
									"returnParameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "123:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "123:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:9:17"
									},
									"scope": 2854,
									"src": "83:49:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "15e894ab",
									"id": 2821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideABet",
									"nameLocation": "147:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:2:17"
									},
									"returnParameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "180:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:9:17"
									},
									"scope": 2854,
									"src": "138:51:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f765e6d",
									"id": 2826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideBBet",
									"nameLocation": "204:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:17"
									},
									"returnParameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "237:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:17"
									},
									"scope": 2854,
									"src": "195:51:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa1a3ec",
									"id": 2831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "winnerBet",
									"nameLocation": "261:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:2:17"
									},
									"returnParameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "295:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:9:17"
									},
									"scope": 2854,
									"src": "252:52:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ed7a4e0b",
									"id": 2836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "winnerAddress",
									"nameLocation": "319:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:2:17"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "357:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:9:17"
									},
									"scope": 2854,
									"src": "310:56:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "156dcbf0",
									"id": 2841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "amountA",
									"nameLocation": "381:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:17"
									},
									"returnParameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2841,
												"src": "413:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:6:17"
									},
									"scope": 2854,
									"src": "372:47:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2efe91ef",
									"id": 2846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "amountB",
									"nameLocation": "434:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:17"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "466:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:6:17"
									},
									"scope": 2854,
									"src": "425:47:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6d83a71f",
									"id": 2853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setWinnerBet",
									"nameLocation": "487:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "509:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "501:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:16:17"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "533:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "533:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:6:17"
									},
									"scope": 2854,
									"src": "478:61:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2855,
							"src": "58:483:17",
							"usedErrors": []
						}
					],
					"src": "32:509:17"
				},
				"id": 17
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
					"exportedSymbols": {
						"IWeb3BetsFO": [
							2918
						]
					},
					"id": 2919,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2918,
							"linearizedBaseContracts": [
								2918
							],
							"name": "IWeb3BetsFO",
							"nameLocation": "68:11:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "95:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:18"
									},
									"returnParameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "127:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:9:18"
									},
									"scope": 2918,
									"src": "86:50:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06a5cb3a",
									"id": 2866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemAddress",
									"nameLocation": "151:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:18"
									},
									"returnParameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "192:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:18"
									},
									"scope": 2918,
									"src": "142:59:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0da4ee50",
									"id": 2871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersAddress",
									"nameLocation": "216:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:18"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "255:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:9:18"
									},
									"scope": 2918,
									"src": "207:57:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992642e5",
									"id": 2876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableCoin",
									"nameLocation": "279:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:18"
									},
									"returnParameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "314:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:9:18"
									},
									"scope": 2918,
									"src": "270:53:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "486d1e50",
									"id": 2881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersVig",
									"nameLocation": "338:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:2:18"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "373:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "373:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:6:18"
									},
									"scope": 2918,
									"src": "329:50:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9376b94c",
									"id": 2886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemVig",
									"nameLocation": "394:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:18"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2886,
												"src": "431:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:6:18"
									},
									"scope": 2918,
									"src": "385:52:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "387440e6",
									"id": 2891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vigPercentage",
									"nameLocation": "452:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:18"
									},
									"returnParameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2891,
												"src": "485:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:6:18"
									},
									"scope": 2918,
									"src": "443:48:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cbf89c63",
									"id": 2896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "506:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "531:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "523:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:18"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:18"
									},
									"scope": 2918,
									"src": "497:55:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fb43199",
									"id": 2903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "567:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "589:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "581:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:18:18"
									},
									"returnParameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "617:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2900,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:6:18"
									},
									"scope": 2918,
									"src": "558:65:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb146622",
									"id": 2910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "638:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "659:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "651:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:18:18"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "687:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:6:18"
									},
									"scope": 2918,
									"src": "629:64:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "332daccf",
									"id": 2917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "708:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "724:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "716:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:18:18"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "752:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "752:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:6:18"
									},
									"scope": 2918,
									"src": "699:59:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2919,
							"src": "58:702:18",
							"usedErrors": []
						}
					],
					"src": "33:727:18"
				},
				"id": 18
			}
		}
	}
}