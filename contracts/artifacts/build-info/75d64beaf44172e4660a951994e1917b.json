{
	"id": "75d64beaf44172e4660a951994e1917b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BetPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./interface/IBetPair.sol\";\nimport \"./interface/IMarket.sol\";\nimport \"./interface/IBet.sol\";\nimport \"./interface/IWeb3BetsFO.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract BetPair is IBetPair {\n    using SafeERC20 for IERC20;\n\n    address public override marketAddress;\n\n    address public override sideABetAddress;\n\n    address public override sideBBetAddress;\n    \n    address public override winnerBet;\n\n    address public override winnerAddress;\n\n    uint public override amountA;\n\n    uint public override amountB;\n\n    IERC20 private _stableCoinWrapper;\n\n    constructor (\n        address marketAddress_,\n        address sideABetAddress_,\n        address sideBBetAddress_,\n        uint amountA_,\n        uint amountB_\n    ) {\n        marketAddress = marketAddress_;\n        sideABetAddress = sideABetAddress_;\n        sideBBetAddress = sideBBetAddress_;\n        amountA = amountA_;\n        amountB = amountB_;\n    }\n\n    function settlePair(address _stableCoin, address _web3betsAddress) external override returns(bool) {\n        IMarket market = IMarket(marketAddress);\n        require(market.hasSetWinningSide(), \"Markets has not been settled\");\n        if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideA\"))){\n            winnerBet = sideABetAddress;\n            IBet _winnerBet = IBet(winnerBet);\n            winnerAddress = _winnerBet.better();\n\n            _stableCoinWrapper = IERC20(_stableCoin);\n            _stableCoinWrapper.safeTransferFrom(sideABetAddress, winnerAddress, amountA);\n            _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 / 10);\n            _stableCoinWrapper.safeTransferFrom(sideBBetAddress, _web3betsAddress, amountB / 10);\n        }\n        else if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideB\"))){\n            winnerBet = sideBBetAddress;\n            IBet _winnerBet = IBet(winnerBet);\n            winnerAddress = _winnerBet.better();\n\n            _stableCoinWrapper = IERC20(_stableCoin);\n            _stableCoinWrapper.safeTransferFrom(sideABetAddress, winnerAddress, amountA);\n            _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 /10);\n            _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB /10);\n        }\n        else{\n            revert(\"event admin entered  invalid winner\");\n        }\n        return true;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IWeb3BetsFO{\n\n    function factory() external view returns(address);\n\n    function ecosystemAddress() external view returns(address);\n\n    function holdersAddress() external view returns(address);\n\n    function stableCoin() external view returns(address);\n\n    function holdersVig() external view returns(uint);\n\n    function ecosystemVig() external view returns(uint);\n\n    function vigPercentage() external returns(uint);\n\n    function shareBetEarnings(uint256 _vigAmount) external;\n\n    function isSystemAdmin(address _account) external returns (bool);\n\n    function isEventAdmin(address _account) external returns (bool);\n\n    function isBlack(address _account) external returns (bool);\n}"
			},
			"contracts/interface/IBet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n\ninterface IBet {\n\n    function stake() external view returns(uint);\n\n    function odds() external view returns(uint8);\n\n    function matched() external view returns(uint);\n\n    function better() external view returns(address);\n\n    function marketSide() external view returns (string memory);\n\n    function marketAddress() external view returns (address);\n\n    function getBetPairs() external  returns (address[] memory);\n\n    function addPair(address pairAddress) external returns(bool);\n\n    function setMatched(uint _amount) external returns(bool);\n\n    function withdrawPending() external;\n}"
			},
			"contracts/interface/IMarket.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\nimport \"./IBase.sol\";\n\ninterface IMarket is IBase{\n\n    function eventAddress() external view returns (address);\n\n    function hasSetWinningSide() external view returns (bool);\n\n    function winningSide() external view returns (string memory);\n\n    function isCanceled() external view returns (bool);\n\n    function sideAName() external view returns (string memory);\n\n    function sideBName() external view returns (string memory);\n\n    function sideATotalStake() external view returns (uint);\n\n    function sideBTotalStake() external view returns (uint);\n\n    function addBet(address _better, address _betAddress, uint256 _stake, uint8 _odds, string memory _side) external returns(bool);\n\n    // function matchBet() external;\n\n    // Setting a winning side marks a market as settled\n    function setWinningSide(string memory _winningSide) external returns(bool);\n\n    function getEventName() external returns (string memory);\n\n    function cancelMarket() external returns(bool);\n\n    function upadteMarket(string memory name_, string memory sideAName_, string memory sideBName_) external returns(bool);\n\n}"
			},
			"contracts/interface/IBetPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n\ninterface IBetPair {\n    function marketAddress() external view returns(address);\n\n    function sideABetAddress() external view returns(address);\n\n    function sideBBetAddress() external view returns(address);\n\n    function winnerBet() external view returns(address);\n\n    function winnerAddress() external view returns(address);\n\n    function amountA() external view returns(uint);\n\n    function amountB() external view returns(uint);\n\n    function settlePair(address _stableCoin, address _web3betsAddress) external returns(bool);\n}"
			},
			"contracts/interface/IBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ninterface IBase {\n    function getName() external returns (string memory);\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB STOP DIV 0x22 SWAP8 PUSH30 0x375044DFEAE3EB870FFE4EABE1F1312992D56A85F09D1B1967B064736F6C PUSH4 0x43000804 STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab000422977d375044dfeae3eb870ffe4eabe1f1312992d56a85f09d1b1967b064736f6c63430008040033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xE5 ORIGIN 0xBC JUMPI DUP1 0xDC GASPRICE SWAP11 0xD6 GASLIMIT DUP2 0x4A 0x2E 0x22 SWAP7 0xDE 0x5F 0x4D 0xA9 0x2F 0xD4 0xD9 SWAP4 0x24 SSTORE 0xE7 DUP3 0xA9 GASLIMIT 0xDE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "194:8111:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc04e532bc5780dc3a9ad645814a2e2296de5f4da92fd4d9932455e782a945de64736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BetPair.sol": {
				"BetPair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "marketAddress_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sideABetAddress_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sideBBetAddress_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountA_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "amountA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_web3betsAddress",
									"type": "address"
								}
							],
							"name": "settlePair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideABetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideBBetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerBet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BetPair.sol\":321:2607  contract BetPair is IBetPair {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BetPair.sol\":723:1079  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BetPair.sol\":898:911  marketAddress */\n  0x00\n    /* \"contracts/BetPair.sol\":898:928  marketAddress = marketAddress_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap8\n  dup9\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"contracts/BetPair.sol\":938:972  sideABetAddress = sideABetAddress_ */\n  dup1\n  sload\n  dup3\n  and\n  swap6\n  dup8\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/BetPair.sol\":982:997  sideBBetAddress */\n  0x02\n    /* \"contracts/BetPair.sol\":982:1016  sideBBetAddress = sideBBetAddress_ */\n  dup1\n  sload\n  swap1\n  swap5\n  and\n  swap3\n  swap1\n  swap5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/BetPair.sol\":1026:1033  amountA */\n  0x05\n    /* \"contracts/BetPair.sol\":1026:1044  amountA = amountA_ */\n  sstore\n    /* \"contracts/BetPair.sol\":1054:1061  amountB */\n  0x06\n    /* \"contracts/BetPair.sol\":1054:1072  amountB = amountB_ */\n  sstore\n    /* \"contracts/BetPair.sol\":321:2607  contract BetPair is IBetPair {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:191   */\ntag_8:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_10:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:708   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:357   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":409:415   */\n  dup1\n    /* \"#utility.yul\":401:407   */\n  dup2\n    /* \"#utility.yul\":394:416   */\n  revert\n    /* \"#utility.yul\":355:357   */\ntag_12:\n    /* \"#utility.yul\":437:477   */\n  tag_13\n    /* \"#utility.yul\":467:476   */\n  dup7\n    /* \"#utility.yul\":437:477   */\n  tag_8\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":427:477   */\n  swap5\n  pop\n    /* \"#utility.yul\":496:545   */\n  tag_14\n    /* \"#utility.yul\":541:543   */\n  0x20\n    /* \"#utility.yul\":530:539   */\n  dup8\n    /* \"#utility.yul\":526:544   */\n  add\n    /* \"#utility.yul\":496:545   */\n  tag_8\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":486:545   */\n  swap4\n  pop\n    /* \"#utility.yul\":564:613   */\n  tag_15\n    /* \"#utility.yul\":609:611   */\n  0x40\n    /* \"#utility.yul\":598:607   */\n  dup8\n    /* \"#utility.yul\":594:612   */\n  add\n    /* \"#utility.yul\":564:613   */\n  tag_8\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":653:655   */\n  0x60\n    /* \"#utility.yul\":638:656   */\n  dup8\n  add\n    /* \"#utility.yul\":632:657   */\n  mload\n    /* \"#utility.yul\":697:700   */\n  0x80\n    /* \"#utility.yul\":682:701   */\n  swap1\n  swap8\n  add\n    /* \"#utility.yul\":676:702   */\n  mload\n    /* \"#utility.yul\":345:708   */\n  swap6\n  swap9\n  swap5\n  swap8\n  pop\n    /* \"#utility.yul\":554:613   */\n  swap6\n    /* \"#utility.yul\":632:657   */\n  swap5\n    /* \"#utility.yul\":676:702   */\n  swap4\n    /* \"#utility.yul\":345:708   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/BetPair.sol\":321:2607  contract BetPair is IBetPair {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BetPair.sol\":321:2607  contract BetPair is IBetPair {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95623641\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x95623641\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9c7af579\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbaa1a3ec\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xed7a4e0b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x156dcbf0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x20781828\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2efe91ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6b396719\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BetPair.sol\":613:641  uint public override amountA */\n    tag_3:\n      tag_12\n      sload(0x05)\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":6245:6270   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6233:6235   */\n      0x20\n        /* \"#utility.yul\":6218:6236   */\n      add\n        /* \"contracts/BetPair.sol\":613:641  uint public override amountA */\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BetPair.sol\":479:518  address public override sideBBetAddress */\n    tag_4:\n      sload(0x02)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3158:3190   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3140:3191   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"contracts/BetPair.sol\":479:518  address public override sideBBetAddress */\n      tag_14\n        /* \"#utility.yul\":3095:3197   */\n      jump\n        /* \"contracts/BetPair.sol\":648:676  uint public override amountB */\n    tag_5:\n      tag_12\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":1085:2605  function settlePair(address _stableCoin, address _web3betsAddress) external override returns(bool) {... */\n    tag_6:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":3747:3761   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3740:3762   */\n      iszero\n        /* \"#utility.yul\":3722:3763   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3695:3713   */\n      add\n        /* \"contracts/BetPair.sol\":1085:2605  function settlePair(address _stableCoin, address _web3betsAddress) external override returns(bool) {... */\n      tag_14\n        /* \"#utility.yul\":3677:3769   */\n      jump\n        /* \"contracts/BetPair.sol\":389:426  address public override marketAddress */\n    tag_7:\n      sload(0x00)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":433:472  address public override sideABetAddress */\n    tag_8:\n      sload(0x01)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":529:562  address public override winnerBet */\n    tag_9:\n      sload(0x03)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":569:606  address public override winnerAddress */\n    tag_10:\n      sload(0x04)\n      tag_16\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/BetPair.sol\":1085:2605  function settlePair(address _stableCoin, address _web3betsAddress) external override returns(bool) {... */\n    tag_26:\n        /* \"contracts/BetPair.sol\":1178:1182  bool */\n      0x00\n        /* \"contracts/BetPair.sol\":1219:1232  marketAddress */\n      dup1\n      sload\n        /* \"contracts/BetPair.sol\":1251:1277  market.hasSetWinningSide() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x2f6498c3)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1219:1232  marketAddress */\n      swap1\n      swap3\n      and\n      swap2\n      dup3\n      swap2\n        /* \"contracts/BetPair.sol\":1251:1275  market.hasSetWinningSide */\n      0xbd92630c\n      swap2\n        /* \"contracts/BetPair.sol\":1251:1277  market.hasSetWinningSide() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BetPair.sol\":1219:1232  marketAddress */\n      dup7\n        /* \"contracts/BetPair.sol\":1251:1277  market.hasSetWinningSide() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/BetPair.sol\":1243:1310  require(market.hasSetWinningSide(), \"Markets has not been settled\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4364:4366   */\n      0x20\n        /* \"contracts/BetPair.sol\":1243:1310  require(market.hasSetWinningSide(), \"Markets has not been settled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4346:4367   */\n      mstore\n        /* \"#utility.yul\":4403:4405   */\n      0x1c\n        /* \"#utility.yul\":4383:4401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4376:4406   */\n      mstore\n        /* \"#utility.yul\":4442:4472   */\n      0x4d61726b65747320686173206e6f74206265656e20736574746c656400000000\n        /* \"#utility.yul\":4422:4440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4415:4473   */\n      mstore\n        /* \"#utility.yul\":4490:4508   */\n      0x64\n      add\n        /* \"contracts/BetPair.sol\":1243:1310  require(market.hasSetWinningSide(), \"Markets has not been settled\") */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"contracts/BetPair.sol\":1386:1411  abi.encodePacked(\"sideA\") */\n      mload(0x40)\n      shl(0xd8, 0x7369646541)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":2676:2696   */\n      mstore\n        /* \"#utility.yul\":2712:2723   */\n      0x25\n      add\n        /* \"contracts/BetPair.sol\":1386:1411  abi.encodePacked(\"sideA\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BetPair.sol\":1376:1412  keccak256(abi.encodePacked(\"sideA\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/BetPair.sol\":1350:1356  market */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1350:1368  market.winningSide */\n      and\n      0xfbf06338\n        /* \"contracts/BetPair.sol\":1350:1370  market.winningSide() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_55\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/BetPair.sol\":1333:1371  abi.encodePacked(market.winningSide()) */\n      add(0x20, mload(0x40))\n      tag_57\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BetPair.sol\":1323:1372  keccak256(abi.encodePacked(market.winningSide())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/BetPair.sol\":1323:1412  keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideA\")) */\n      eq\n        /* \"contracts/BetPair.sol\":1320:2578  if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideA\"))){... */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/BetPair.sol\":1439:1454  sideABetAddress */\n      sload(0x01)\n        /* \"contracts/BetPair.sol\":1427:1436  winnerBet */\n      0x03\n        /* \"contracts/BetPair.sol\":1427:1454  winnerBet = sideABetAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1439:1454  sideABetAddress */\n      swap1\n      swap3\n      and\n        /* \"contracts/BetPair.sol\":1427:1454  winnerBet = sideABetAddress */\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/BetPair.sol\":1531:1550  _winnerBet.better() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x1c631f51)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BetPair.sol\":1439:1454  sideABetAddress */\n      dup3\n      swap2\n        /* \"contracts/BetPair.sol\":1531:1548  _winnerBet.better */\n      0x718c7d44\n      swap2\n        /* \"contracts/BetPair.sol\":1531:1550  _winnerBet.better() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BetPair.sol\":1439:1454  sideABetAddress */\n      dup7\n        /* \"contracts/BetPair.sol\":1531:1550  _winnerBet.better() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/BetPair.sol\":1515:1528  winnerAddress */\n      0x04\n        /* \"contracts/BetPair.sol\":1515:1550  winnerAddress = _winnerBet.better() */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/BetPair.sol\":1565:1583  _stableCoinWrapper */\n      0x07\n        /* \"contracts/BetPair.sol\":1565:1605  _stableCoinWrapper = IERC20(_stableCoin) */\n      dup1\n      sload\n      dup10\n      dup6\n      and\n      swap3\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/BetPair.sol\":1515:1550  winnerAddress = _winnerBet.better() */\n      0x01\n        /* \"contracts/BetPair.sol\":1655:1670  sideABetAddress */\n      sload\n        /* \"contracts/BetPair.sol\":1687:1694  amountA */\n      sload(0x05)\n        /* \"contracts/BetPair.sol\":1619:1695  _stableCoinWrapper.safeTransferFrom(sideABetAddress, winnerAddress, amountA) */\n      tag_65\n      swap5\n        /* \"contracts/BetPair.sol\":1565:1605  _stableCoinWrapper = IERC20(_stableCoin) */\n      swap3\n      swap4\n        /* \"contracts/BetPair.sol\":1655:1670  sideABetAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/BetPair.sol\":1619:1654  _stableCoinWrapper.safeTransferFrom */\n      tag_66\n        /* \"contracts/BetPair.sol\":1619:1695  _stableCoinWrapper.safeTransferFrom(sideABetAddress, winnerAddress, amountA) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/BetPair.sol\":1745:1760  sideBBetAddress */\n      sload(0x02)\n        /* \"contracts/BetPair.sol\":1762:1775  winnerAddress */\n      sload(0x04)\n        /* \"contracts/BetPair.sol\":1777:1784  amountB */\n      sload(0x06)\n        /* \"contracts/BetPair.sol\":1709:1794  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 / 10) */\n      tag_67\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1745:1760  sideBBetAddress */\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/BetPair.sol\":1762:1775  winnerAddress */\n      and\n      swap1\n        /* \"contracts/BetPair.sol\":1791:1793  10 */\n      0x0a\n      swap1\n        /* \"contracts/BetPair.sol\":1777:1788  amountB * 9 */\n      tag_68\n      swap1\n        /* \"contracts/BetPair.sol\":1787:1788  9 */\n      0x09\n        /* \"contracts/BetPair.sol\":1777:1788  amountB * 9 */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/BetPair.sol\":1777:1793  amountB * 9 / 10 */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/BetPair.sol\":1709:1727  _stableCoinWrapper */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      swap3\n        /* \"contracts/BetPair.sol\":1709:1794  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 / 10) */\n      swap2\n      swap1\n        /* \"contracts/BetPair.sol\":1709:1744  _stableCoinWrapper.safeTransferFrom */\n      tag_66\n        /* \"contracts/BetPair.sol\":1709:1794  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 / 10) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/BetPair.sol\":1844:1859  sideBBetAddress */\n      sload(0x02)\n        /* \"contracts/BetPair.sol\":1879:1886  amountB */\n      sload(0x06)\n        /* \"contracts/BetPair.sol\":1808:1892  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, _web3betsAddress, amountB / 10) */\n      tag_72\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1844:1859  sideBBetAddress */\n      and\n      swap1\n        /* \"contracts/BetPair.sol\":1861:1877  _web3betsAddress */\n      dup7\n      swap1\n        /* \"contracts/BetPair.sol\":1879:1891  amountB / 10 */\n      tag_70\n      swap1\n        /* \"contracts/BetPair.sol\":1889:1891  10 */\n      0x0a\n      swap1\n        /* \"contracts/BetPair.sol\":1879:1891  amountB / 10 */\n      tag_71\n      jump\t// in\n        /* \"contracts/BetPair.sol\":1808:1892  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, _web3betsAddress, amountB / 10) */\n    tag_72:\n        /* \"contracts/BetPair.sol\":1320:2578  if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideA\"))){... */\n      pop\n      jump(tag_93)\n    tag_59:\n        /* \"contracts/BetPair.sol\":1983:2008  abi.encodePacked(\"sideB\") */\n      mload(0x40)\n      shl(0xd9, 0x39b4b232a1)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":2936:2956   */\n      mstore\n        /* \"#utility.yul\":2972:2983   */\n      0x25\n      add\n        /* \"contracts/BetPair.sol\":1983:2008  abi.encodePacked(\"sideB\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BetPair.sol\":1973:2009  keccak256(abi.encodePacked(\"sideB\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/BetPair.sol\":1947:1953  market */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":1947:1965  market.winningSide */\n      and\n      0xfbf06338\n        /* \"contracts/BetPair.sol\":1947:1967  market.winningSide() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_80\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_56\n      jump\t// in\n    tag_80:\n        /* \"contracts/BetPair.sol\":1930:1968  abi.encodePacked(market.winningSide()) */\n      add(0x20, mload(0x40))\n      tag_81\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BetPair.sol\":1920:1969  keccak256(abi.encodePacked(market.winningSide())) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/BetPair.sol\":1920:2009  keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideB\")) */\n      eq\n        /* \"contracts/BetPair.sol\":1917:2578  if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideB\"))){... */\n      iszero\n      tag_82\n      jumpi\n        /* \"contracts/BetPair.sol\":2036:2051  sideBBetAddress */\n      sload(0x02)\n        /* \"contracts/BetPair.sol\":2024:2033  winnerBet */\n      0x03\n        /* \"contracts/BetPair.sol\":2024:2051  winnerBet = sideBBetAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":2036:2051  sideBBetAddress */\n      swap1\n      swap3\n      and\n        /* \"contracts/BetPair.sol\":2024:2051  winnerBet = sideBBetAddress */\n      swap2\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/BetPair.sol\":2128:2147  _winnerBet.better() */\n      0x40\n      dup1\n      mload\n      shl(0xe2, 0x1c631f51)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BetPair.sol\":2036:2051  sideBBetAddress */\n      dup3\n      swap2\n        /* \"contracts/BetPair.sol\":2128:2145  _winnerBet.better */\n      0x718c7d44\n      swap2\n        /* \"contracts/BetPair.sol\":2128:2147  _winnerBet.better() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/BetPair.sol\":2036:2051  sideBBetAddress */\n      dup7\n        /* \"contracts/BetPair.sol\":2128:2147  _winnerBet.better() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n        /* \"contracts/BetPair.sol\":2112:2125  winnerAddress */\n      0x04\n        /* \"contracts/BetPair.sol\":2112:2147  winnerAddress = _winnerBet.better() */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/BetPair.sol\":2162:2180  _stableCoinWrapper */\n      0x07\n        /* \"contracts/BetPair.sol\":2162:2202  _stableCoinWrapper = IERC20(_stableCoin) */\n      dup1\n      sload\n      dup10\n      dup6\n      and\n      swap3\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/BetPair.sol\":2112:2147  winnerAddress = _winnerBet.better() */\n      0x01\n        /* \"contracts/BetPair.sol\":2252:2267  sideABetAddress */\n      sload\n        /* \"contracts/BetPair.sol\":2284:2291  amountA */\n      sload(0x05)\n        /* \"contracts/BetPair.sol\":2216:2292  _stableCoinWrapper.safeTransferFrom(sideABetAddress, winnerAddress, amountA) */\n      tag_87\n      swap5\n        /* \"contracts/BetPair.sol\":2162:2202  _stableCoinWrapper = IERC20(_stableCoin) */\n      swap3\n      swap4\n        /* \"contracts/BetPair.sol\":2252:2267  sideABetAddress */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/BetPair.sol\":2216:2251  _stableCoinWrapper.safeTransferFrom */\n      tag_66\n        /* \"contracts/BetPair.sol\":2216:2292  _stableCoinWrapper.safeTransferFrom(sideABetAddress, winnerAddress, amountA) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/BetPair.sol\":2342:2357  sideBBetAddress */\n      sload(0x02)\n        /* \"contracts/BetPair.sol\":2359:2372  winnerAddress */\n      sload(0x04)\n        /* \"contracts/BetPair.sol\":2374:2381  amountB */\n      sload(0x06)\n        /* \"contracts/BetPair.sol\":2306:2390  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 /10) */\n      tag_88\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":2342:2357  sideBBetAddress */\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/BetPair.sol\":2359:2372  winnerAddress */\n      and\n      swap1\n        /* \"contracts/BetPair.sol\":2387:2389  10 */\n      0x0a\n      swap1\n        /* \"contracts/BetPair.sol\":2374:2385  amountB * 9 */\n      tag_68\n      swap1\n        /* \"contracts/BetPair.sol\":2384:2385  9 */\n      0x09\n        /* \"contracts/BetPair.sol\":2374:2385  amountB * 9 */\n      tag_69\n      jump\t// in\n        /* \"contracts/BetPair.sol\":2306:2390  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB * 9 /10) */\n    tag_88:\n        /* \"contracts/BetPair.sol\":2440:2455  sideBBetAddress */\n      sload(0x02)\n        /* \"contracts/BetPair.sol\":2457:2470  winnerAddress */\n      sload(0x04)\n        /* \"contracts/BetPair.sol\":2472:2479  amountB */\n      sload(0x06)\n        /* \"contracts/BetPair.sol\":2404:2484  _stableCoinWrapper.safeTransferFrom(sideBBetAddress, winnerAddress, amountB /10) */\n      tag_72\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BetPair.sol\":2440:2455  sideBBetAddress */\n      swap1\n      dup2\n      and\n      swap3\n        /* \"contracts/BetPair.sol\":2457:2470  winnerAddress */\n      and\n      swap1\n        /* \"contracts/BetPair.sol\":2472:2483  amountB /10 */\n      tag_70\n      swap1\n        /* \"contracts/BetPair.sol\":2481:2483  10 */\n      0x0a\n      swap1\n        /* \"contracts/BetPair.sol\":2472:2483  amountB /10 */\n      tag_71\n      jump\t// in\n        /* \"contracts/BetPair.sol\":1917:2578  if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideB\"))){... */\n    tag_82:\n        /* \"contracts/BetPair.sol\":2522:2567  revert(\"event admin entered  invalid winner\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5897:5899   */\n      0x20\n        /* \"contracts/BetPair.sol\":2522:2567  revert(\"event admin entered  invalid winner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5879:5900   */\n      mstore\n        /* \"#utility.yul\":5936:5938   */\n      0x23\n        /* \"#utility.yul\":5916:5934   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5909:5939   */\n      mstore\n        /* \"#utility.yul\":5975:6009   */\n      0x6576656e742061646d696e20656e74657265642020696e76616c69642077696e\n        /* \"#utility.yul\":5955:5973   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5948:6010   */\n      mstore\n      shl(0xe9, 0x3732b9)\n        /* \"#utility.yul\":6026:6044   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6019:6052   */\n      mstore\n        /* \"#utility.yul\":6069:6088   */\n      0x84\n      add\n        /* \"contracts/BetPair.sol\":2522:2567  revert(\"event admin entered  invalid winner\") */\n      tag_48\n        /* \"#utility.yul\":5869:6094   */\n      jump\n        /* \"contracts/BetPair.sol\":1917:2578  if(keccak256(abi.encodePacked(market.winningSide())) == keccak256(abi.encodePacked(\"sideB\"))){... */\n    tag_93:\n      pop\n        /* \"contracts/BetPair.sol\":2594:2598  true */\n      0x01\n      swap4\n        /* \"contracts/BetPair.sol\":1085:2605  function settlePair(address _stableCoin, address _web3betsAddress) external override returns(bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3460:3475   */\n      dup6\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3442:3476   */\n      mstore\n        /* \"#utility.yul\":3512:3527   */\n      dup5\n      and\n        /* \"#utility.yul\":3492:3510   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3485:3528   */\n      mstore\n        /* \"#utility.yul\":3544:3562   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3537:3571   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":3377:3395   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_97\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      and\n      tag_103\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5486:5488   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5468:5489   */\n      mstore\n        /* \"#utility.yul\":5525:5527   */\n      0x2a\n        /* \"#utility.yul\":5505:5523   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5498:5528   */\n      mstore\n        /* \"#utility.yul\":5564:5598   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":5544:5562   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5537:5599   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":5615:5633   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5608:5648   */\n      mstore\n        /* \"#utility.yul\":5665:5684   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_48\n        /* \"#utility.yul\":5458:5690   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_109:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4721:4723   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4703:4724   */\n      mstore\n        /* \"#utility.yul\":4760:4762   */\n      0x26\n        /* \"#utility.yul\":4740:4758   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4733:4763   */\n      mstore\n        /* \"#utility.yul\":4799:4833   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":4779:4797   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4772:4834   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":4850:4868   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4843:4879   */\n      mstore\n        /* \"#utility.yul\":4896:4915   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_48\n        /* \"#utility.yul\":4693:4921   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5128:5130   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5110:5131   */\n      mstore\n        /* \"#utility.yul\":5167:5169   */\n      0x1d\n        /* \"#utility.yul\":5147:5165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5140:5170   */\n      mstore\n        /* \"#utility.yul\":5206:5237   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":5186:5204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5179:5238   */\n      mstore\n        /* \"#utility.yul\":5255:5273   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_48\n        /* \"#utility.yul\":5100:5279   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_125\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_124)\n    tag_125:\n      0x60\n      swap2\n      pop\n    tag_124:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_130\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_109)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8069:8214  {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n        /* \"#utility.yul\":14:275   */\n    tag_64:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:107   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":158:164   */\n      dup1\n        /* \"#utility.yul\":150:156   */\n      dup2\n        /* \"#utility.yul\":143:165   */\n      revert\n        /* \"#utility.yul\":105:107   */\n    tag_138:\n        /* \"#utility.yul\":195:204   */\n      dup2\n        /* \"#utility.yul\":189:205   */\n      mload\n        /* \"#utility.yul\":214:245   */\n      tag_109\n        /* \"#utility.yul\":239:244   */\n      dup2\n        /* \"#utility.yul\":214:245   */\n      tag_140\n      jump\t// in\n        /* \"#utility.yul\":280:678   */\n    tag_25:\n        /* \"#utility.yul\":348:354   */\n      0x00\n        /* \"#utility.yul\":356:362   */\n      dup1\n        /* \"#utility.yul\":409:411   */\n      0x40\n        /* \"#utility.yul\":397:406   */\n      dup4\n        /* \"#utility.yul\":388:395   */\n      dup6\n        /* \"#utility.yul\":384:407   */\n      sub\n        /* \"#utility.yul\":380:412   */\n      slt\n        /* \"#utility.yul\":377:379   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":430:436   */\n      dup1\n        /* \"#utility.yul\":422:428   */\n      dup2\n        /* \"#utility.yul\":415:437   */\n      revert\n        /* \"#utility.yul\":377:379   */\n    tag_142:\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":461:484   */\n      calldataload\n        /* \"#utility.yul\":493:524   */\n      tag_143\n        /* \"#utility.yul\":518:523   */\n      dup2\n        /* \"#utility.yul\":493:524   */\n      tag_140\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":543:548   */\n      swap2\n      pop\n        /* \"#utility.yul\":600:602   */\n      0x20\n        /* \"#utility.yul\":585:603   */\n      dup4\n      add\n        /* \"#utility.yul\":572:604   */\n      calldataload\n        /* \"#utility.yul\":613:646   */\n      tag_144\n        /* \"#utility.yul\":572:604   */\n      dup2\n        /* \"#utility.yul\":613:646   */\n      tag_140\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":665:672   */\n      dup1\n        /* \"#utility.yul\":655:672   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":367:678   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":683:980   */\n    tag_46:\n        /* \"#utility.yul\":750:756   */\n      0x00\n        /* \"#utility.yul\":803:805   */\n      0x20\n        /* \"#utility.yul\":791:800   */\n      dup3\n        /* \"#utility.yul\":782:789   */\n      dup5\n        /* \"#utility.yul\":778:801   */\n      sub\n        /* \"#utility.yul\":774:806   */\n      slt\n        /* \"#utility.yul\":771:773   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":824:830   */\n      dup1\n        /* \"#utility.yul\":816:822   */\n      dup2\n        /* \"#utility.yul\":809:831   */\n      revert\n        /* \"#utility.yul\":771:773   */\n    tag_146:\n        /* \"#utility.yul\":861:870   */\n      dup2\n        /* \"#utility.yul\":855:871   */\n      mload\n        /* \"#utility.yul\":914:919   */\n      dup1\n        /* \"#utility.yul\":907:920   */\n      iszero\n        /* \"#utility.yul\":900:921   */\n      iszero\n        /* \"#utility.yul\":893:898   */\n      dup2\n        /* \"#utility.yul\":890:922   */\n      eq\n        /* \"#utility.yul\":880:882   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":941:947   */\n      dup2\n        /* \"#utility.yul\":933:939   */\n      dup3\n        /* \"#utility.yul\":926:948   */\n      revert\n        /* \"#utility.yul\":985:1909   */\n    tag_56:\n        /* \"#utility.yul\":1065:1071   */\n      0x00\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1106:1115   */\n      dup3\n        /* \"#utility.yul\":1097:1104   */\n      dup5\n        /* \"#utility.yul\":1093:1116   */\n      sub\n        /* \"#utility.yul\":1089:1121   */\n      slt\n        /* \"#utility.yul\":1086:1088   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1139:1145   */\n      dup1\n        /* \"#utility.yul\":1131:1137   */\n      dup2\n        /* \"#utility.yul\":1124:1146   */\n      revert\n        /* \"#utility.yul\":1086:1088   */\n    tag_149:\n        /* \"#utility.yul\":1177:1186   */\n      dup2\n        /* \"#utility.yul\":1171:1187   */\n      mload\n        /* \"#utility.yul\":1206:1224   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1247:1249   */\n      dup1\n        /* \"#utility.yul\":1239:1245   */\n      dup3\n        /* \"#utility.yul\":1236:1250   */\n      gt\n        /* \"#utility.yul\":1233:1235   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1268:1274   */\n      dup3\n        /* \"#utility.yul\":1260:1266   */\n      dup4\n        /* \"#utility.yul\":1253:1275   */\n      revert\n        /* \"#utility.yul\":1233:1235   */\n    tag_150:\n        /* \"#utility.yul\":1311:1317   */\n      dup2\n        /* \"#utility.yul\":1300:1309   */\n      dup5\n        /* \"#utility.yul\":1296:1318   */\n      add\n        /* \"#utility.yul\":1286:1318   */\n      swap2\n      pop\n        /* \"#utility.yul\":1356:1363   */\n      dup5\n        /* \"#utility.yul\":1349:1353   */\n      0x1f\n        /* \"#utility.yul\":1345:1347   */\n      dup4\n        /* \"#utility.yul\":1341:1354   */\n      add\n        /* \"#utility.yul\":1337:1364   */\n      slt\n        /* \"#utility.yul\":1327:1329   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1383:1389   */\n      dup3\n        /* \"#utility.yul\":1375:1381   */\n      dup4\n        /* \"#utility.yul\":1368:1390   */\n      revert\n        /* \"#utility.yul\":1327:1329   */\n    tag_151:\n        /* \"#utility.yul\":1417:1419   */\n      dup2\n        /* \"#utility.yul\":1411:1420   */\n      mload\n        /* \"#utility.yul\":1439:1441   */\n      dup2\n        /* \"#utility.yul\":1435:1437   */\n      dup2\n        /* \"#utility.yul\":1432:1442   */\n      gt\n        /* \"#utility.yul\":1429:1431   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1445:1463   */\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1520:1522   */\n      0x40\n        /* \"#utility.yul\":1514:1523   */\n      mload\n        /* \"#utility.yul\":1488:1490   */\n      0x1f\n        /* \"#utility.yul\":1574:1587   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1570:1592   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1594:1596   */\n      0x3f\n        /* \"#utility.yul\":1566:1597   */\n      add\n        /* \"#utility.yul\":1562:1602   */\n      and\n        /* \"#utility.yul\":1550:1603   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1618:1636   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1638:1660   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1615:1661   */\n      or\n        /* \"#utility.yul\":1612:1614   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1664:1682   */\n      tag_156\n      tag_154\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1704:1714   */\n      dup2\n        /* \"#utility.yul\":1700:1702   */\n      0x40\n        /* \"#utility.yul\":1693:1715   */\n      mstore\n        /* \"#utility.yul\":1739:1741   */\n      dup3\n        /* \"#utility.yul\":1731:1737   */\n      dup2\n        /* \"#utility.yul\":1724:1742   */\n      mstore\n        /* \"#utility.yul\":1779:1786   */\n      dup8\n        /* \"#utility.yul\":1774:1776   */\n      0x20\n        /* \"#utility.yul\":1769:1771   */\n      dup5\n        /* \"#utility.yul\":1765:1767   */\n      dup8\n        /* \"#utility.yul\":1761:1772   */\n      add\n        /* \"#utility.yul\":1757:1777   */\n      add\n        /* \"#utility.yul\":1754:1787   */\n      gt\n        /* \"#utility.yul\":1751:1753   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1805:1811   */\n      dup6\n        /* \"#utility.yul\":1797:1803   */\n      dup7\n        /* \"#utility.yul\":1790:1812   */\n      revert\n        /* \"#utility.yul\":1751:1753   */\n    tag_157:\n        /* \"#utility.yul\":1823:1878   */\n      tag_126\n        /* \"#utility.yul\":1875:1877   */\n      dup4\n        /* \"#utility.yul\":1870:1872   */\n      0x20\n        /* \"#utility.yul\":1862:1868   */\n      dup4\n        /* \"#utility.yul\":1858:1873   */\n      add\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1849:1851   */\n      dup9\n        /* \"#utility.yul\":1845:1856   */\n      add\n        /* \"#utility.yul\":1823:1878   */\n      tag_159\n      jump\t// in\n        /* \"#utility.yul\":1914:2188   */\n    tag_122:\n        /* \"#utility.yul\":2043:2046   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2075:2088   */\n      mload\n        /* \"#utility.yul\":2097:2150   */\n      tag_161\n        /* \"#utility.yul\":2143:2149   */\n      dup2\n        /* \"#utility.yul\":2138:2141   */\n      dup5\n        /* \"#utility.yul\":2131:2135   */\n      0x20\n        /* \"#utility.yul\":2123:2129   */\n      dup8\n        /* \"#utility.yul\":2119:2136   */\n      add\n        /* \"#utility.yul\":2097:2150   */\n      tag_159\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2166:2182   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2051:2188   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3774:4157   */\n    tag_135:\n        /* \"#utility.yul\":3923:3925   */\n      0x20\n        /* \"#utility.yul\":3912:3921   */\n      dup2\n        /* \"#utility.yul\":3905:3926   */\n      mstore\n        /* \"#utility.yul\":3886:3890   */\n      0x00\n        /* \"#utility.yul\":3955:3961   */\n      dup3\n        /* \"#utility.yul\":3949:3962   */\n      mload\n        /* \"#utility.yul\":3998:4004   */\n      dup1\n        /* \"#utility.yul\":3993:3995   */\n      0x20\n        /* \"#utility.yul\":3982:3991   */\n      dup5\n        /* \"#utility.yul\":3978:3996   */\n      add\n        /* \"#utility.yul\":3971:4005   */\n      mstore\n        /* \"#utility.yul\":4014:4080   */\n      tag_170\n        /* \"#utility.yul\":4073:4079   */\n      dup2\n        /* \"#utility.yul\":4068:4070   */\n      0x40\n        /* \"#utility.yul\":4057:4066   */\n      dup6\n        /* \"#utility.yul\":4053:4071   */\n      add\n        /* \"#utility.yul\":4048:4050   */\n      0x20\n        /* \"#utility.yul\":4040:4046   */\n      dup8\n        /* \"#utility.yul\":4036:4051   */\n      add\n        /* \"#utility.yul\":4014:4080   */\n      tag_159\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4141:4143   */\n      0x1f\n        /* \"#utility.yul\":4120:4135   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4116:4145   */\n      and\n        /* \"#utility.yul\":4101:4146   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4148:4150   */\n      0x40\n        /* \"#utility.yul\":4097:4151   */\n      add\n      swap3\n        /* \"#utility.yul\":3895:4157   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6281:6498   */\n    tag_71:\n        /* \"#utility.yul\":6321:6322   */\n      0x00\n        /* \"#utility.yul\":6347:6348   */\n      dup3\n        /* \"#utility.yul\":6337:6339   */\n      tag_178\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6372:6403   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6426:6430   */\n      0x12\n        /* \"#utility.yul\":6423:6424   */\n      0x04\n        /* \"#utility.yul\":6416:6431   */\n      mstore\n        /* \"#utility.yul\":6454:6458   */\n      0x24\n        /* \"#utility.yul\":6379:6380   */\n      dup2\n        /* \"#utility.yul\":6444:6459   */\n      revert\n        /* \"#utility.yul\":6337:6339   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":6483:6492   */\n      div\n      swap1\n        /* \"#utility.yul\":6327:6498   */\n      jump\t// out\n        /* \"#utility.yul\":6503:6780   */\n    tag_69:\n        /* \"#utility.yul\":6543:6550   */\n      0x00\n        /* \"#utility.yul\":6609:6610   */\n      dup2\n        /* \"#utility.yul\":6605:6606   */\n      0x00\n        /* \"#utility.yul\":6601:6607   */\n      not\n        /* \"#utility.yul\":6597:6611   */\n      div\n        /* \"#utility.yul\":6594:6595   */\n      dup4\n        /* \"#utility.yul\":6591:6612   */\n      gt\n        /* \"#utility.yul\":6586:6587   */\n      dup3\n        /* \"#utility.yul\":6579:6588   */\n      iszero\n        /* \"#utility.yul\":6572:6589   */\n      iszero\n        /* \"#utility.yul\":6568:6613   */\n      and\n        /* \"#utility.yul\":6565:6567   */\n      iszero\n      tag_180\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6636:6673   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6696:6700   */\n      0x11\n        /* \"#utility.yul\":6693:6694   */\n      0x04\n        /* \"#utility.yul\":6686:6701   */\n      mstore\n        /* \"#utility.yul\":6730:6734   */\n      0x24\n        /* \"#utility.yul\":6643:6650   */\n      dup2\n        /* \"#utility.yul\":6714:6735   */\n      revert\n        /* \"#utility.yul\":6565:6567   */\n    tag_180:\n      pop\n        /* \"#utility.yul\":6765:6774   */\n      mul\n      swap1\n        /* \"#utility.yul\":6555:6780   */\n      jump\t// out\n        /* \"#utility.yul\":6785:7043   */\n    tag_159:\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6867:6980   */\n    tag_182:\n        /* \"#utility.yul\":6881:6887   */\n      dup4\n        /* \"#utility.yul\":6878:6879   */\n      dup2\n        /* \"#utility.yul\":6875:6888   */\n      lt\n        /* \"#utility.yul\":6867:6980   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":6957:6968   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6951:6969   */\n      mload\n        /* \"#utility.yul\":6938:6949   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6931:6970   */\n      mstore\n        /* \"#utility.yul\":6903:6905   */\n      0x20\n        /* \"#utility.yul\":6896:6906   */\n      add\n        /* \"#utility.yul\":6867:6980   */\n      jump(tag_182)\n    tag_184:\n        /* \"#utility.yul\":6998:7004   */\n      dup4\n        /* \"#utility.yul\":6995:6996   */\n      dup2\n        /* \"#utility.yul\":6992:7005   */\n      gt\n        /* \"#utility.yul\":6989:6991   */\n      iszero\n      tag_97\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":7033:7034   */\n      0x00\n        /* \"#utility.yul\":7015:7031   */\n      swap2\n      add\n        /* \"#utility.yul\":7008:7035   */\n      mstore\n        /* \"#utility.yul\":6838:7043   */\n      jump\t// out\n        /* \"#utility.yul\":7048:7175   */\n    tag_154:\n        /* \"#utility.yul\":7109:7119   */\n      0x4e487b71\n        /* \"#utility.yul\":7104:7107   */\n      0xe0\n        /* \"#utility.yul\":7100:7120   */\n      shl\n        /* \"#utility.yul\":7097:7098   */\n      0x00\n        /* \"#utility.yul\":7090:7121   */\n      mstore\n        /* \"#utility.yul\":7140:7144   */\n      0x41\n        /* \"#utility.yul\":7137:7138   */\n      0x04\n        /* \"#utility.yul\":7130:7145   */\n      mstore\n        /* \"#utility.yul\":7164:7168   */\n      0x24\n        /* \"#utility.yul\":7161:7162   */\n      0x00\n        /* \"#utility.yul\":7154:7169   */\n      revert\n        /* \"#utility.yul\":7180:7311   */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7255:7286   */\n      dup2\n      and\n        /* \"#utility.yul\":7245:7287   */\n      dup2\n      eq\n        /* \"#utility.yul\":7235:7237   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":7301:7302   */\n      0x00\n        /* \"#utility.yul\":7298:7299   */\n      dup1\n        /* \"#utility.yul\":7291:7303   */\n      revert\n        /* \"#utility.yul\":7235:7237   */\n    tag_188:\n        /* \"#utility.yul\":7225:7311   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202beb499622942a632d3eb98c51a62eb623600e7528e4bc07f1a87f931f2b3bf864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:710:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nodeType": "YulIf",
															"src": "115:2:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "345:363:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "392:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "401:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "409:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "394:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:33:10"
															},
															"nodeType": "YulIf",
															"src": "355:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "427:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "467:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "437:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "427:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "486:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "541:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "526:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "496:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "554:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "598:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "609:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "594:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "594:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "564:29:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:49:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "622:35:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "632:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:25:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "666:36:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "686:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "697:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "682:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "682:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:26:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "290:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "302:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "310:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "318:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "326:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "334:6:10",
														"type": ""
													}
												],
												"src": "196:512:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610c66380380610c6683398101604081905261002f91610097565b600080546001600160a01b03199081166001600160a01b0397881617909155600180548216958716959095179094556002805490941692909416919091179091556005556006556100ec565b80516001600160a01b038116811461009257600080fd5b919050565b600080600080600060a086880312156100ae578081fd5b6100b78661007b565b94506100c56020870161007b565b93506100d36040870161007b565b6060870151608090970151959894975095949392505050565b610b6b806100fb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063956236411161005b57806395623641146101005780639c7af57914610113578063baa1a3ec14610126578063ed7a4e0b1461013957600080fd5b8063156dcbf01461008d57806320781828146100a95780632efe91ef146100d45780636b396719146100dd575b600080fd5b61009660055481565b6040519081526020015b60405180910390f35b6002546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b61009660065481565b6100f06100eb36600461094b565b61014c565b60405190151581526020016100a0565b6000546100bc906001600160a01b031681565b6001546100bc906001600160a01b031681565b6003546100bc906001600160a01b031681565b6004546100bc906001600160a01b031681565b6000805460408051632f6498c360e21b815290516001600160a01b0390921691829163bd92630c916004808301926020929190829003018186803b15801561019357600080fd5b505afa1580156101a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cb9190610983565b61021c5760405162461bcd60e51b815260206004820152601c60248201527f4d61726b65747320686173206e6f74206265656e20736574746c65640000000060448201526064015b60405180910390fd5b60405164736964654160d81b602082015260250160405160208183030381529060405280519060200120816001600160a01b031663fbf063386040518163ffffffff1660e01b815260040160006040518083038186803b15801561027f57600080fd5b505afa158015610293573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bb91908101906109a3565b6040516020016102cb9190610a41565b60405160208183030381529060405280519060200120141561042957600154600380546001600160a01b0319166001600160a01b03909216918217905560408051631c631f5160e21b81529051829163718c7d44916004808301926020929190829003018186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610377919061092f565b600480546001600160a01b039283166001600160a01b03199182168117909255600780548985169216821790556001546005546103ba9492939190921691610675565b600254600454600654610401926001600160a01b03908116921690600a906103e3906009610ab0565b6103ed9190610a90565b6007546001600160a01b0316929190610675565b600254600654610423916001600160a01b03169086906103ed90600a90610a90565b5061066b565b6040516439b4b232a160d91b602082015260250160405160208183030381529060405280519060200120816001600160a01b031663fbf063386040518163ffffffff1660e01b815260040160006040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c891908101906109a3565b6040516020016104d89190610a41565b60405160208183030381529060405280519060200120141561061757600254600380546001600160a01b0319166001600160a01b03909216918217905560408051631c631f5160e21b81529051829163718c7d44916004808301926020929190829003018186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610584919061092f565b600480546001600160a01b039283166001600160a01b03199182168117909255600780548985169216821790556001546005546105c79492939190921691610675565b6002546004546006546105f0926001600160a01b03908116921690600a906103e3906009610ab0565b600254600454600654610423926001600160a01b039081169216906103ed90600a90610a90565b60405162461bcd60e51b815260206004820152602360248201527f6576656e742061646d696e20656e74657265642020696e76616c69642077696e6044820152623732b960e91b6064820152608401610213565b5060019392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106cf9085906106d5565b50505050565b600061072a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ac9092919063ffffffff16565b8051909150156107a757808060200190518101906107489190610983565b6107a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610213565b505050565b60606107bb84846000856107c5565b90505b9392505050565b6060824710156108265760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610213565b6001600160a01b0385163b61087d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610213565b600080866001600160a01b031685876040516108999190610a41565b60006040518083038185875af1925050503d80600081146108d6576040519150601f19603f3d011682016040523d82523d6000602084013e6108db565b606091505b50915091506108eb8282866108f6565b979650505050505050565b606083156109055750816107be565b8251156109155782518084602001fd5b8160405162461bcd60e51b81526004016102139190610a5d565b600060208284031215610940578081fd5b81516107be81610b1d565b6000806040838503121561095d578081fd5b823561096881610b1d565b9150602083013561097881610b1d565b809150509250929050565b600060208284031215610994578081fd5b815180151581146107be578182fd5b6000602082840312156109b4578081fd5b815167ffffffffffffffff808211156109cb578283fd5b818401915084601f8301126109de578283fd5b8151818111156109f0576109f0610b07565b604051601f8201601f19908116603f01168101908382118183101715610a1857610a18610b07565b81604052828152876020848701011115610a30578586fd5b6108eb836020830160208801610adb565b60008251610a53818460208701610adb565b9190910192915050565b6020815260008251806020840152610a7c816040850160208701610adb565b601f01601f19169190910160400192915050565b600082610aab57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ad657634e487b7160e01b81526011600452602481fd5b500290565b60005b83811015610af6578181015183820152602001610ade565b838111156106cf5750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b3257600080fd5b5056fea26469706673582212202beb499622942a632d3eb98c51a62eb623600e7528e4bc07f1a87f931f2b3bf864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC66 CODESIZE SUB DUP1 PUSH2 0xC66 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH2 0xEC JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xAE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB7 DUP7 PUSH2 0x7B JUMP JUMPDEST SWAP5 POP PUSH2 0xC5 PUSH1 0x20 DUP8 ADD PUSH2 0x7B JUMP JUMPDEST SWAP4 POP PUSH2 0xD3 PUSH1 0x40 DUP8 ADD PUSH2 0x7B JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 SWAP1 SWAP8 ADD MLOAD SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB6B DUP1 PUSH2 0xFB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95623641 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95623641 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x9C7AF579 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xBAA1A3EC EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xED7A4E0B EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x156DCBF0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x20781828 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x2EFE91EF EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6B396719 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2F6498C3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0xBD92630C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B65747320686173206E6F74206265656E20736574746C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x7369646541 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBF06338 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2BB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x429 JUMPI PUSH1 0x1 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C631F51 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH4 0x718C7D44 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP10 DUP6 AND SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH2 0x3BA SWAP5 SWAP3 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x401 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3E3 SWAP1 PUSH1 0x9 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH2 0x423 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x3ED SWAP1 PUSH1 0xA SWAP1 PUSH2 0xA90 JUMP JUMPDEST POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x39B4B232A1 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBF06338 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4C8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C631F51 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH4 0x718C7D44 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x560 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP10 DUP6 AND SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH2 0x5C7 SWAP5 SWAP3 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x5F0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3E3 SWAP1 PUSH1 0x9 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x423 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 PUSH2 0x3ED SWAP1 PUSH1 0xA SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6576656E742061646D696E20656E74657265642020696E76616C69642077696E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x3732B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x213 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x6CF SWAP1 DUP6 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7A7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x213 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7BB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x213 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x213 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x8EB DUP3 DUP3 DUP7 PUSH2 0x8F6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x905 JUMPI POP DUP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x915 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x940 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BE DUP2 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x968 DUP2 PUSH2 0xB1D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x978 DUP2 PUSH2 0xB1D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x994 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7BE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9CB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9DE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x9F0 JUMPI PUSH2 0x9F0 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0xB07 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA30 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x8EB DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xADB JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xA53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xADB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xA7C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xAD6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xADE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6CF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xEB 0x49 SWAP7 0x22 SWAP5 0x2A PUSH4 0x2D3EB98C MLOAD 0xA6 0x2E 0xB6 0x23 PUSH1 0xE PUSH22 0x28E4BC07F1A87F931F2B3BF864736F6C634300080400 CALLER ",
							"sourceMap": "321:2286:4:-:0;;;723:356;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;898:13;:30;;-1:-1:-1;;;;;;898:30:4;;;-1:-1:-1;;;;;898:30:4;;;;;;;-1:-1:-1;938:34:4;;;;;;;;;;;;;;982:15;:34;;;;;;;;;;;;;;;;1026:7;:18;1054:7;:18;321:2286;;14:177:10;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:512::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:2;;;409:6;401;394:22;355:2;437:40;467:9;437:40;:::i;:::-;427:50;;496:49;541:2;530:9;526:18;496:49;:::i;:::-;486:59;;564:49;609:2;598:9;594:18;564:49;:::i;:::-;653:2;638:18;;632:25;697:3;682:19;;;676:26;345:363;;;;-1:-1:-1;554:59:10;632:25;676:26;345:363;-1:-1:-1;;;345:363:10:o;:::-;321:2286:4;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7313:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:180:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:10"
															},
															"nodeType": "YulIf",
															"src": "105:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "239:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "214:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "214:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "214:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "254:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "264:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "254:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:10",
														"type": ""
													}
												],
												"src": "14:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "367:311:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "413:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "422:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "430:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "415:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "388:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "397:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "380:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:32:10"
															},
															"nodeType": "YulIf",
															"src": "377:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "474:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "461:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "461:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "452:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "518:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "493:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "533:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "543:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "533:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "557:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "600:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "585:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "572:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "561:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "638:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "613:24:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "613:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "655:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "665:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "325:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "336:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "348:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "356:6:10",
														"type": ""
													}
												],
												"src": "280:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "761:219:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "807:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "816:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "824:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "782:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "791:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "778:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "778:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "803:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "774:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:32:10"
															},
															"nodeType": "YulIf",
															"src": "771:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "842:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "861:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "855:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "846:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "924:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "933:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "941:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "926:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "926:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "926:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "893:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "914:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "907:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "907:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "900:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "900:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "890:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "890:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:40:10"
															},
															"nodeType": "YulIf",
															"src": "880:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "959:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "969:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "727:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "738:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "750:6:10",
														"type": ""
													}
												],
												"src": "683:297:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1076:833:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1122:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1131:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1139:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1124:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1124:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1124:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1097:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1106:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1093:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1089:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1089:32:10"
															},
															"nodeType": "YulIf",
															"src": "1086:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1157:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1177:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1171:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1171:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1161:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1196:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1206:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1200:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1251:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1260:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1268:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1253:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1253:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1247:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1236:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:14:10"
															},
															"nodeType": "YulIf",
															"src": "1233:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1286:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1300:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1290:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1375:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1383:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1368:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1345:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1349:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1341:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1341:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1356:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:35:10"
															},
															"nodeType": "YulIf",
															"src": "1327:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1401:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1417:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:9:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1405:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1443:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1445:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1445:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1445:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1435:2:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1439:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:10:10"
															},
															"nodeType": "YulIf",
															"src": "1429:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1488:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:7:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1500:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1520:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1514:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1504:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1532:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1554:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1578:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1582:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1574:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1574:13:10"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1589:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1570:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1570:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1594:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1566:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1566:31:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1599:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1550:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1536:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1662:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1664:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1664:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1664:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1621:10:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1633:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1618:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1641:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1653:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1638:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1638:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1615:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:46:10"
															},
															"nodeType": "YulIf",
															"src": "1612:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1700:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1704:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1731:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1739:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1724:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1797:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1805:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1790:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1790:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1790:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1765:2:10"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1769:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:11:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1774:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1757:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1757:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1779:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1754:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:33:10"
															},
															"nodeType": "YulIf",
															"src": "1751:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1849:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1845:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1870:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:15:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1875:2:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1823:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1887:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1897:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1042:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1053:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1065:6:10",
														"type": ""
													}
												],
												"src": "985:924:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:137:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2061:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2075:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2065:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2123:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2131:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2138:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2143:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2097:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2097:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2159:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2159:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2032:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2043:3:10",
														"type": ""
													}
												],
												"src": "1914:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2332:137:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2342:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2362:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2356:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2346:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2404:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2412:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2400:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2400:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2419:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2424:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2378:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2378:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2378:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2440:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2451:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2456:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2308:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2313:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2324:3:10",
														"type": ""
													}
												],
												"src": "2193:276:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2666:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2683:3:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2688:7:10",
																		"type": "",
																		"value": "sideA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:20:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2676:20:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2705:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2716:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2721:1:10",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2712:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2712:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_30ac41b3860ef26399c131cbe18e94ab1cd2c7295fb8cba2020943e768450d53__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2650:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2658:3:10",
														"type": ""
													}
												],
												"src": "2474:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2926:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2943:3:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2948:7:10",
																		"type": "",
																		"value": "sideB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2936:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2936:20:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2936:20:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2965:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2976:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2981:1:10",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_acf509066795bba599e870912a34ba17357d0649493861cb4e3c13212626a91e__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2910:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2918:3:10",
														"type": ""
													}
												],
												"src": "2734:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3095:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3105:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3117:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3113:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3105:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3147:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3162:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3178:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3183:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3174:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3174:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3187:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3170:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3170:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3064:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3075:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3086:4:10",
														"type": ""
													}
												],
												"src": "2994:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3359:218:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3369:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3381:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3392:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3377:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3377:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3369:4:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3404:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3422:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3427:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3418:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3414:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3408:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3449:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3464:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3472:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3460:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3460:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3442:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3442:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3442:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3507:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3516:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3524:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3512:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3485:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3548:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3559:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3544:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3564:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3537:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3537:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3312:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3323:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3331:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3339:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3350:4:10",
														"type": ""
													}
												],
												"src": "3202:375:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3677:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3687:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3699:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3695:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3687:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3729:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3754:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3747:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3747:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3740:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3740:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3722:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3722:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3646:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3657:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3668:4:10",
														"type": ""
													}
												],
												"src": "3582:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3895:262:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3912:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3923:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3905:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3935:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3955:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3949:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3939:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3982:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3993:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3998:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4040:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4048:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4036:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4036:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4057:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4068:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4053:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4073:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4014:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4014:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4014:66:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4089:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4105:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4124:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4132:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4120:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4120:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4141:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4116:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4116:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4101:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4148:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4097:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4089:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3864:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3886:4:10",
														"type": ""
													}
												],
												"src": "3774:383:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4353:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4364:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4346:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4346:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4398:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4383:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4403:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4376:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4426:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4437:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4422:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4442:30:10",
																		"type": "",
																		"value": "Markets has not been settled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4415:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4482:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4494:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4505:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4490:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4482:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_357c6b7d92bfd437fa7ded5ef6038b561b633c20dd40f9ca432f6113b55c0cd5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4313:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4327:4:10",
														"type": ""
													}
												],
												"src": "4162:352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4693:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4710:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4721:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4703:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4703:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4744:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4755:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4740:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4740:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4733:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4733:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4783:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4779:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4799:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4854:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4865:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4850:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4870:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4843:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4888:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4900:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4911:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4888:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4670:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4684:4:10",
														"type": ""
													}
												],
												"src": "4519:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5100:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5117:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5128:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5110:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5110:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5151:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5162:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5147:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5167:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5140:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5140:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5190:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5201:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5186:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5206:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5179:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5179:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5179:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5247:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5259:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5255:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5247:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5077:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5091:4:10",
														"type": ""
													}
												],
												"src": "4926:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5475:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5509:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5520:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5505:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5505:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5498:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5498:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5564:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5537:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5630:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5615:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5635:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5608:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5608:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5608:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5657:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5669:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5680:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5665:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5665:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5657:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5435:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5449:4:10",
														"type": ""
													}
												],
												"src": "5284:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5869:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5879:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5879:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5931:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5936:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5909:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5959:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5970:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5955:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5975:34:10",
																		"type": "",
																		"value": "event admin entered  invalid win"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5948:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6030:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6041:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6026:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6026:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6046:5:10",
																		"type": "",
																		"value": "ner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6019:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6019:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6019:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6061:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6073:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6084:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6069:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6061:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbb736eb6b26ee83e13d0b106d9d8d3642a1c7e6d03d5235e286e0d5a76a468b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5846:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5860:4:10",
														"type": ""
													}
												],
												"src": "5695:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6200:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6210:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6222:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6233:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6218:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6210:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6252:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6263:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6245:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6245:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6245:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6169:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6180:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6191:4:10",
														"type": ""
													}
												],
												"src": "6099:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:171:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6358:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "6379:1:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6386:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6391:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6382:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6382:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6372:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6372:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6372:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6423:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6426:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6416:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6416:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6416:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "6451:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6454:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6444:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6444:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6444:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6347:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6340:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:9:10"
															},
															"nodeType": "YulIf",
															"src": "6337:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6478:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6487:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6490:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6483:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6478:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6312:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6315:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6321:1:10",
														"type": ""
													}
												],
												"src": "6281:217:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6555:225:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6622:123:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "product",
																					"nodeType": "YulIdentifier",
																					"src": "6643:7:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6656:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6661:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6652:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6652:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6636:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6636:37:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6636:37:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6693:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6696:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6686:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6686:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6686:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "product",
																					"nodeType": "YulIdentifier",
																					"src": "6721:7:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6730:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6714:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6714:21:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6714:21:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6586:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6579:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6579:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6572:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6572:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6594:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6605:1:10",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6601:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6601:6:10"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6609:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6597:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6597:14:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6591:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6591:21:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6568:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6568:45:10"
															},
															"nodeType": "YulIf",
															"src": "6565:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6754:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6769:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6772:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6765:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6765:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6754:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6534:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6537:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6543:7:10",
														"type": ""
													}
												],
												"src": "6503:277:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6838:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6848:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6857:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6852:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6917:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6942:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6947:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6938:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6938:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6961:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6966:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6957:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6957:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6951:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6951:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6931:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6931:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6931:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6878:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6881:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6875:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6875:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6889:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6891:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6900:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6903:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6896:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6896:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6891:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6871:3:10",
																"statements": []
															},
															"src": "6867:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7006:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7019:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7024:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7015:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7015:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7033:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7008:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7008:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7008:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6995:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6998:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6992:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6992:13:10"
															},
															"nodeType": "YulIf",
															"src": "6989:2:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6816:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6821:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6826:6:10",
														"type": ""
													}
												],
												"src": "6785:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7080:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7097:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7104:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7109:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7100:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7090:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7130:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7161:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7164:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7154:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7048:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7225:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7289:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7301:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7291:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7291:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7248:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7259:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7274:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7279:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7270:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7270:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7283:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "7266:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7266:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7255:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7255:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7245:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7238:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:50:10"
															},
															"nodeType": "YulIf",
															"src": "7235:2:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7214:5:10",
														"type": ""
													}
												],
												"src": "7180:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_30ac41b3860ef26399c131cbe18e94ab1cd2c7295fb8cba2020943e768450d53__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"sideA\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_acf509066795bba599e870912a34ba17357d0649493861cb4e3c13212626a91e__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"sideB\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_357c6b7d92bfd437fa7ded5ef6038b561b633c20dd40f9ca432f6113b55c0cd5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Markets has not been settled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fbb736eb6b26ee83e13d0b106d9d8d3642a1c7e6d03d5235e286e0d5a76a468b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"event admin entered  invalid win\")\n        mstore(add(headStart, 96), \"ner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(product, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063956236411161005b57806395623641146101005780639c7af57914610113578063baa1a3ec14610126578063ed7a4e0b1461013957600080fd5b8063156dcbf01461008d57806320781828146100a95780632efe91ef146100d45780636b396719146100dd575b600080fd5b61009660055481565b6040519081526020015b60405180910390f35b6002546100bc906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b61009660065481565b6100f06100eb36600461094b565b61014c565b60405190151581526020016100a0565b6000546100bc906001600160a01b031681565b6001546100bc906001600160a01b031681565b6003546100bc906001600160a01b031681565b6004546100bc906001600160a01b031681565b6000805460408051632f6498c360e21b815290516001600160a01b0390921691829163bd92630c916004808301926020929190829003018186803b15801561019357600080fd5b505afa1580156101a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cb9190610983565b61021c5760405162461bcd60e51b815260206004820152601c60248201527f4d61726b65747320686173206e6f74206265656e20736574746c65640000000060448201526064015b60405180910390fd5b60405164736964654160d81b602082015260250160405160208183030381529060405280519060200120816001600160a01b031663fbf063386040518163ffffffff1660e01b815260040160006040518083038186803b15801561027f57600080fd5b505afa158015610293573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bb91908101906109a3565b6040516020016102cb9190610a41565b60405160208183030381529060405280519060200120141561042957600154600380546001600160a01b0319166001600160a01b03909216918217905560408051631c631f5160e21b81529051829163718c7d44916004808301926020929190829003018186803b15801561033f57600080fd5b505afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610377919061092f565b600480546001600160a01b039283166001600160a01b03199182168117909255600780548985169216821790556001546005546103ba9492939190921691610675565b600254600454600654610401926001600160a01b03908116921690600a906103e3906009610ab0565b6103ed9190610a90565b6007546001600160a01b0316929190610675565b600254600654610423916001600160a01b03169086906103ed90600a90610a90565b5061066b565b6040516439b4b232a160d91b602082015260250160405160208183030381529060405280519060200120816001600160a01b031663fbf063386040518163ffffffff1660e01b815260040160006040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104c891908101906109a3565b6040516020016104d89190610a41565b60405160208183030381529060405280519060200120141561061757600254600380546001600160a01b0319166001600160a01b03909216918217905560408051631c631f5160e21b81529051829163718c7d44916004808301926020929190829003018186803b15801561054c57600080fd5b505afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610584919061092f565b600480546001600160a01b039283166001600160a01b03199182168117909255600780548985169216821790556001546005546105c79492939190921691610675565b6002546004546006546105f0926001600160a01b03908116921690600a906103e3906009610ab0565b600254600454600654610423926001600160a01b039081169216906103ed90600a90610a90565b60405162461bcd60e51b815260206004820152602360248201527f6576656e742061646d696e20656e74657265642020696e76616c69642077696e6044820152623732b960e91b6064820152608401610213565b5060019392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106cf9085906106d5565b50505050565b600061072a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ac9092919063ffffffff16565b8051909150156107a757808060200190518101906107489190610983565b6107a75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610213565b505050565b60606107bb84846000856107c5565b90505b9392505050565b6060824710156108265760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610213565b6001600160a01b0385163b61087d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610213565b600080866001600160a01b031685876040516108999190610a41565b60006040518083038185875af1925050503d80600081146108d6576040519150601f19603f3d011682016040523d82523d6000602084013e6108db565b606091505b50915091506108eb8282866108f6565b979650505050505050565b606083156109055750816107be565b8251156109155782518084602001fd5b8160405162461bcd60e51b81526004016102139190610a5d565b600060208284031215610940578081fd5b81516107be81610b1d565b6000806040838503121561095d578081fd5b823561096881610b1d565b9150602083013561097881610b1d565b809150509250929050565b600060208284031215610994578081fd5b815180151581146107be578182fd5b6000602082840312156109b4578081fd5b815167ffffffffffffffff808211156109cb578283fd5b818401915084601f8301126109de578283fd5b8151818111156109f0576109f0610b07565b604051601f8201601f19908116603f01168101908382118183101715610a1857610a18610b07565b81604052828152876020848701011115610a30578586fd5b6108eb836020830160208801610adb565b60008251610a53818460208701610adb565b9190910192915050565b6020815260008251806020840152610a7c816040850160208701610adb565b601f01601f19169190910160400192915050565b600082610aab57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ad657634e487b7160e01b81526011600452602481fd5b500290565b60005b83811015610af6578181015183820152602001610ade565b838111156106cf5750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b3257600080fd5b5056fea26469706673582212202beb499622942a632d3eb98c51a62eb623600e7528e4bc07f1a87f931f2b3bf864736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95623641 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95623641 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x9C7AF579 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0xBAA1A3EC EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xED7A4E0B EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x156DCBF0 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x20781828 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x2EFE91EF EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6B396719 EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0x94B JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2F6498C3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0xBD92630C SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D61726B65747320686173206E6F74206265656E20736574746C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x7369646541 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBF06338 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x293 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2BB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x429 JUMPI PUSH1 0x1 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C631F51 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH4 0x718C7D44 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP10 DUP6 AND SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH2 0x3BA SWAP5 SWAP3 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x401 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3E3 SWAP1 PUSH1 0x9 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x6 SLOAD PUSH2 0x423 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x3ED SWAP1 PUSH1 0xA SWAP1 PUSH2 0xA90 JUMP JUMPDEST POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH5 0x39B4B232A1 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFBF06338 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x4C8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x1C631F51 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH4 0x718C7D44 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x560 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP10 DUP6 AND SWAP3 AND DUP3 OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH2 0x5C7 SWAP5 SWAP3 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH2 0x675 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x5F0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 PUSH1 0xA SWAP1 PUSH2 0x3E3 SWAP1 PUSH1 0x9 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH1 0x6 SLOAD PUSH2 0x423 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 PUSH2 0x3ED SWAP1 PUSH1 0xA SWAP1 PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6576656E742061646D696E20656E74657265642020696E76616C69642077696E PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x3732B9 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x213 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x6CF SWAP1 DUP6 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7A7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x748 SWAP2 SWAP1 PUSH2 0x983 JUMP JUMPDEST PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x213 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7BB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x7C5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x213 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x213 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x8EB DUP3 DUP3 DUP7 PUSH2 0x8F6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x905 JUMPI POP DUP2 PUSH2 0x7BE JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x915 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x940 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7BE DUP2 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x95D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x968 DUP2 PUSH2 0xB1D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x978 DUP2 PUSH2 0xB1D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x994 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7BE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9CB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9DE JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x9F0 JUMPI PUSH2 0x9F0 PUSH2 0xB07 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0xB07 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA30 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x8EB DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xADB JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xA53 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xADB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xA7C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xAAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xAD6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xADE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6CF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xEB 0x49 SWAP7 0x22 SWAP5 0x2A PUSH4 0x2D3EB98C MLOAD 0xA6 0x2E 0xB6 0x23 PUSH1 0xE PUSH22 0x28E4BC07F1A87F931F2B3BF864736F6C634300080400 CALLER ",
							"sourceMap": "321:2286:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:28;;;;;;;;;6245:25:10;;;6233:2;6218:18;613:28:4;;;;;;;;479:39;;;;;-1:-1:-1;;;;;479:39:4;;;;;;-1:-1:-1;;;;;3158:32:10;;;3140:51;;3128:2;3113:18;479:39:4;3095:102:10;648:28:4;;;;;;1085:1520;;;;;;:::i;:::-;;:::i;:::-;;;3747:14:10;;3740:22;3722:41;;3710:2;3695:18;1085:1520:4;3677:92:10;389:37:4;;;;;-1:-1:-1;;;;;389:37:4;;;433:39;;;;;-1:-1:-1;;;;;433:39:4;;;529:33;;;;;-1:-1:-1;;;;;529:33:4;;;569:37;;;;;-1:-1:-1;;;;;569:37:4;;;1085:1520;1178:4;1219:13;;1251:26;;;-1:-1:-1;;;1251:26:4;;;;-1:-1:-1;;;;;1219:13:4;;;;;;1251:24;;:26;;;;;;;;;;;;;;1219:13;1251:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1243:67;;;;-1:-1:-1;;;1243:67:4;;4364:2:10;1243:67:4;;;4346:21:10;4403:2;4383:18;;;4376:30;4442;4422:18;;;4415:58;4490:18;;1243:67:4;;;;;;;;;1386:25;;-1:-1:-1;;;1386:25:4;;;2676:20:10;2712:11;;1386:25:4;;;;;;;;;;;;1376:36;;;;;;1350:6;-1:-1:-1;;;;;1350:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1350:20:4;;;;;;;;;;;;:::i;:::-;1333:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;1323:49;;;;;;:89;1320:1258;;;1439:15;;1427:9;:27;;-1:-1:-1;;;;;;1427:27:4;-1:-1:-1;;;;;1439:15:4;;;1427:27;;;;;1531:19;;;-1:-1:-1;;;1531:19:4;;;;1439:15;;1531:17;;:19;;;;;;;;;;;;;;1439:15;1531:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1515:13;:35;;-1:-1:-1;;;;;1515:35:4;;;-1:-1:-1;;;;;;1515:35:4;;;;;;;;1565:18;:40;;;;;;;;;;;1515:35;1655:15;1687:7;;1619:76;;1565:40;;1655:15;;;;;1619:35;:76::i;:::-;1745:15;;1762:13;;1777:7;;1709:85;;-1:-1:-1;;;;;1745:15:4;;;;1762:13;;1791:2;;1777:11;;1787:1;1777:11;:::i;:::-;:16;;;;:::i;:::-;1709:18;;-1:-1:-1;;;;;1709:18:4;;:85;;:35;:85::i;:::-;1844:15;;1879:7;;1808:84;;-1:-1:-1;;;;;1844:15:4;;1861:16;;1879:12;;1889:2;;1879:12;:::i;1808:84::-;1320:1258;;;;1983:25;;-1:-1:-1;;;1983:25:4;;;2936:20:10;2972:11;;1983:25:4;;;;;;;;;;;;1973:36;;;;;;1947:6;-1:-1:-1;;;;;1947:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1947:20:4;;;;;;;;;;;;:::i;:::-;1930:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;1920:49;;;;;;:89;1917:661;;;2036:15;;2024:9;:27;;-1:-1:-1;;;;;;2024:27:4;-1:-1:-1;;;;;2036:15:4;;;2024:27;;;;;2128:19;;;-1:-1:-1;;;2128:19:4;;;;2036:15;;2128:17;;:19;;;;;;;;;;;;;;2036:15;2128:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2112:13;:35;;-1:-1:-1;;;;;2112:35:4;;;-1:-1:-1;;;;;;2112:35:4;;;;;;;;2162:18;:40;;;;;;;;;;;2112:35;2252:15;2284:7;;2216:76;;2162:40;;2252:15;;;;;2216:35;:76::i;:::-;2342:15;;2359:13;;2374:7;;2306:84;;-1:-1:-1;;;;;2342:15:4;;;;2359:13;;2387:2;;2374:11;;2384:1;2374:11;:::i;2306:84::-;2440:15;;2457:13;;2472:7;;2404:80;;-1:-1:-1;;;;;2440:15:4;;;;2457:13;;2472:11;;2481:2;;2472:11;:::i;1917:661::-;2522:45;;-1:-1:-1;;;2522:45:4;;5897:2:10;2522:45:4;;;5879:21:10;5936:2;5916:18;;;5909:30;5975:34;5955:18;;;5948:62;-1:-1:-1;;;6026:18:10;;;6019:33;6069:19;;2522:45:4;5869:225:10;1917:661:4;-1:-1:-1;2594:4:4;;1085:1520;-1:-1:-1;;;1085:1520:4:o;974:241:2:-;1139:68;;;-1:-1:-1;;;;;3460:15:10;;;1139:68:2;;;3442:34:10;3512:15;;3492:18;;;3485:43;3544:18;;;;3537:34;;;1139:68:2;;;;;;;;;;3377:18:10;;;;1139:68:2;;;;;;;;-1:-1:-1;;;;;1139:68:2;-1:-1:-1;;;1139:68:2;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:2;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:2;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:2;;5486:2:10;4351:85:2;;;5468:21:10;5525:2;5505:18;;;5498:30;5564:34;5544:18;;;5537:62;-1:-1:-1;;;5615:18:10;;;5608:40;5665:19;;4351:85:2;5458:232:10;4351:85:2;3747:706;;;:::o;3861:223:3:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;4721:2:10;5137:81:3;;;4703:21:10;4760:2;4740:18;;;4733:30;4799:34;4779:18;;;4772:62;-1:-1:-1;;;4850:18:10;;;4843:36;4896:19;;5137:81:3;4693:228:10;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;5128:2:10;5228:60:3;;;5110:21:10;5167:2;5147:18;;;5140:30;5206:31;5186:18;;;5179:59;5255:18;;5228:60:3;5100:179:10;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:3;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;8069:145;8259:12;8252:20;;-1:-1:-1;;;8252:20:3;;;;;;;;:::i;14:261:10:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;195:9;189:16;214:31;239:5;214:31;:::i;280:398::-;348:6;356;409:2;397:9;388:7;384:23;380:32;377:2;;;430:6;422;415:22;377:2;474:9;461:23;493:31;518:5;493:31;:::i;:::-;543:5;-1:-1:-1;600:2:10;585:18;;572:32;613:33;572:32;613:33;:::i;:::-;665:7;655:17;;;367:311;;;;;:::o;683:297::-;750:6;803:2;791:9;782:7;778:23;774:32;771:2;;;824:6;816;809:22;771:2;861:9;855:16;914:5;907:13;900:21;893:5;890:32;880:2;;941:6;933;926:22;985:924;1065:6;1118:2;1106:9;1097:7;1093:23;1089:32;1086:2;;;1139:6;1131;1124:22;1086:2;1177:9;1171:16;1206:18;1247:2;1239:6;1236:14;1233:2;;;1268:6;1260;1253:22;1233:2;1311:6;1300:9;1296:22;1286:32;;1356:7;1349:4;1345:2;1341:13;1337:27;1327:2;;1383:6;1375;1368:22;1327:2;1417;1411:9;1439:2;1435;1432:10;1429:2;;;1445:18;;:::i;:::-;1520:2;1514:9;1488:2;1574:13;;-1:-1:-1;;1570:22:10;;;1594:2;1566:31;1562:40;1550:53;;;1618:18;;;1638:22;;;1615:46;1612:2;;;1664:18;;:::i;:::-;1704:10;1700:2;1693:22;1739:2;1731:6;1724:18;1779:7;1774:2;1769;1765;1761:11;1757:20;1754:33;1751:2;;;1805:6;1797;1790:22;1751:2;1823:55;1875:2;1870;1862:6;1858:15;1853:2;1849;1845:11;1823:55;:::i;1914:274::-;2043:3;2081:6;2075:13;2097:53;2143:6;2138:3;2131:4;2123:6;2119:17;2097:53;:::i;:::-;2166:16;;;;;2051:137;-1:-1:-1;;2051:137:10:o;3774:383::-;3923:2;3912:9;3905:21;3886:4;3955:6;3949:13;3998:6;3993:2;3982:9;3978:18;3971:34;4014:66;4073:6;4068:2;4057:9;4053:18;4048:2;4040:6;4036:15;4014:66;:::i;:::-;4141:2;4120:15;-1:-1:-1;;4116:29:10;4101:45;;;;4148:2;4097:54;;3895:262;-1:-1:-1;;3895:262:10:o;6281:217::-;6321:1;6347;6337:2;;-1:-1:-1;;;6372:31:10;;6426:4;6423:1;6416:15;6454:4;6379:1;6444:15;6337:2;-1:-1:-1;6483:9:10;;6327:171::o;6503:277::-;6543:7;6609:1;6605;6601:6;6597:14;6594:1;6591:21;6586:1;6579:9;6572:17;6568:45;6565:2;;;-1:-1:-1;;;6636:37:10;;6696:4;6693:1;6686:15;6730:4;6643:7;6714:21;6565:2;-1:-1:-1;6765:9:10;;6555:225::o;6785:258::-;6857:1;6867:113;6881:6;6878:1;6875:13;6867:113;;;6957:11;;;6951:18;6938:11;;;6931:39;6903:2;6896:10;6867:113;;;6998:6;6995:1;6992:13;6989:2;;;-1:-1:-1;;7033:1:10;7015:16;;7008:27;6838:205::o;7048:127::-;7109:10;7104:3;7100:20;7097:1;7090:31;7140:4;7137:1;7130:15;7164:4;7161:1;7154:15;7180:131;-1:-1:-1;;;;;7255:31:10;;7245:42;;7235:2;;7301:1;7298;7291:12;7235:2;7225:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "584600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"amountA()": "985",
								"amountB()": "1029",
								"marketAddress()": "1037",
								"settlePair(address,address)": "infinite",
								"sideABetAddress()": "1059",
								"sideBBetAddress()": "1060",
								"winnerAddress()": "1103",
								"winnerBet()": "1081"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 723,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 898,
									"end": 911,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 898,
									"end": 928,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 898,
									"end": 928,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 898,
									"end": 928,
									"name": "SWAP8",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 898,
									"end": 928,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 938,
									"end": 972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 938,
									"end": 972,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 982,
									"end": 997,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 982,
									"end": 1016,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1026,
									"end": 1033,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1026,
									"end": 1044,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1061,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1054,
									"end": 1072,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 708,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 708,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 355,
									"end": 357,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 355,
									"end": 357,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 409,
									"end": 415,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 401,
									"end": 407,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 394,
									"end": 416,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 355,
									"end": 357,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 355,
									"end": 357,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 437,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 467,
									"end": 476,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 437,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 437,
									"end": 477,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 437,
									"end": 477,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 437,
									"end": 477,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 427,
									"end": 477,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 427,
									"end": 477,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 496,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 541,
									"end": 543,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 530,
									"end": 539,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 526,
									"end": 544,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 496,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 496,
									"end": 545,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 496,
									"end": 545,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 496,
									"end": 545,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 486,
									"end": 545,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 486,
									"end": 545,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 564,
									"end": 613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 609,
									"end": 611,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 598,
									"end": 607,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 594,
									"end": 612,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 564,
									"end": 613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 564,
									"end": 613,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 564,
									"end": 613,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 564,
									"end": 613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 653,
									"end": 655,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 632,
									"end": 657,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 697,
									"end": 700,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 682,
									"end": 701,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 682,
									"end": 701,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 682,
									"end": 701,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 676,
									"end": 702,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 345,
									"end": 708,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 345,
									"end": 708,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 345,
									"end": 708,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 345,
									"end": 708,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 554,
									"end": 613,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 632,
									"end": 657,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 676,
									"end": 702,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 345,
									"end": 708,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 345,
									"end": 708,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 345,
									"end": 708,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 345,
									"end": 708,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2607,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202beb499622942a632d3eb98c51a62eb623600e7528e4bc07f1a87f931f2b3bf864736f6c63430008040033",
									".code": [
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "95623641"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "95623641"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "9C7AF579"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "BAA1A3EC"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "ED7A4E0B"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "156DCBF0"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "20781828"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "2EFE91EF"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "6B396719"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 2607,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6245,
											"end": 6270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6245,
											"end": 6270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6245,
											"end": 6270,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 613,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 641,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 641,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 479,
											"end": 518,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 479,
											"end": 518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 479,
											"end": 518,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 479,
											"end": 518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 479,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3095,
											"end": 3197,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 676,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 648,
											"end": 676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 648,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 648,
											"end": 676,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 648,
											"end": 676,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 648,
											"end": 676,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 648,
											"end": 676,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3747,
											"end": 3761,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3740,
											"end": 3762,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3677,
											"end": 3769,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 389,
											"end": 426,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 389,
											"end": 426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 389,
											"end": 426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 426,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 389,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 389,
											"end": 426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 389,
											"end": 426,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 426,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 433,
											"end": 472,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 433,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 433,
											"end": 472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 433,
											"end": 472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 433,
											"end": 472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 433,
											"end": 472,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 529,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 529,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 529,
											"end": 562,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 529,
											"end": 562,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 529,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 529,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 529,
											"end": 562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 529,
											"end": 562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 562,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 569,
											"end": 606,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 569,
											"end": 606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 606,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 606,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 569,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 569,
											"end": 606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 569,
											"end": 606,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 569,
											"end": 606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 569,
											"end": 606,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1178,
											"end": 1182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F6498C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "BD92630C"
										},
										{
											"begin": 1251,
											"end": 1275,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1232,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1251,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4403,
											"end": 4405,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4406,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4472,
											"name": "PUSH",
											"source": 10,
											"value": "4D61726B65747320686173206E6F74206265656E20736574746C656400000000"
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4415,
											"end": 4473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1243,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7369646541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2712,
											"end": 2723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1412,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1412,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1376,
											"end": 1412,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1368,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "FBF06338"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1350,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1412,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1454,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C631F51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "718C7D44"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1454,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1528,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1619,
											"end": 1695,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1619,
											"end": 1695,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1695,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1619,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1775,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1775,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1777,
											"end": 1784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1777,
											"end": 1788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1777,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1777,
											"end": 1788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1788,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1777,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1777,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1709,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1859,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1844,
											"end": 1859,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1808,
											"end": 1892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1859,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1879,
											"end": 1891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1891,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1889,
											"end": 1891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1879,
											"end": 1891,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1808,
											"end": 1892,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1808,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1320,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39B4B232A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2956,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2972,
											"end": 2983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 2009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 2009,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "FBF06338"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1968,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2009,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C631F51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2145,
											"name": "PUSH",
											"source": 4,
											"value": "718C7D44"
										},
										{
											"begin": 2128,
											"end": 2145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2128,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2216,
											"end": 2292,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2202,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2216,
											"end": 2292,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2216,
											"end": 2292,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2216,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2372,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2306,
											"end": 2390,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2359,
											"end": 2372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2374,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2374,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2374,
											"end": 2385,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2390,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2306,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2455,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2440,
											"end": 2455,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2470,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2479,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2472,
											"end": 2479,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2404,
											"end": 2484,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2472,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2472,
											"end": 2483,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 5899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5879,
											"end": 5900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5936,
											"end": 5938,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 5939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "PUSH",
											"source": 10,
											"value": "6576656E742061646D696E20656E74657265642020696E76616C69642077696E"
										},
										{
											"begin": 5955,
											"end": 5973,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5955,
											"end": 5973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5955,
											"end": 5973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5948,
											"end": 6010,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6044,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6019,
											"end": 6052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6088,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6069,
											"end": 6088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5869,
											"end": 6094,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1917,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 2605,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3460,
											"end": 3475,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3442,
											"end": 3476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3527,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3485,
											"end": 3528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3571,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3571,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5486,
											"end": 5488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5468,
											"end": 5489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5598,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5599,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5608,
											"end": 5648,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5684,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5665,
											"end": 5684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5458,
											"end": 5690,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4703,
											"end": 4724,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4740,
											"end": 4758,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4833,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 4834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4879,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4896,
											"end": 4915,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4896,
											"end": 4915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4693,
											"end": 4921,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5128,
											"end": 5130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5131,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5169,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5147,
											"end": 5165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5237,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5238,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5100,
											"end": 5279,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8069,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 275,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14,
											"end": 275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 105,
											"end": 107,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 105,
											"end": 107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 105,
											"end": 107,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 158,
											"end": 164,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 150,
											"end": 156,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 143,
											"end": 165,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 105,
											"end": 107,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 105,
											"end": 107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 195,
											"end": 204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 189,
											"end": 205,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 214,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 214,
											"end": 245,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 348,
											"end": 354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 409,
											"end": 411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 388,
											"end": 395,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 384,
											"end": 407,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 380,
											"end": 412,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 377,
											"end": 379,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 377,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 377,
											"end": 379,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 422,
											"end": 428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 415,
											"end": 437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 377,
											"end": 379,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 377,
											"end": 379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 461,
											"end": 484,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 493,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 493,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 493,
											"end": 524,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 524,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 493,
											"end": 524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 543,
											"end": 548,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 600,
											"end": 602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 585,
											"end": 603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 572,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 613,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 572,
											"end": 604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 613,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 613,
											"end": 646,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 613,
											"end": 646,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 613,
											"end": 646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 655,
											"end": 672,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 655,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 655,
											"end": 672,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 367,
											"end": 678,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 367,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 367,
											"end": 678,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 367,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 367,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 367,
											"end": 678,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 683,
											"end": 980,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 683,
											"end": 980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 750,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 805,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 782,
											"end": 789,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 778,
											"end": 801,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 774,
											"end": 806,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 771,
											"end": 773,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 824,
											"end": 830,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 809,
											"end": 831,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 771,
											"end": 773,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 861,
											"end": 870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 855,
											"end": 871,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 907,
											"end": 920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 900,
											"end": 921,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 893,
											"end": 898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 890,
											"end": 922,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 926,
											"end": 948,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 985,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1093,
											"end": 1116,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1121,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1146,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1187,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1224,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1250,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1300,
											"end": 1309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1356,
											"end": 1363,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1353,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1368,
											"end": 1390,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1327,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1442,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1445,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1522,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1490,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1574,
											"end": 1587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 1566,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1562,
											"end": 1602,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1636,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1660,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1660,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1615,
											"end": 1661,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1700,
											"end": 1702,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1779,
											"end": 1786,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1774,
											"end": 1776,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1787,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1812,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1751,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1875,
											"end": 1877,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1870,
											"end": 1872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1868,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1858,
											"end": 1873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1823,
											"end": 1878,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1914,
											"end": 2188,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1914,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2097,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2129,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2097,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2097,
											"end": 2150,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2150,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2097,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2188,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3774,
											"end": 4157,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3774,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 3926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3949,
											"end": 3962,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 3995,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 3991,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4066,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4050,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4014,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4014,
											"end": 4080,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4014,
											"end": 4080,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4014,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4120,
											"end": 4135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4116,
											"end": 4145,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4150,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 4157,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 4157,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6281,
											"end": 6498,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 6281,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6430,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6416,
											"end": 6431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6379,
											"end": 6380,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6498,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6503,
											"end": 6780,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6503,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6597,
											"end": 6611,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6586,
											"end": 6587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6568,
											"end": 6613,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6636,
											"end": 6673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6636,
											"end": 6673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6686,
											"end": 6701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6734,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6643,
											"end": 6650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6765,
											"end": 6774,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6765,
											"end": 6774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6780,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6785,
											"end": 7043,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 6785,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6881,
											"end": 6887,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6875,
											"end": 6888,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6938,
											"end": 6949,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6938,
											"end": 6949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6938,
											"end": 6949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6931,
											"end": 6970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6903,
											"end": 6905,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6896,
											"end": 6906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 6867,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6998,
											"end": 7004,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6995,
											"end": 6996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7005,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6989,
											"end": 6991,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6989,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 6989,
											"end": 6991,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7031,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7015,
											"end": 7031,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7035,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 7043,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7048,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 7048,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7109,
											"end": 7119,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 7100,
											"end": 7120,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 7098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7140,
											"end": 7144,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7130,
											"end": 7145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7161,
											"end": 7162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7311,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 7180,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7255,
											"end": 7286,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7255,
											"end": 7286,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7245,
											"end": 7287,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7299,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7235,
											"end": 7237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7225,
											"end": 7311,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"amountA()": "156dcbf0",
							"amountB()": "2efe91ef",
							"marketAddress()": "95623641",
							"settlePair(address,address)": "6b396719",
							"sideABetAddress()": "9c7af579",
							"sideBBetAddress()": "20781828",
							"winnerAddress()": "ed7a4e0b",
							"winnerBet()": "baa1a3ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sideABetAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sideBBetAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountA_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amountA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_web3betsAddress\",\"type\":\"address\"}],\"name\":\"settlePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideABetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideBBetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerBet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BetPair.sol\":\"BetPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/BetPair.sol\":{\"keccak256\":\"0x1985231d1701735b0e5d4d325520feb7140b043f4278f69fea6cb900c1434b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fe634d8f4ee052cee7c64eb37ba1c8972728edfc40b92db2df208f330fdbb37\",\"dweb:/ipfs/QmPfNnmboQGcqke8Sn5SfEAwLSngWsLoktGVY1qfZMXT92\"]},\"contracts/interface/IBase.sol\":{\"keccak256\":\"0x998ed63f5622c2fa44f95f00e0d77088901a13271fdfb33e91c83f0e19366d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e835772ffc3e1547506b91d4c7ef0dfea96ba5eb402442ae735b8969769e7185\",\"dweb:/ipfs/Qme6BQrxhJhHfynCf8XmGyCFJutmPG1RjtHjrHwLjkuQo3\"]},\"contracts/interface/IBet.sol\":{\"keccak256\":\"0x0ff1f5c7580690a0d0c0790f83eaff0fcb9b9e08afbb4ef7d95038bb716f791f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://764d585b61e8a3e1fe5770ae964f656a41e3b6b2ee136bd9c66040cc25fd0511\",\"dweb:/ipfs/QmfMpmQaUSrPxXJFzD2y5SqyCmoE7GjNwBff5X7aW8mqW8\"]},\"contracts/interface/IBetPair.sol\":{\"keccak256\":\"0x622919a7669b7db6c40f8ffd350259e1f8d2dfb6f9cc05fc48fc42688ecf8a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4ee76e913c9b1cef4b6eb281c7489de3d2045abf0aff5d9e2f361134fddd933\",\"dweb:/ipfs/QmUCgBUHRpz4pS49eQBVCPYN2TyJJn2dSEyQpf2feDF6fg\"]},\"contracts/interface/IMarket.sol\":{\"keccak256\":\"0x708f27b0a6483224bb62dc762ed7b2ec3dcfa0e5953070675603048cf33725c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996e2c228496944f82e0f86de3d312bbddbdbb4b0afb0da654f9a483cfbb5f92\",\"dweb:/ipfs/QmS2dwU2fgHb9Mxpi6ydUUz3hBGqtiyKwQktX7tZf5jxaN\"]},\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0x7416e4a04af3bdfdad54246180d322fc4aa12a73fd183576faa06cce3efd66b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ed3fb186515a6546f1f016adc61be2874dbc1964531bf66e9469ef80209414\",\"dweb:/ipfs/QmQspA6qDCZoct316imYrdJvDrdVhmbQ5yLpgrE3LNFWXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 706,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "marketAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 709,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "sideABetAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 712,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "sideBBetAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 715,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "winnerBet",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 718,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "winnerAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 721,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "amountA",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 724,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "amountB",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 727,
								"contract": "contracts/BetPair.sol:BetPair",
								"label": "_stableCoinWrapper",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IBase.sol": {
				"IBase": {
					"abi": [
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getName()": "17d7de7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IBase.sol\":\"IBase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IBase.sol\":{\"keccak256\":\"0x998ed63f5622c2fa44f95f00e0d77088901a13271fdfb33e91c83f0e19366d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e835772ffc3e1547506b91d4c7ef0dfea96ba5eb402442ae735b8969769e7185\",\"dweb:/ipfs/Qme6BQrxhJhHfynCf8XmGyCFJutmPG1RjtHjrHwLjkuQo3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IBet.sol": {
				"IBet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pairAddress",
									"type": "address"
								}
							],
							"name": "addPair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "better",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBetPairs",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketSide",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "matched",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "odds",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMatched",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawPending",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPair(address)": "c2b7bbb6",
							"better()": "718c7d44",
							"getBetPairs()": "12713ee4",
							"marketAddress()": "95623641",
							"marketSide()": "fa6ead20",
							"matched()": "8aac9cca",
							"odds()": "233de126",
							"setMatched(uint256)": "5a4cfc06",
							"stake()": "3a4b66f1",
							"withdrawPending()": "7edbceb1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"}],\"name\":\"addPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"better\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBetPairs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketSide\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"odds\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMatched\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IBet.sol\":\"IBet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IBet.sol\":{\"keccak256\":\"0x0ff1f5c7580690a0d0c0790f83eaff0fcb9b9e08afbb4ef7d95038bb716f791f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://764d585b61e8a3e1fe5770ae964f656a41e3b6b2ee136bd9c66040cc25fd0511\",\"dweb:/ipfs/QmfMpmQaUSrPxXJFzD2y5SqyCmoE7GjNwBff5X7aW8mqW8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IBetPair.sol": {
				"IBetPair": {
					"abi": [
						{
							"inputs": [],
							"name": "amountA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_web3betsAddress",
									"type": "address"
								}
							],
							"name": "settlePair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideABetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideBBetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerBet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"amountA()": "156dcbf0",
							"amountB()": "2efe91ef",
							"marketAddress()": "95623641",
							"settlePair(address,address)": "6b396719",
							"sideABetAddress()": "9c7af579",
							"sideBBetAddress()": "20781828",
							"winnerAddress()": "ed7a4e0b",
							"winnerBet()": "baa1a3ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"amountA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_web3betsAddress\",\"type\":\"address\"}],\"name\":\"settlePair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideABetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideBBetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerBet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IBetPair.sol\":\"IBetPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IBetPair.sol\":{\"keccak256\":\"0x622919a7669b7db6c40f8ffd350259e1f8d2dfb6f9cc05fc48fc42688ecf8a44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4ee76e913c9b1cef4b6eb281c7489de3d2045abf0aff5d9e2f361134fddd933\",\"dweb:/ipfs/QmUCgBUHRpz4pS49eQBVCPYN2TyJJn2dSEyQpf2feDF6fg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IMarket.sol": {
				"IMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_better",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_betAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stake",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "_odds",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "_side",
									"type": "string"
								}
							],
							"name": "addBet",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancelMarket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eventAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEventName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasSetWinningSide",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isCanceled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_winningSide",
									"type": "string"
								}
							],
							"name": "setWinningSide",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideAName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideATotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideBName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sideBTotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "sideAName_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "sideBName_",
									"type": "string"
								}
							],
							"name": "upadteMarket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winningSide",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addBet(address,address,uint256,uint8,string)": "9bf5b845",
							"cancelMarket()": "6bfefd6b",
							"eventAddress()": "fad56779",
							"getEventName()": "b81e43fc",
							"getName()": "17d7de7c",
							"hasSetWinningSide()": "bd92630c",
							"isCanceled()": "0ed5a933",
							"setWinningSide(string)": "b40a4f05",
							"sideAName()": "8eb1a4ad",
							"sideATotalStake()": "d37e2996",
							"sideBName()": "a355f897",
							"sideBTotalStake()": "0b469bda",
							"upadteMarket(string,string,string)": "83bbe262",
							"winningSide()": "fbf06338"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_better\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_betAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_odds\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_side\",\"type\":\"string\"}],\"name\":\"addBet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEventName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasSetWinningSide\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCanceled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_winningSide\",\"type\":\"string\"}],\"name\":\"setWinningSide\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideAName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideATotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideBName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sideBTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sideAName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sideBName_\",\"type\":\"string\"}],\"name\":\"upadteMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningSide\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IMarket.sol\":\"IMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IBase.sol\":{\"keccak256\":\"0x998ed63f5622c2fa44f95f00e0d77088901a13271fdfb33e91c83f0e19366d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e835772ffc3e1547506b91d4c7ef0dfea96ba5eb402442ae735b8969769e7185\",\"dweb:/ipfs/Qme6BQrxhJhHfynCf8XmGyCFJutmPG1RjtHjrHwLjkuQo3\"]},\"contracts/interface/IMarket.sol\":{\"keccak256\":\"0x708f27b0a6483224bb62dc762ed7b2ec3dcfa0e5953070675603048cf33725c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996e2c228496944f82e0f86de3d312bbddbdbb4b0afb0da654f9a483cfbb5f92\",\"dweb:/ipfs/QmS2dwU2fgHb9Mxpi6ydUUz3hBGqtiyKwQktX7tZf5jxaN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"IWeb3BetsFO": {
					"abi": [
						{
							"inputs": [],
							"name": "ecosystemAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdersVig",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isEventAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isSystemAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_vigAmount",
									"type": "uint256"
								}
							],
							"name": "shareBetEarnings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vigPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ecosystemAddress()": "06a5cb3a",
							"ecosystemVig()": "9376b94c",
							"factory()": "c45a0155",
							"holdersAddress()": "0da4ee50",
							"holdersVig()": "486d1e50",
							"isBlack(address)": "332daccf",
							"isEventAdmin(address)": "cb146622",
							"isSystemAdmin(address)": "4fb43199",
							"shareBetEarnings(uint256)": "cbf89c63",
							"stableCoin()": "992642e5",
							"vigPercentage()": "387440e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ecosystemAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersVig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isEventAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSystemAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vigAmount\",\"type\":\"uint256\"}],\"name\":\"shareBetEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vigPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IWeb3BetsFO.sol\":\"IWeb3BetsFO\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IWeb3BetsFO.sol\":{\"keccak256\":\"0x7416e4a04af3bdfdad54246180d322fc4aa12a73fd183576faa06cce3efd66b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ed3fb186515a6546f1f016adc61be2874dbc1964531bf66e9469ef80209414\",\"dweb:/ipfs/QmQspA6qDCZoct316imYrdJvDrdVhmbQ5yLpgrE3LNFWXq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 690,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 483,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 689,
							"linearizedBaseContracts": [
								689
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 689,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 689,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															463,
															483
														],
														"referencedDeclaration": 483,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 461,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 689,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 479,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 475,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 474,
												"id": 481,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 689,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 495,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															553
														],
														"referencedDeclaration": 553,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 494,
												"id": 501,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 689,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 520,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$689",
																				"typeString": "library Address"
																			}
																		],
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 518,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 523,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 530,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													536,
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 539,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 548,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 549,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 546,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 516,
												"id": 551,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 689,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 563,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															570,
															605
														],
														"referencedDeclaration": 605,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 562,
												"id": 568,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 689,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 584,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 583,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													590,
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 589,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 591,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 593,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 600,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 601,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 598,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 581,
												"id": 603,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 576,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 689,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 615,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															622,
															657
														],
														"referencedDeclaration": 657,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 620,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 689,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 636,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 635,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													642,
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 641,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 643,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 650,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 655,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 689,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "7721:582:3",
										"statements": [
											{
												"condition": {
													"id": 669,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "7792:505:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 673,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 683,
																"nodeType": "Block",
																"src": "8234:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 680,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 664,
																					"src": "8259:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 679,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 682,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:3"
																	}
																]
															},
															"id": 684,
															"nodeType": "IfStatement",
															"src": "7872:415:3",
															"trueBody": {
																"id": 678,
																"nodeType": "Block",
																"src": "7899:329:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:3"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 662,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 677,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "7731:566:3",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 670,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 668,
															"id": 671,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 689,
									"src": "7561:742:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 690,
							"src": "194:8111:3",
							"usedErrors": []
						}
					],
					"src": "101:8205:3"
				},
				"id": 3
			},
			"contracts/BetPair.sol": {
				"ast": {
					"absolutePath": "contracts/BetPair.sol",
					"exportedSymbols": {
						"Address": [
							689
						],
						"BetPair": [
							934
						],
						"IBase": [
							942
						],
						"IBet": [
							998
						],
						"IBetPair": [
							1045
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IMarket": [
							1134
						],
						"IWeb3BetsFO": [
							1198
						],
						"SafeERC20": [
							394
						]
					},
					"id": 935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "contracts/interface/IBetPair.sol",
							"file": "./interface/IBetPair.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 1046,
							"src": "58:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IMarket.sol",
							"file": "./interface/IMarket.sol",
							"id": 693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 1135,
							"src": "93:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IBet.sol",
							"file": "./interface/IBet.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 999,
							"src": "127:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
							"file": "./interface/IWeb3BetsFO.sol",
							"id": 695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 1199,
							"src": "158:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 696,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 78,
							"src": "197:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 697,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 395,
							"src": "254:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 698,
										"name": "IBetPair",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1045,
										"src": "341:8:4"
									},
									"id": 699,
									"nodeType": "InheritanceSpecifier",
									"src": "341:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 934,
							"linearizedBaseContracts": [
								934,
								1045
							],
							"name": "BetPair",
							"nameLocation": "330:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 703,
									"libraryName": {
										"id": 700,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "362:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "356:27:4",
									"typeName": {
										"id": 702,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 701,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "376:6:4"
										},
										"referencedDeclaration": 77,
										"src": "376:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"baseFunctions": [
										1005
									],
									"constant": false,
									"functionSelector": "95623641",
									"id": 706,
									"mutability": "mutable",
									"name": "marketAddress",
									"nameLocation": "413:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 705,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "404:8:4"
									},
									"scope": 934,
									"src": "389:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 704,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "389:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"constant": false,
									"functionSelector": "9c7af579",
									"id": 709,
									"mutability": "mutable",
									"name": "sideABetAddress",
									"nameLocation": "457:15:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 708,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "448:8:4"
									},
									"scope": 934,
									"src": "433:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 707,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "433:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1015
									],
									"constant": false,
									"functionSelector": "20781828",
									"id": 712,
									"mutability": "mutable",
									"name": "sideBBetAddress",
									"nameLocation": "503:15:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 711,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "494:8:4"
									},
									"scope": 934,
									"src": "479:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 710,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "479:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1020
									],
									"constant": false,
									"functionSelector": "baa1a3ec",
									"id": 715,
									"mutability": "mutable",
									"name": "winnerBet",
									"nameLocation": "553:9:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 714,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "544:8:4"
									},
									"scope": 934,
									"src": "529:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 713,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1025
									],
									"constant": false,
									"functionSelector": "ed7a4e0b",
									"id": 718,
									"mutability": "mutable",
									"name": "winnerAddress",
									"nameLocation": "593:13:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "584:8:4"
									},
									"scope": 934,
									"src": "569:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 716,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "569:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1030
									],
									"constant": false,
									"functionSelector": "156dcbf0",
									"id": 721,
									"mutability": "mutable",
									"name": "amountA",
									"nameLocation": "634:7:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 720,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "625:8:4"
									},
									"scope": 934,
									"src": "613:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 719,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "613:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"constant": false,
									"functionSelector": "2efe91ef",
									"id": 724,
									"mutability": "mutable",
									"name": "amountB",
									"nameLocation": "669:7:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "660:8:4"
									},
									"scope": 934,
									"src": "648:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 722,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "648:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 727,
									"mutability": "mutable",
									"name": "_stableCoinWrapper",
									"nameLocation": "698:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 934,
									"src": "683:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 726,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 725,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "683:6:4"
										},
										"referencedDeclaration": 77,
										"src": "683:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "888:191:4",
										"statements": [
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 740,
														"name": "marketAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "898:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 741,
														"name": "marketAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "914:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "898:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "898:30:4"
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "sideABetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "938:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 745,
														"name": "sideABetAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "956:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "938:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "938:34:4"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 748,
														"name": "sideBBetAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "982:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 749,
														"name": "sideBBetAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "1000:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "982:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "982:34:4"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "1026:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 753,
														"name": "amountA_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "1036:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1026:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "1026:18:4"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 756,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "1054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 757,
														"name": "amountB_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1064:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1054:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "1054:18:4"
											}
										]
									},
									"id": 761,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "marketAddress_",
												"nameLocation": "753:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "745:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "sideABetAddress_",
												"nameLocation": "785:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "777:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "sideBBetAddress_",
												"nameLocation": "819:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "811:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "amountA_",
												"nameLocation": "850:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "845:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amountB_",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:152:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:4"
									},
									"scope": 934,
									"src": "723:356:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1044
									],
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "1184:1421:4",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "market",
														"nameLocation": "1202:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 932,
														"src": "1194:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMarket_$1134",
															"typeString": "contract IMarket"
														},
														"typeName": {
															"id": 772,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 771,
																"name": "IMarket",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1134,
																"src": "1194:7:4"
															},
															"referencedDeclaration": 1134,
															"src": "1194:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMarket_$1134",
																"typeString": "contract IMarket"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "marketAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "1219:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 774,
														"name": "IMarket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "1211:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMarket_$1134_$",
															"typeString": "type(contract IMarket)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMarket_$1134",
														"typeString": "contract IMarket"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1194:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 779,
																	"name": "market",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "1251:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMarket_$1134",
																		"typeString": "contract IMarket"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "hasSetWinningSide",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1060,
																"src": "1251:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																	"typeString": "function () view external returns (bool)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1251:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b65747320686173206e6f74206265656e20736574746c6564",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1279:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_357c6b7d92bfd437fa7ded5ef6038b561b633c20dd40f9ca432f6113b55c0cd5",
																"typeString": "literal_string \"Markets has not been settled\""
															},
															"value": "Markets has not been settled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_357c6b7d92bfd437fa7ded5ef6038b561b633c20dd40f9ca432f6113b55c0cd5",
																"typeString": "literal_string \"Markets has not been settled\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1243:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "1243:67:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 788,
																				"name": "market",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "1350:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IMarket_$1134",
																					"typeString": "contract IMarket"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "winningSide",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1065,
																			"src": "1350:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																				"typeString": "function () view external returns (string memory)"
																			}
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 786,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1333:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1333:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1333:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 785,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1323:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1323:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "7369646541",
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1403:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_30ac41b3860ef26399c131cbe18e94ab1cd2c7295fb8cba2020943e768450d53",
																			"typeString": "literal_string \"sideA\""
																		},
																		"value": "sideA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_30ac41b3860ef26399c131cbe18e94ab1cd2c7295fb8cba2020943e768450d53",
																			"typeString": "literal_string \"sideA\""
																		}
																	],
																	"expression": {
																		"id": 794,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1386:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1386:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1386:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 793,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1376:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1376:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1323:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 857,
																					"name": "market",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "1947:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IMarket_$1134",
																						"typeString": "contract IMarket"
																					}
																				},
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "winningSide",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1065,
																				"src": "1947:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
																					"typeString": "function () view external returns (string memory)"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1947:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 855,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1930:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1930:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1930:38:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 854,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1920:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1920:49:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "7369646542",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2000:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_acf509066795bba599e870912a34ba17357d0649493861cb4e3c13212626a91e",
																				"typeString": "literal_string \"sideB\""
																			},
																			"value": "sideB"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_acf509066795bba599e870912a34ba17357d0649493861cb4e3c13212626a91e",
																				"typeString": "literal_string \"sideB\""
																			}
																		],
																		"expression": {
																			"id": 863,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1983:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1983:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1983:25:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 862,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1973:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1973:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "1920:89:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 927,
														"nodeType": "Block",
														"src": "2508:70:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "6576656e742061646d696e20656e74657265642020696e76616c69642077696e6e6572",
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2529:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_fbb736eb6b26ee83e13d0b106d9d8d3642a1c7e6d03d5235e286e0d5a76a468b",
																				"typeString": "literal_string \"event admin entered  invalid winner\""
																			},
																			"value": "event admin entered  invalid winner"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_fbb736eb6b26ee83e13d0b106d9d8d3642a1c7e6d03d5235e286e0d5a76a468b",
																				"typeString": "literal_string \"event admin entered  invalid winner\""
																			}
																		],
																		"id": 923,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2522:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2522:45:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 926,
																"nodeType": "ExpressionStatement",
																"src": "2522:45:4"
															}
														]
													},
													"id": 928,
													"nodeType": "IfStatement",
													"src": "1917:661:4",
													"trueBody": {
														"id": 922,
														"nodeType": "Block",
														"src": "2010:485:4",
														"statements": [
															{
																"expression": {
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 869,
																		"name": "winnerBet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "2024:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 870,
																		"name": "sideBBetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "2036:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2024:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 872,
																"nodeType": "ExpressionStatement",
																"src": "2024:27:4"
															},
															{
																"assignments": [
																	875
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 875,
																		"mutability": "mutable",
																		"name": "_winnerBet",
																		"nameLocation": "2070:10:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 922,
																		"src": "2065:15:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBet_$998",
																			"typeString": "contract IBet"
																		},
																		"typeName": {
																			"id": 874,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 873,
																				"name": "IBet",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 998,
																				"src": "2065:4:4"
																			},
																			"referencedDeclaration": 998,
																			"src": "2065:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBet_$998",
																				"typeString": "contract IBet"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 879,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "winnerBet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "2088:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "IBet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "2083:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IBet_$998_$",
																			"typeString": "type(contract IBet)"
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2083:15:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBet_$998",
																		"typeString": "contract IBet"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2065:33:4"
															},
															{
																"expression": {
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 880,
																		"name": "winnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "2112:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 881,
																				"name": "_winnerBet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "2128:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBet_$998",
																					"typeString": "contract IBet"
																				}
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "better",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 964,
																			"src": "2128:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2128:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2112:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 885,
																"nodeType": "ExpressionStatement",
																"src": "2112:35:4"
															},
															{
																"expression": {
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 886,
																		"name": "_stableCoinWrapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "2162:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 888,
																				"name": "_stableCoin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "2190:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 887,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2183:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2183:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"src": "2162:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 891,
																"nodeType": "ExpressionStatement",
																"src": "2162:40:4"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 895,
																			"name": "sideABetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "2252:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 896,
																			"name": "winnerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "2269:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 897,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "2284:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 892,
																			"name": "_stableCoinWrapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "2216:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 171,
																		"src": "2216:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																			"typeString": "function (contract IERC20,address,address,uint256)"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2216:76:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 899,
																"nodeType": "ExpressionStatement",
																"src": "2216:76:4"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 903,
																			"name": "sideBBetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "2342:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 904,
																			"name": "winnerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "2359:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 905,
																					"name": "amountB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "2374:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "39",
																					"id": 906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2384:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_9_by_1",
																						"typeString": "int_const 9"
																					},
																					"value": "9"
																				},
																				"src": "2374:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130",
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2387:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "2374:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 900,
																			"name": "_stableCoinWrapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "2306:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 171,
																		"src": "2306:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																			"typeString": "function (contract IERC20,address,address,uint256)"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2306:84:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 911,
																"nodeType": "ExpressionStatement",
																"src": "2306:84:4"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 915,
																			"name": "sideBBetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "2440:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 916,
																			"name": "winnerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 718,
																			"src": "2457:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 917,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "2472:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130",
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2481:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "2472:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 912,
																			"name": "_stableCoinWrapper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "2404:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 171,
																		"src": "2404:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																			"typeString": "function (contract IERC20,address,address,uint256)"
																		}
																	},
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:80:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 921,
																"nodeType": "ExpressionStatement",
																"src": "2404:80:4"
															}
														]
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "1320:1258:4",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "1413:490:4",
													"statements": [
														{
															"expression": {
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 800,
																	"name": "winnerBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "1427:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 801,
																	"name": "sideABetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1439:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1427:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 803,
															"nodeType": "ExpressionStatement",
															"src": "1427:27:4"
														},
														{
															"assignments": [
																806
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 806,
																	"mutability": "mutable",
																	"name": "_winnerBet",
																	"nameLocation": "1473:10:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 853,
																	"src": "1468:15:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBet_$998",
																		"typeString": "contract IBet"
																	},
																	"typeName": {
																		"id": 805,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 804,
																			"name": "IBet",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 998,
																			"src": "1468:4:4"
																		},
																		"referencedDeclaration": 998,
																		"src": "1468:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBet_$998",
																			"typeString": "contract IBet"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 810,
															"initialValue": {
																"arguments": [
																	{
																		"id": 808,
																		"name": "winnerBet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "1491:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 807,
																	"name": "IBet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "1486:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IBet_$998_$",
																		"typeString": "type(contract IBet)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1486:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBet_$998",
																	"typeString": "contract IBet"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1468:33:4"
														},
														{
															"expression": {
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 811,
																	"name": "winnerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "1515:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 812,
																			"name": "_winnerBet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "1531:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBet_$998",
																				"typeString": "contract IBet"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "better",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 964,
																		"src": "1531:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1531:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1515:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 816,
															"nodeType": "ExpressionStatement",
															"src": "1515:35:4"
														},
														{
															"expression": {
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 817,
																	"name": "_stableCoinWrapper",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "1565:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 819,
																			"name": "_stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 763,
																			"src": "1593:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 818,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "1586:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1586:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "1565:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "1565:40:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 826,
																		"name": "sideABetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "1655:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 827,
																		"name": "winnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "1672:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 828,
																		"name": "amountA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "1687:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 823,
																		"name": "_stableCoinWrapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "1619:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 171,
																	"src": "1619:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:76:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "1619:76:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 834,
																		"name": "sideBBetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "1745:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "winnerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "1762:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 836,
																				"name": "amountB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "1777:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "39",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1787:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_9_by_1",
																					"typeString": "int_const 9"
																				},
																				"value": "9"
																			},
																			"src": "1777:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1791:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1777:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 831,
																		"name": "_stableCoinWrapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "1709:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 171,
																	"src": "1709:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1709:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "1709:85:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 846,
																		"name": "sideBBetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 712,
																		"src": "1844:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 847,
																		"name": "_web3betsAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "1861:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 848,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 724,
																			"src": "1879:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3130",
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1879:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 843,
																		"name": "_stableCoinWrapper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "1808:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 171,
																	"src": "1808:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1808:84:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "ExpressionStatement",
															"src": "1808:84:4"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2594:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 770,
												"id": 931,
												"nodeType": "Return",
												"src": "2587:11:4"
											}
										]
									},
									"functionSelector": "6b396719",
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "settlePair",
									"nameLocation": "1094:10:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 767,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1161:8:4"
									},
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "1113:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1105:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "_web3betsAddress",
												"nameLocation": "1134:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1126:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:47:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1178:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1178:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:6:4"
									},
									"scope": 934,
									"src": "1085:1520:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 935,
							"src": "321:2286:4",
							"usedErrors": []
						}
					],
					"src": "33:2574:4"
				},
				"id": 4
			},
			"contracts/interface/IBase.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IBase.sol",
					"exportedSymbols": {
						"IBase": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 936,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IBase",
							"nameLocation": "68:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17d7de7c",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "89:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "96:2:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "117:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "117:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "116:15:5"
									},
									"scope": 942,
									"src": "80:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "58:76:5",
							"usedErrors": []
						}
					],
					"src": "33:101:5"
				},
				"id": 5
			},
			"contracts/interface/IBet.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IBet.sol",
					"exportedSymbols": {
						"IBet": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "IBet",
							"nameLocation": "68:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3a4b66f1",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "89:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:2:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "119:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "119:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:6:6"
									},
									"scope": 998,
									"src": "80:45:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "233de126",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "odds",
									"nameLocation": "140:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "144:2:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "169:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 951,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "169:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:7:6"
									},
									"scope": 998,
									"src": "131:45:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8aac9cca",
									"id": 959,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matched",
									"nameLocation": "191:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "223:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "222:6:6"
									},
									"scope": 998,
									"src": "182:47:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "718c7d44",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "better",
									"nameLocation": "244:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:6"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "275:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:9:6"
									},
									"scope": 998,
									"src": "235:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fa6ead20",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketSide",
									"nameLocation": "299:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "335:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:15:6"
									},
									"scope": 998,
									"src": "290:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95623641",
									"id": 974,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketAddress",
									"nameLocation": "365:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:2:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "404:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:9:6"
									},
									"scope": 998,
									"src": "356:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "12713ee4",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBetPairs",
									"nameLocation": "428:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "461:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 976,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "461:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 977,
													"nodeType": "ArrayTypeName",
													"src": "461:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:18:6"
									},
									"scope": 998,
									"src": "419:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c2b7bbb6",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPair",
									"nameLocation": "494:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "pairAddress",
												"nameLocation": "510:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "502:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:21:6"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "540:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:6:6"
									},
									"scope": 998,
									"src": "485:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a4cfc06",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMatched",
									"nameLocation": "561:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "577:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "572:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "572:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:14:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "603:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:6:6"
									},
									"scope": 998,
									"src": "552:57:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7edbceb1",
									"id": 997,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawPending",
									"nameLocation": "624:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:0:6"
									},
									"scope": 998,
									"src": "615:36:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 999,
							"src": "58:595:6",
							"usedErrors": []
						}
					],
					"src": "32:621:6"
				},
				"id": 6
			},
			"contracts/interface/IBetPair.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IBetPair.sol",
					"exportedSymbols": {
						"IBetPair": [
							1045
						]
					},
					"id": 1046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1045,
							"linearizedBaseContracts": [
								1045
							],
							"name": "IBetPair",
							"nameLocation": "68:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "95623641",
									"id": 1005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketAddress",
									"nameLocation": "92:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "105:2:7"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "130:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "129:9:7"
									},
									"scope": 1045,
									"src": "83:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9c7af579",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideABetAddress",
									"nameLocation": "154:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "169:2:7"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "194:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:9:7"
									},
									"scope": 1045,
									"src": "145:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "20781828",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideBBetAddress",
									"nameLocation": "218:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "258:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:9:7"
									},
									"scope": 1045,
									"src": "209:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa1a3ec",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "winnerBet",
									"nameLocation": "282:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:2:7"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "316:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:9:7"
									},
									"scope": 1045,
									"src": "273:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ed7a4e0b",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "winnerAddress",
									"nameLocation": "340:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:7"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "378:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:7"
									},
									"scope": 1045,
									"src": "331:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "156dcbf0",
									"id": 1030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "amountA",
									"nameLocation": "402:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "434:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:6:7"
									},
									"scope": 1045,
									"src": "393:47:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2efe91ef",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "amountB",
									"nameLocation": "455:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "487:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "487:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:6:7"
									},
									"scope": 1045,
									"src": "446:47:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6b396719",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "settlePair",
									"nameLocation": "508:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "527:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "519:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_web3betsAddress",
												"nameLocation": "548:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "540:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:47:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "583:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:6:7"
									},
									"scope": 1045,
									"src": "499:90:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1046,
							"src": "58:533:7",
							"usedErrors": []
						}
					],
					"src": "32:559:7"
				},
				"id": 7
			},
			"contracts/interface/IMarket.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IMarket.sol",
					"exportedSymbols": {
						"IBase": [
							942
						],
						"IMarket": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "contracts/interface/IBase.sol",
							"file": "./IBase.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 943,
							"src": "57:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1049,
										"name": "IBase",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "101:5:8"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "101:5:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								942
							],
							"name": "IMarket",
							"nameLocation": "90:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fad56779",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eventAddress",
									"nameLocation": "122:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "134:2:8"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "160:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:9:8"
									},
									"scope": 1134,
									"src": "113:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bd92630c",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasSetWinningSide",
									"nameLocation": "184:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:2:8"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "227:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "227:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:6:8"
									},
									"scope": 1134,
									"src": "175:58:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbf06338",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "winningSide",
									"nameLocation": "248:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:8"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "285:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "285:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:15:8"
									},
									"scope": 1134,
									"src": "239:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0ed5a933",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCanceled",
									"nameLocation": "315:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:8"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "351:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:6:8"
									},
									"scope": 1134,
									"src": "306:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8eb1a4ad",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideAName",
									"nameLocation": "372:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:8"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "407:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "407:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:15:8"
									},
									"scope": 1134,
									"src": "363:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a355f897",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideBName",
									"nameLocation": "437:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:8"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "472:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "472:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:15:8"
									},
									"scope": 1134,
									"src": "428:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d37e2996",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideATotalStake",
									"nameLocation": "502:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:2:8"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "543:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "543:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:6:8"
									},
									"scope": 1134,
									"src": "493:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0b469bda",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sideBTotalStake",
									"nameLocation": "564:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:2:8"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "605:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "605:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:6:8"
									},
									"scope": 1134,
									"src": "555:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9bf5b845",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addBet",
									"nameLocation": "626:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_better",
												"nameLocation": "641:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "633:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "_betAddress",
												"nameLocation": "658:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "650:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "679:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "671:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_odds",
												"nameLocation": "693:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "687:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1097,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "687:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "_side",
												"nameLocation": "714:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "700:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "700:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:88:8"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "738:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "738:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:6:8"
									},
									"scope": 1134,
									"src": "617:127:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b40a4f05",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setWinningSide",
									"nameLocation": "853:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "_winningSide",
												"nameLocation": "882:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "868:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "868:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:28:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "913:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "913:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:6:8"
									},
									"scope": 1134,
									"src": "844:75:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b81e43fc",
									"id": 1117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEventName",
									"nameLocation": "934:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:2:8"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "967:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1114,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "967:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:15:8"
									},
									"scope": 1134,
									"src": "925:57:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6bfefd6b",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelMarket",
									"nameLocation": "997:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:2:8"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1029:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1029:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:6:8"
									},
									"scope": 1134,
									"src": "988:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "83bbe262",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upadteMarket",
									"nameLocation": "1050:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1077:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1063:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1123,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1063:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "sideAName_",
												"nameLocation": "1098:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1084:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1084:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "sideBName_",
												"nameLocation": "1124:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1110:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1110:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:73:8"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "1153:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:6:8"
									},
									"scope": 1134,
									"src": "1041:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "80:1082:8",
							"usedErrors": []
						}
					],
					"src": "33:1129:8"
				},
				"id": 8
			},
			"contracts/interface/IWeb3BetsFO.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IWeb3BetsFO.sol",
					"exportedSymbols": {
						"IWeb3BetsFO": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1198,
							"linearizedBaseContracts": [
								1198
							],
							"name": "IWeb3BetsFO",
							"nameLocation": "68:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "95:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:9"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "127:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:9:9"
									},
									"scope": 1198,
									"src": "86:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06a5cb3a",
									"id": 1146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemAddress",
									"nameLocation": "151:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:9"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "192:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:9"
									},
									"scope": 1198,
									"src": "142:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0da4ee50",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersAddress",
									"nameLocation": "216:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:9"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "255:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:9:9"
									},
									"scope": 1198,
									"src": "207:57:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992642e5",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stableCoin",
									"nameLocation": "279:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:9"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "314:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:9:9"
									},
									"scope": 1198,
									"src": "270:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "486d1e50",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "holdersVig",
									"nameLocation": "338:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "348:2:9"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "373:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "373:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:6:9"
									},
									"scope": 1198,
									"src": "329:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9376b94c",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ecosystemVig",
									"nameLocation": "394:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:9"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "431:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:6:9"
									},
									"scope": 1198,
									"src": "385:52:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "387440e6",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vigPercentage",
									"nameLocation": "452:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:9"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "485:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:6:9"
									},
									"scope": 1198,
									"src": "443:48:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cbf89c63",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "shareBetEarnings",
									"nameLocation": "506:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_vigAmount",
												"nameLocation": "531:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "523:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:9"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:9"
									},
									"scope": 1198,
									"src": "497:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fb43199",
									"id": 1183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSystemAdmin",
									"nameLocation": "567:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "589:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "581:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:18:9"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "617:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1180,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:6:9"
									},
									"scope": 1198,
									"src": "558:65:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb146622",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEventAdmin",
									"nameLocation": "638:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "659:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "651:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:18:9"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "687:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:6:9"
									},
									"scope": 1198,
									"src": "629:64:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "332daccf",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isBlack",
									"nameLocation": "708:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "724:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "716:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:18:9"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "752:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "752:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:6:9"
									},
									"scope": 1198,
									"src": "699:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "58:702:9",
							"usedErrors": []
						}
					],
					"src": "33:727:9"
				},
				"id": 9
			}
		}
	}
}